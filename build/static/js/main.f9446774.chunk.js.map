{"version":3,"sources":["constants/notificationSettings.js","pages/auth/component.jsx","pages/auth/index.js","redux/selectors.js","containers/pageWithHeader/components/drawer.jsx","constants/drawerConstants.js","constants/themingStyles.js","containers/pageWithHeader/component.jsx","containers/pageWithHeader/index.js","pages/main/component.jsx","pages/main/index.js","redux/types.js","redux/actions.js","pages/settings/components/theme.jsx","pages/settings/components/password.jsx","constants/settingsConstants.js","pages/settings/components/index.js","pages/settings/components/language.jsx","pages/settings/components/userData.jsx","pages/settings/components/reset.jsx","pages/settings/component.jsx","pages/settings/index.js","ducks/messages.js","ducks/projects.js","ducks/index.js","utils/dateParse.js","containers/modal/index.js","constants/tableConstants.js","containers/pagination/component.jsx","containers/pagination/index.js","containers/table/component.jsx","containers/table/index.js","containers/withLoader/index.js","pages/projects/components/projectAddForm.jsx","pages/projects/component.jsx","pages/projects/index.js","containers/card/component.jsx","containers/card/index.js","pages/mail/components/message.jsx","pages/mail/components/tab.jsx","containers/tabs/component.jsx","containers/tabs/index.js","pages/mail/component.jsx","constants/messagesConstants.js","pages/mail/index.js","pages/messageCheck/component.jsx","pages/messageCheck/index.js","pages/projectsSave/components/addPictureForm.jsx","pages/projectsSave/components/addTextForm.jsx","pages/projectsSave/component.jsx","pages/projectsSave/index.js","routes.js","App.js","locale/messages_en.js","locale/messages_ru.js","serviceWorker.js","redux/reducers.js","redux/index.js","index.js"],"names":["notificationSettings","insert","container","animationIn","animationOut","dismiss","duration","AuthPageComponent","handleChangeLogin","handleChangePassword","handleLogin","className","fluid","Content","Input","icon","iconPosition","placeholder","type","onChange","Button","onClick","primary","AuthPageContainer","history","useHistory","from","useLocation","state","pathname","useState","login","setLogin","password","setPassword","handlers","e","target","value","localStorage","setItem","replace","store","addNotification","title","message","selectLanguage","language","selectTheme","theme","selectLoading","appState","isLoading","selectProjects","projects","selectActiveMessage","messages","activeMessage","selectActiveTab","activeTab","selectSortedMessages","tabSortedMessages","selectMessages","BarsIcon","handleDrawerVisible","drawerVisible","id","DrawerComponent","children","titles","useIntl","location","handleClick","this","path","removeItem","push","itemStyle","backgroundColor","drawerStyle","maxWidth","style","onMouseLeave","home","mail","settings","logout","drawerItems","map","item","index","bind","key","Icon","name","size","themeStyle","dark","color","transition","light","memo","subtitle","useSelector","marginLeft","styleByTheme","React","props","isVisible","setIsVisible","MainPageComponent","visitors","day","week","month","MainPageContainer","SET_TAB","setProjects","payload","setMessages","setTabSortedMessages","setActiveMessage","setAppState","ChangeTheme","locale","dispatch","useDispatch","isDark","Radio","slider","checked","newTheme","setTheme","ChangePassword","isPasswordChangeShow","setIsPasswordChangeShow","contentStyle","maxHeight","chevronStyle","transform","enterPasswordPlaceholder","repeatPasswordPlaceholder","savePassword","languageOptions","text","Theme","Password","Menu","compact","Dropdown","options","data","setLanguage","simple","userData","reset","clear","err","resetButton","components","SettingsComponent","SettingsPageContainer","getMessages","a","cancelToken","axios","get","serverPath","response","isCancel","console","log","getProjects","dateParse","date","moment","format","ModalWindow","handleClose","isOpen","handleSuccess","Modal","open","onClose","Header","Actions","headerNames","names","accessor","client","createDate","paginationOptions","TablePagination","pageSize","pageCount","page","table","handleChangePageSize","handleChangePage","handleChevronLeft","handleChevronRight","buttons","i","rows","inline","floated","pagination","Item","cursor","disabled","active","PaginationContainer","$handlers","inlineStyle","overflow","headerCells","showPagination","colSpan","length","tableParams","inverted","header","handleSort","isSorted","Table","HeaderCell","sorted","tableData","cells","headerItem","Cell","Row","sortable","selectable","celled","fixed","Body","Footer","fullWidth","reverseDirection","ascending","descending","TableContainer","columnNames","column","setColumn","direction","setDirection","setPage","setPageSize","displayData","setDisplayData","setPageCount","useEffect","slice","Math","ceil","sortBy","reverse","WithLoader","loading","Loader","AddProjectForm","ProjectsPageComponent","handleChange","handleChangeFilter","handleFilterData","handleToggleModal","modalState","handleClickEdit","projectsData","add","delete","update","dense","toggle","search","ProjectsPageContainer","changeCompact","setModalState","filter","setFilter","source","CancelToken","token","responseWithChecked","isChecked","fetchProjects","cancel","Object","values","toString","toLowerCase","indexOf","borderColor","isRead","isImportant","handleCheck","setIsOpen","setStyle","iconName","messageContainerPadding","paddingLeft","transitionDelay","delay","calcDelay","opacity","setTimeout","onContextMenu","preventDefault","onMouseDown","button","Checkbox","content","displayedMessages","setDisplayedMessages","Tab","messagesCounter","tabStyle","borderBottom","tabs","Label","handleCheckAll","tabsNames","renderTabs","setCheck","checkAll","uncheckAll","checkAsImportant","searchPlaceholder","tabFilter","all","isDeleted","read","unread","important","trash","setChecked","countChecked","array","reduce","accum","forEach","getItem","fetchMessages","checkedMessages","MessageCheckPageComponent","handleClickBack","MessageCheckPageContainer","useParams","goBack","inputStyle","display","AddPictureForm","uploadedImage","setUploadedImage","inputRef","useRef","current","click","ref","AddTextForm","Form","TextArea","ProjectSavePageComponent","onBack","isTextModalShow","isPictureModalShow","handleToggleTextModal","handleTogglePictureModal","ProjectSavePageContainer","setIsTextModalShow","setIsPictureModalShow","customRoute","getToken","render","redirectConfig","to","ProtectedRoute","AuthRoute","Routes","en","empty","removeToTrash","remove","ru","App","basename","Boolean","window","hostname","match","messagesInitialState","projectsInitialState","activeProject","themeInitialState","languageInitialState","appInitialState","rootReducer","combineReducers","action","activeProjects","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f9446774.chunk.js","sourcesContent":["export const notificationSettings = {\r\n  insert: \"top\",\r\n  container: \"top-right\",\r\n  animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n  animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n  dismiss: {\r\n    duration: 5000,\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport { Card, Input, Button } from \"semantic-ui-react\";\r\n\r\nconst AuthPageComponent = ({\r\n  handleChangeLogin,\r\n  handleChangePassword,\r\n  handleLogin,\r\n}) => {\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"cardBody\">\r\n        <Card fluid>\r\n          <Card.Content>\r\n            <div className=\"cardContent\">\r\n              <div className=\"cardContent_title\">\r\n                <p>Авторизация</p>\r\n              </div>\r\n\r\n              <div className=\"cardContent_input\">\r\n                <Input\r\n                  fluid\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"login\"\r\n                  type=\"login\"\r\n                  onChange={handleChangeLogin}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"cardContent_input\">\r\n                <Input\r\n                  fluid\r\n                  icon=\"key\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"password\"\r\n                  type=\"password\"\r\n                  onChange={handleChangePassword}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"cardContent_button\">\r\n                <Button onClick={handleLogin} primary>\r\n                  Вход\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card.Content>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPageComponent;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\n\r\nimport AuthComponent from \"./component\";\r\n\r\nconst AuthPageContainer = () => {\r\n  const history = useHistory();\r\n  const { from } = useLocation().state || { from: { pathname: \"/\" } };\r\n\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handlers = {\r\n    handleChangeLogin: (e) => setLogin(e.target.value),\r\n    handleChangePassword: (e) => setPassword(e.target.value),\r\n    handleLogin: () => {\r\n      if (login === \"Admin\" && password === \"1\") {\r\n        localStorage.setItem(\"isAuth\", true);\r\n        history.replace(from);\r\n      } else {\r\n        store.addNotification({\r\n          ...notificationSettings,\r\n          title: \"Ошибка\",\r\n          message: \"Неверный логин или пароль\",\r\n          type: \"danger\",\r\n        });\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <AuthComponent\r\n      handleChangeLogin={handlers.handleChangeLogin}\r\n      handleChangePassword={handlers.handleChangePassword}\r\n      handleLogin={handlers.handleLogin}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthPageContainer;\r\n","export const selectLanguage = (state) => state.language.language;\r\nexport const selectTheme = (state) => state.theme.theme;\r\nexport const selectLoading = (state) => state.appState.isLoading;\r\nexport const selectProjects = (state) => state.projects.projects;\r\nexport const selectActiveMessage = (state) => state.messages.activeMessage;\r\nexport const selectActiveTab = (state) => state.messages.activeTab;\r\nexport const selectSortedMessages = (state) => state.messages.tabSortedMessages;\r\nexport const selectMessages = (state) => state.messages.messages;\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { drawerItems } from \"constants/drawerConstants\";\r\n\r\nconst BarsIcon = ({ handleDrawerVisible, drawerVisible }) => {\r\n  return (\r\n    <div className=\"sidebar-item\">\r\n      <div\r\n        className=\"sidebar-item__icon icon_header\"\r\n        onClick={handleDrawerVisible}\r\n      >\r\n        <div id=\"nav-icon4\" className={drawerVisible ? \" open\" : \"\"}>\r\n          <span></span>\r\n\r\n          <span></span>\r\n\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawerComponent = ({ handleDrawerVisible, drawerVisible, children }) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  const history = useHistory();\r\n\r\n  const { pathname } = history.location;\r\n\r\n  function handleClick() {\r\n    if (this.path === \"/auth\") {\r\n      localStorage.removeItem(\"isAuth\");\r\n      history.push(\"/auth\");\r\n    } else {\r\n      history.push(this.path);\r\n      handleDrawerVisible();\r\n    }\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    drawerVisible && handleDrawerVisible();\r\n  };\r\n\r\n  const itemStyle = {\r\n    backgroundColor: \"#333\",\r\n  };\r\n\r\n  const drawerStyle = { maxWidth: drawerVisible ? \"220px\" : \"70px\" };\r\n\r\n  return (\r\n    <div className=\"drawer\">\r\n      <div\r\n        className=\"sidebar\"\r\n        style={drawerStyle}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <BarsIcon\r\n          handleDrawerVisible={handleDrawerVisible}\r\n          drawerVisible={drawerVisible}\r\n        />\r\n\r\n        {drawerItems(titles).map((item, index) => (\r\n          <div\r\n            className=\"sidebar-item\"\r\n            onClick={handleClick.bind(item)}\r\n            style={pathname === item.path ? itemStyle : {}}\r\n            key={index}\r\n          >\r\n            <div className=\"sidebar-item__icon\">\r\n              <Icon name={item.icon} size=\"big\" />\r\n            </div>\r\n\r\n            <div className=\"sidebar-item__title\">{item.title}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <>{children}</>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerComponent;\r\n","export const drawerItems = (titles) => [\r\n  {\r\n    icon: \"home\",\r\n    title: titles.home,\r\n    path: \"/\",\r\n  },\r\n  {\r\n    icon: \"file\",\r\n    title: titles.projects,\r\n    path: \"/projects\",\r\n  },\r\n  {\r\n    icon: \"mail\",\r\n    title: titles.mail,\r\n    path: \"/mail\",\r\n  },\r\n  {\r\n    icon: \"settings\",\r\n    title: titles.settings,\r\n    path: \"/settings\",\r\n  },\r\n  {\r\n    icon: \"log out\",\r\n    title: titles.logout,\r\n    path: \"/auth\",\r\n  },\r\n];\r\n","export const themeStyle = {\r\n  dark: {\r\n    backgroundColor: \"#333\",\r\n    color: \"white\",\r\n    transition: \"all 0.5s ease\",\r\n  },\r\n  light: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    transition: \"all 0.5s ease\",\r\n  },\r\n};\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport Drawer from \"./components/drawer\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\n\r\nconst PageWithHeaderComponent = ({\r\n  drawerVisible,\r\n  drawerItems,\r\n  handleDrawerVisible,\r\n  title,\r\n  subtitle,\r\n  children,\r\n}) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const style = { marginLeft: drawerVisible ? \"220px\" : \"70px\" };\r\n  const styleByTheme = themeStyle[theme];\r\n\r\n  return (\r\n    <Drawer\r\n      drawerVisible={drawerVisible}\r\n      drawerItems={drawerItems}\r\n      handleDrawerVisible={handleDrawerVisible}\r\n    >\r\n      <div className=\"pageWithHeader\" style={style}>\r\n        <div className=\"header\" style={styleByTheme}>\r\n          <div className=\"headerContent\">\r\n            <div className=\"headerTitle\">{title}</div>\r\n\r\n            {subtitle && <div className=\"headerSubtitle\">/{subtitle}</div>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body\" style={styleByTheme}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default memo(PageWithHeaderComponent);\r\n","import React, { useState } from \"react\";\r\n\r\nimport PageWithHeaderComponent from \"./component\";\r\n\r\nconst PageWithHeaderContainer = (props) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const handleChangeIsVisible = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  return (\r\n    <PageWithHeaderComponent\r\n      handleDrawerVisible={handleChangeIsVisible}\r\n      drawerVisible={isVisible}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PageWithHeaderContainer);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectTheme } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\n\r\nconst MainPageComponent = () => {\r\n  const {\r\n    messages: {\r\n      titles,\r\n      home: { title, visitors, messages },\r\n    },\r\n  } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.home}>\r\n      <div className=\"mainBody\">\r\n        <div className=\"helloWorld\">\r\n          <Card style={themeStyle[theme]} fluid>\r\n            <Card.Content>\r\n              <div className=\"welcomeSlogan\">\r\n                <p>{title}</p>\r\n              </div>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n\r\n        <div className=\"mainInformation\">\r\n          <div className=\"infoBlock\">\r\n            <Card style={themeStyle[theme]} fluid>\r\n              <Card.Content>\r\n                <div className=\"newMessages\">\r\n                  <p className=\"infoTitle\">{messages.title}</p>\r\n\r\n                  <p>0</p>\r\n                </div>\r\n              </Card.Content>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"infoBlock\">\r\n            <Card style={themeStyle[theme]} fluid>\r\n              <Card.Content>\r\n                <div className=\"visitors\">\r\n                  <p className=\"infoTitle\">{visitors.title}</p>\r\n\r\n                  <p>{visitors.day}: 0</p>\r\n\r\n                  <p>{visitors.week}: 0</p>\r\n\r\n                  <p>{visitors.month}: 0</p>\r\n                </div>\r\n              </Card.Content>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default MainPageComponent;\r\n","import React from \"react\";\r\n\r\nimport MainPageComponent from \"./component\";\r\n\r\nconst MainPageContainer = () => {\r\n  return <MainPageComponent />;\r\n};\r\n\r\nexport default MainPageContainer;\r\n","export const SET_MESSAGES = \"MESSAGES/SET_MESSAGES\";\r\nexport const SET_ACTIVE_MESSAGE = \"MESSAGES/SET_ACTIVE_MESSAGE\";\r\nexport const SET_TAB_SORTED_MESSAGES = \"MESSAGES/SET_TAB_SORTED_MESSAGES\";\r\nexport const SET_TAB = \"MESSAGES/SET_TAB\";\r\nexport const SET_PROJECTS = \"PROJECTS/SET_PROJECTS\";\r\nexport const SET_ACTIVE_PROJECT = \"PROJECTS/SET_ACTIVE_PROJECT\";\r\nexport const SET_THEME = \"THEME/SET_THEME\";\r\nexport const SET_LANGUAGE = \"LANGUAGE/SET_LANGUAGE\";\r\nexport const SET_APP_STATE = \"APP_STATE/SET_APP_STATE\";\r\n","import {\r\n  SET_MESSAGES,\r\n  SET_LANGUAGE,\r\n  SET_THEME,\r\n  SET_APP_STATE,\r\n  SET_TAB,\r\n  SET_TAB_SORTED_MESSAGES,\r\n  SET_ACTIVE_MESSAGE,\r\n  SET_ACTIVE_PROJECT,\r\n  SET_PROJECTS,\r\n} from \"./types\";\r\n\r\nexport const setProjects = (projects) => ({\r\n  type: SET_PROJECTS,\r\n  payload: projects,\r\n});\r\n\r\nexport const setActiveProject = (activeProject) => ({\r\n  type: SET_ACTIVE_PROJECT,\r\n  payload: activeProject,\r\n});\r\n\r\nexport const setMessages = (messages) => ({\r\n  type: SET_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const setTabSortedMessages = (tabSortedMessages) => ({\r\n  type: SET_TAB_SORTED_MESSAGES,\r\n  payload: tabSortedMessages,\r\n});\r\n\r\nexport const setActiveMessage = (activeMessage) => ({\r\n  type: SET_ACTIVE_MESSAGE,\r\n  payload: activeMessage,\r\n});\r\n\r\nexport const setTab = (tab) => ({\r\n  type: SET_TAB,\r\n  payload: tab,\r\n});\r\n\r\nexport const setTheme = (theme) => ({\r\n  type: SET_THEME,\r\n  payload: theme,\r\n});\r\n\r\nexport const setLanguage = (language) => ({\r\n  type: SET_LANGUAGE,\r\n  payload: language,\r\n});\r\n\r\nexport const setAppState = (state) => ({\r\n  type: SET_APP_STATE,\r\n  payload: state,\r\n});\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Radio } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\nimport { setTheme } from \"redux/actions\";\r\n\r\nconst ChangeTheme = ({ locale }) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeTheme = () => {\r\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\r\n    dispatch(setTheme(newTheme));\r\n    localStorage.setItem(\"theme\", newTheme);\r\n  };\r\n\r\n  const isDark = theme === \"dark\";\r\n\r\n  return (\r\n    <div id=\"theme\">\r\n      <p>{locale.settings.theme}</p>\r\n      <Radio slider checked={isDark} onChange={handleChangeTheme} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeTheme;\r\n","import React, { useState } from \"react\";\r\nimport { Icon, Input, Button } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst ChangePassword = ({ locale }) => {\r\n  const [isPasswordChangeShow, setIsPasswordChangeShow] = useState(false);\r\n\r\n  const handleOpenPasswordChange = () =>\r\n    setIsPasswordChangeShow(!isPasswordChangeShow);\r\n\r\n  const contentStyle = {\r\n    maxHeight: `${isPasswordChangeShow ? 300 : 0}px`,\r\n  };\r\n\r\n  const chevronStyle = {\r\n    transform: `rotate(${isPasswordChangeShow ? 180 : 0}deg)`,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"passwordChangeHeader\" onClick={handleOpenPasswordChange}>\r\n        <p>{locale.settings.password}</p>\r\n\r\n        <div className=\"chevronIcon\" style={chevronStyle}>\r\n          <Icon name=\"chevron down\"></Icon>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"passwordChange\" style={contentStyle}>\r\n        <div className=\"passwordChange-input\">\r\n          <Input\r\n            size=\"small\"\r\n            fluid\r\n            placeholder={locale.settings.enterPasswordPlaceholder}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"passwordChange-input\">\r\n          <Input\r\n            size=\"small\"\r\n            fluid\r\n            placeholder={locale.settings.repeatPasswordPlaceholder}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"passwordChange-button\">\r\n          <Button>{locale.settings.savePassword}</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","export const languageOptions = [\r\n  { key: 1, text: \"en\", value: \"en\" },\r\n  { key: 2, text: \"ru\", value: \"ru\" },\r\n];\r\n","import Theme from \"./theme\";\r\nimport Password from \"./password\";\r\nimport Language from \"./language\";\r\nimport UserData from \"./userData\";\r\nimport Reset from \"./reset\";\r\n\r\nexport default [Theme, Password, Language, UserData, Reset];\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Menu, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { languageOptions } from \"constants/settingsConstants\";\r\nimport { selectLanguage } from \"redux/selectors\";\r\n\r\nimport \"../style.sass\";\r\nimport { setLanguage } from \"redux/actions\";\r\n\r\nconst Language = ({ locale }) => {\r\n  const language = useSelector(selectLanguage);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeLanguage = (e, data) => {\r\n    const { value } = data;\r\n    dispatch(setLanguage(value));\r\n    localStorage.setItem(\"lang\", value);\r\n  };\r\n\r\n  return (\r\n    <div id=\"language\">\r\n      <p>{locale.settings.language}</p>\r\n      <Menu compact>\r\n        <Dropdown\r\n          options={languageOptions}\r\n          value={language}\r\n          onChange={handleChangeLanguage}\r\n          simple\r\n          item\r\n        />\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Language;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst UserData = ({ locale }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"passwordChangeHeader\">\r\n        <p>{locale.settings.userData}</p>\r\n        <div className=\"chevronIcon\">\r\n          <Icon name=\"chevron down\"></Icon>\r\n        </div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserData;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\n\r\nconst Reset = ({ locale }) => {\r\n  const handleReset = () => {\r\n    try {\r\n      localStorage.clear();\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Сброс\",\r\n        message: \"Произошел сброс настроек\",\r\n        type: \"success\",\r\n      });\r\n    } catch (err) {\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Сброс\",\r\n        message: \"Сброс не удался\",\r\n        type: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"reset\">\r\n      <p>{locale.settings.reset}</p>\r\n      <div>\r\n        <Button onClick={handleReset}>{locale.settings.resetButton}</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectTheme } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport components from \"./components\";\r\n\r\nconst SettingsPageComponent = () => {\r\n  const { messages } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n\r\n  return (\r\n    <PageWithHeader title={messages.titles.settings}>\r\n      <div className=\"settingsBody\">\r\n        {components.map((SettingsComponent, index) => (\r\n          <div key={index} className=\"settingsItem\">\r\n            <Card fluid style={themeStyle[theme]}>\r\n              <Card.Content>\r\n                <SettingsComponent locale={messages} />\r\n              </Card.Content>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default memo(SettingsPageComponent);\r\n","import React from \"react\";\r\n\r\nimport SettingsPageComponent from \"./component\";\r\n\r\nconst SettingsPageContainer = () => {\r\n  return <SettingsPageComponent />;\r\n};\r\n\r\nexport default SettingsPageContainer;\r\n","import axios from \"axios\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\nimport { serverPath } from \"./\";\r\n\r\nexport const getMessages = async ({ cancelToken }) => {\r\n  try {\r\n    const response = await axios.get(`${serverPath}/messages`, {\r\n      cancelToken: cancelToken,\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isCancel(error)) {\r\n      console.log(\"Отмена запроса\");\r\n    } else {\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Ошибка\",\r\n        message: \"Не удалось загрузить сообщения\",\r\n        type: \"danger\",\r\n      });\r\n    }\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\nimport { serverPath } from \"./\";\r\n\r\nexport const getProjects = async ({ cancelToken }) => {\r\n  try {\r\n    const response = await axios.get(`${serverPath}/projects`, {\r\n      cancelToken: cancelToken,\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isCancel(error)) {\r\n      console.log(\"Отмена запроса\");\r\n    } else {\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Ошибка\",\r\n        message: \"Не удалось загрузить проекты\",\r\n        type: \"danger\",\r\n      });\r\n    }\r\n  }\r\n};\r\n","export const serverPath = \"https://localhost:9000\";\r\n\r\nexport * from \"./messages\";\r\nexport * from \"./projects\";\r\n","import moment from \"moment\";\r\n\r\nexport const dateParse = (date) => moment(date).format(\"MMM Do YY hh:mm\");\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"semantic-ui-react\";\r\n\r\nconst ModalWindow = ({\r\n  handleClose,\r\n  isOpen,\r\n  title,\r\n  children,\r\n  handleSuccess,\r\n  size,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal open={isOpen} onClose={handleClose} size={size}>\r\n        <Modal.Header>{title}</Modal.Header>\r\n        <Modal.Content>{children}</Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={handleClose}>Отмена</Button>\r\n          <Button onClick={handleSuccess}>Подтвердить</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","export const headerNames = (names) => [\r\n  { accessor: \"name\", title: names.name },\r\n  { accessor: \"type\", title: names.type },\r\n  { accessor: \"client\", title: names.client },\r\n  { accessor: \"createDate\", title: names.createDate },\r\n];\r\n\r\nexport const paginationOptions = [\r\n  {\r\n    key: 0,\r\n    text: 10,\r\n    value: 10,\r\n  },\r\n  {\r\n    key: 1,\r\n    text: 15,\r\n    value: 15,\r\n  },\r\n  {\r\n    key: 2,\r\n    text: 20,\r\n    value: 20,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Dropdown, Menu, Icon } from \"semantic-ui-react\";\r\n\r\nimport { paginationOptions } from \"constants/tableConstants\";\r\n\r\nconst TablePagination = ({ pageSize, handlers, pageCount, page }) => {\r\n  const {\r\n    messages: { table },\r\n  } = useIntl();\r\n  console.log(handlers);\r\n\r\n  const {\r\n    handleChangePageSize,\r\n    handleChangePage,\r\n    handleChevronLeft,\r\n    handleChevronRight,\r\n  } = handlers;\r\n\r\n  const buttons = [];\r\n\r\n  if (pageCount < 6) {\r\n    for (let i = 1; i <= pageCount; i++) {\r\n      buttons.push(i);\r\n    }\r\n  }\r\n\r\n  if (pageCount >= 6) {\r\n    if (page < 3) {\r\n      for (let i = 1; i <= 3; i++) {\r\n        buttons.push(i);\r\n      }\r\n    } else if (page > pageCount - 2) {\r\n      console.log(\"there\");\r\n      for (let i = pageCount - 4; i <= pageCount; i++) {\r\n        buttons.push(i);\r\n      }\r\n    } else {\r\n      for (let i = page - 1; i <= page + 1; i++) {\r\n        buttons.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (pageCount > 5 && page < pageCount - 2) {\r\n    buttons.push(\"...\");\r\n    buttons.push(pageCount);\r\n  }\r\n\r\n  return (\r\n    <div className=\"tableFooter\">\r\n      <span>\r\n        {table.rows}\r\n        <Dropdown\r\n          inline\r\n          onChange={handleChangePageSize}\r\n          options={paginationOptions}\r\n          value={pageSize}\r\n        />\r\n      </span>\r\n\r\n      <Menu size=\"mini\" floated=\"right\" pagination>\r\n        <Menu.Item icon onClick={handleChevronLeft} cursor=\"pointer\">\r\n          <Icon name=\"chevron left\" />\r\n        </Menu.Item>\r\n\r\n        {buttons.map((item, index) => {\r\n          return item === \"...\" ? (\r\n            <Menu.Item key=\"index\" disabled>\r\n              ...\r\n            </Menu.Item>\r\n          ) : (\r\n            <Menu.Item\r\n              key={index}\r\n              active={page === item}\r\n              onClick={() => handleChangePage(item)}\r\n            >\r\n              {item}\r\n            </Menu.Item>\r\n          );\r\n        })}\r\n\r\n        <Menu.Item icon onClick={handleChevronRight} cursor=\"pointer\">\r\n          <Icon name=\"chevron right\" />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TablePagination;\r\n","import React from \"react\";\r\n\r\nimport Component from \"./component\";\r\n\r\nconst PaginationContainer = ({ handlers, page, pageCount, ...props }) => {\r\n  const $handlers = {\r\n    ...handlers,\r\n    handleChevronLeft: () => page > 1 && handlers.handleChangePage(page - 1),\r\n    handleChevronRight: () =>\r\n      page < pageCount && handlers.handleChangePage(page + 1),\r\n  };\r\n  return (\r\n    <Component\r\n      handlers={$handlers}\r\n      page={page}\r\n      pageCount={pageCount}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaginationContainer;\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nimport TablePagination from \"containers/pagination\";\r\n\r\nconst inlineStyle = { overflow: \"visible\" };\r\n\r\nconst TableComponent = ({\r\n  headerCells,\r\n  data,\r\n  compact,\r\n  handlers,\r\n  showPagination,\r\n  ...props\r\n}) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n\r\n  const colSpan = headerCells.length;\r\n\r\n  const tableParams = {\r\n    compact: compact ? \"very\" : null,\r\n    inverted: theme === \"dark\",\r\n  };\r\n\r\n  const header = headerCells.map((item, index) => {\r\n    const handleSort = handlers.handleSort.bind(item);\r\n    const isSorted = handlers.isSorted.bind(item)();\r\n\r\n    return (\r\n      <Table.HeaderCell onClick={handleSort} sorted={isSorted} key={index}>\r\n        {item.title}\r\n      </Table.HeaderCell>\r\n    );\r\n  });\r\n\r\n  const tableData = data.map((item, index) => {\r\n    const cells = headerCells.map((headerItem, index) => (\r\n      <Table.Cell key={index}>{item[headerItem.accessor]}</Table.Cell>\r\n    ));\r\n\r\n    return <Table.Row key={index}>{cells}</Table.Row>;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        compact={tableParams.compact}\r\n        inverted={tableParams.inverted}\r\n        sortable\r\n        selectable\r\n        celled\r\n        fixed\r\n      >\r\n        <Table.Header>\r\n          <Table.Row>{header}</Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>{tableData}</Table.Body>\r\n\r\n        {showPagination && (\r\n          <Table.Footer fullWidth>\r\n            <Table.Row>\r\n              <Table.HeaderCell style={inlineStyle} colSpan={colSpan}>\r\n                <TablePagination handlers={handlers} {...props} />\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Footer>\r\n        )}\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(TableComponent);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { sortBy } from \"lodash\";\r\n\r\nimport TableComponent from \"./component\";\r\n\r\nconst reverseDirection = {\r\n  ascending: \"descending\",\r\n  descending: \"ascending\",\r\n};\r\n\r\nconst TableContainer = ({ headerNames, tableData, ...props }) => {\r\n  const {\r\n    messages: {\r\n      table: { columnNames },\r\n    },\r\n  } = useIntl();\r\n\r\n  const [column, setColumn] = useState();\r\n  const [direction, setDirection] = useState();\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [displayData, setDisplayData] = useState(tableData);\r\n  const [pageCount, setPageCount] = useState();\r\n\r\n  useEffect(() => {\r\n    setDisplayData(tableData.slice((page - 1) * pageSize, page * pageSize));\r\n    setPageCount(Math.ceil(tableData.length / pageSize));\r\n  }, [tableData, page, pageSize]);\r\n\r\n  const handlers = {\r\n    handleChangePageSize: (e, { value }) => {\r\n      setPageSize(value);\r\n      setPage(1);\r\n    },\r\n    handleChangePage: setPage,\r\n    isSorted: function () {\r\n      return column === this.accessor ? direction : null;\r\n    },\r\n    handleSort: function () {\r\n      if (column !== this.accessor) {\r\n        setDisplayData(sortBy(displayData, [this.accessor]));\r\n        setColumn(this.accessor);\r\n        setDirection(\"ascending\");\r\n      } else {\r\n        setDisplayData(displayData.reverse());\r\n        setDirection(reverseDirection[direction]);\r\n      }\r\n    },\r\n  };\r\n\r\n  const headerCells = headerNames(columnNames);\r\n\r\n  return (\r\n    <TableComponent\r\n      headerCells={headerCells}\r\n      pageSize={pageSize}\r\n      data={displayData}\r\n      handlers={handlers}\r\n      pageCount={pageCount}\r\n      page={page}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TableContainer;\r\n","import React from \"react\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { selectLoading } from \"redux/selectors\";\r\n\r\nconst WithLoader = ({ children }) => {\r\n  const loading = useSelector(selectLoading);\r\n  return <>{loading ? <Loader active inline=\"centered\" /> : children}</>;\r\n};\r\n\r\nexport default WithLoader;\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nconst AddProjectForm = () => {\r\n  return (\r\n    <div className=\"projectAddForm\">\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Название\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Тип проекта\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Клиент\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Дата создания\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProjectForm;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card, Input, Button, Radio } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport Modal from \"containers/modal\";\r\nimport Table from \"containers/table\";\r\nimport WithLoader from \"containers/withLoader\";\r\nimport AddProjectForm from \"./components/projectAddForm\";\r\n\r\nimport { headerNames } from \"constants/tableConstants\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport { selectTheme, selectProjects } from \"redux/selectors\";\r\n\r\nconst ProjectsPageComponent = ({\r\n  compact,\r\n  handleChange,\r\n  handleChangeFilter,\r\n  handleFilterData,\r\n  handleToggleModal,\r\n  modalState,\r\n  handleClickEdit,\r\n}) => {\r\n  const {\r\n    messages: { titles, projects },\r\n  } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n  const projectsData = useSelector(selectProjects);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.projects}>\r\n      <div className=\"projectsBody\">\r\n        <Card fluid style={themeStyle[theme]}>\r\n          <Card.Content>\r\n            <div className=\"projectsContent\">\r\n              <div className=\"projectsTitle\">{projects.title}</div>\r\n\r\n              <div className=\"projectsActions\">\r\n                <div className=\"projectsButtons\">\r\n                  <div className=\"crudButton\">\r\n                    <Button onClick={handleToggleModal}>{projects.add}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <Button>{projects.delete}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <Button onClick={handleClickEdit}>{projects.update}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <p>{projects.dense}</p>\r\n\r\n                    <Radio toggle onChange={handleChange} />\r\n                  </div>\r\n                </div>\r\n\r\n                <Input\r\n                  icon=\"search\"\r\n                  placeholder={projects.search}\r\n                  onChange={handleChangeFilter}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"projectsTable\">\r\n                <WithLoader>\r\n                  {projectsData && (\r\n                    <Table\r\n                      showPagination={true}\r\n                      compact={compact}\r\n                      headerNames={headerNames}\r\n                      tableData={handleFilterData(projectsData)}\r\n                    />\r\n                  )}\r\n                </WithLoader>\r\n              </div>\r\n            </div>\r\n          </Card.Content>\r\n        </Card>\r\n        <Modal\r\n          isOpen={modalState}\r\n          handleClose={handleToggleModal}\r\n          title=\"Добавление проекта\"\r\n          size=\"tiny\"\r\n        >\r\n          <AddProjectForm />\r\n        </Modal>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default ProjectsPageComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getProjects } from \"ducks\";\r\nimport { dateParse } from \"utils\";\r\nimport { setAppState, setProjects } from \"redux/actions\";\r\nimport { selectProjects } from \"redux/selectors\";\r\n\r\nimport ProjectsPageComponent from \"./component\";\r\n\r\nconst ProjectsPageContainer = () => {\r\n  const [compact, changeCompact] = useState(false);\r\n  const [modalState, setModalState] = useState(false);\r\n  const [filter, setFilter] = useState(\"\");\r\n  //const [selectedProject, setSelectedProject] = useState();\r\n\r\n  const projects = useSelector(selectProjects);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleClickEdit = () => history.push(\"/projects/0\");\r\n  const handleToggleModal = () => setModalState(!modalState);\r\n  const handleChange = () => changeCompact(!compact);\r\n  const handleChangeFilter = ({ target: { value } }) => setFilter(value);\r\n  const handleFilterData = (data) =>\r\n    data.filter((item) => {\r\n      const filtered = Object.values(item).filter((value) => {\r\n        const index = value\r\n          .toString()\r\n          .toLowerCase()\r\n          .indexOf(filter.toLowerCase());\r\n\r\n        return index !== -1;\r\n      });\r\n\r\n      return filtered.length > 0;\r\n    });\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    const fetchProjects = async (source) => {\r\n      dispatch(setAppState(true));\r\n\r\n      const response = await getProjects({\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      if (response) {\r\n        const responseWithChecked = response.map((item) => ({\r\n          ...item,\r\n          isChecked: false,\r\n          createDate: dateParse(item.createDate),\r\n        }));\r\n\r\n        dispatch(setProjects(responseWithChecked));\r\n      }\r\n\r\n      dispatch(setAppState(false));\r\n    };\r\n\r\n    !projects && fetchProjects(source);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch, projects]);\r\n\r\n  return (\r\n    <ProjectsPageComponent\r\n      compact={compact}\r\n      modalState={modalState}\r\n      handleChangeFilter={handleChangeFilter}\r\n      handleToggleModal={handleToggleModal}\r\n      handleChange={handleChange}\r\n      handleClickEdit={handleClickEdit}\r\n      handleFilterData={handleFilterData}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProjectsPageContainer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst Card = ({ children }) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const style = {\r\n    borderColor: theme === \"light\" ? \"rgba(0,0,0, 0.15)\" : \"gray\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui-card\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Card);\r\n","import React from \"react\";\r\n\r\nimport CardComponent from \"./component\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst CardContainer = (props) => {\r\n  return <CardComponent {...props} />;\r\n};\r\n\r\nexport default React.memo(CardContainer);\r\n","import React, { useState, useEffect, memo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Icon, Checkbox } from \"semantic-ui-react\";\r\n\r\nimport Card from \"containers/card\";\r\n\r\nimport { setActiveMessage } from \"redux/actions\";\r\nimport { dateParse } from \"utils\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst Message = ({\r\n  title,\r\n  text,\r\n  isRead,\r\n  isImportant,\r\n  handleCheck,\r\n  id,\r\n  isChecked,\r\n  client,\r\n  date,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [style, setStyle] = useState({});\r\n\r\n  const iconName = isRead ? \"envelope open outline\" : \"envelope outline\";\r\n\r\n  const handleChange = () => handleCheck(id);\r\n  const handleContextMenu = (e) => e.preventDefault();\r\n  const handleMouseLeave = () => isOpen && setIsOpen(false);\r\n  const handleMouseDown = (e) => {\r\n    e.preventDefault();\r\n    e.button === 2 && setIsOpen(!isOpen);\r\n  };\r\n  const handleClick = () => {\r\n    dispatch(\r\n      setActiveMessage({\r\n        title: title,\r\n        text: text,\r\n        client: client,\r\n        date: date,\r\n      })\r\n    );\r\n    history.push(`mail/${id}`);\r\n  };\r\n\r\n  const messageContainerPadding = { paddingLeft: isOpen ? \"100px\" : \"0px\" };\r\n\r\n  useEffect(() => {\r\n    const calcDelay = () => {\r\n      const delay = id * 2;\r\n      if (delay < 10) {\r\n        return \"0\" + delay;\r\n      }\r\n      return delay;\r\n    };\r\n\r\n    const style = {\r\n      transitionDelay: `0.${calcDelay()}s`,\r\n      opacity: 1,\r\n    };\r\n\r\n    setTimeout(() => setStyle(style), 0);\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"messageComponent-hover\" onMouseLeave={handleMouseLeave}>\r\n      <div\r\n        className=\"messageComponent\"\r\n        style={{ ...style, ...messageContainerPadding }}\r\n      >\r\n        <div className=\"deleteMessage\">\r\n          <div className=\"actionIcon\">\r\n            <Icon size=\"big\" name=\"trash alternate\" />\r\n          </div>\r\n\r\n          <div className=\"actionIcon\">\r\n            <Icon size=\"big\" name=\"warning\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"messageContainer\">\r\n          <Card>\r\n            <div\r\n              className=\"messageContent\"\r\n              onContextMenu={handleContextMenu}\r\n              onMouseDown={handleMouseDown}\r\n            >\r\n              <div className=\"indicator\">\r\n                {!isRead && <div className=\"readPoint\"></div>}\r\n\r\n                {isImportant && <div className=\"importantPoint\"></div>}\r\n              </div>\r\n\r\n              <div className=\"checkboxContainer\">\r\n                <div className=\"checkbox\">\r\n                  <Checkbox checked={isChecked} onChange={handleChange} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"redirect\" onClick={handleClick}>\r\n                <div className=\"image\">\r\n                  <Icon size=\"huge\" name={iconName}></Icon>\r\n                </div>\r\n\r\n                <div className=\"messageInfo\">\r\n                  <div className=\"messageMeta\">\r\n                    <div className=\"title\">\r\n                      <strong>{client}</strong>\r\n                    </div>\r\n\r\n                    <div className=\"date\">{dateParse(date)}</div>\r\n                  </div>\r\n\r\n                  <div className=\"messageText\">\r\n                    <div className=\"title\">\r\n                      <strong>{title}</strong>\r\n                    </div>\r\n\r\n                    <div className=\"text\">{text}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Message);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Label } from \"semantic-ui-react\";\r\n\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport { setTab } from \"redux/actions\";\r\nimport {\r\n  selectTheme,\r\n  selectActiveTab,\r\n  selectSortedMessages,\r\n} from \"redux/selectors\";\r\n\r\nimport Card from \"containers/card\";\r\nimport Message from \"./message\";\r\nimport Pagination from \"containers/pagination\";\r\n\r\nexport const Content = ({ handleCheck }) => {\r\n  const tabs = useSelector(selectSortedMessages);\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const content = tabs[activeTab];\r\n\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState();\r\n  const [displayedMessages, setDisplayedMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (content) {\r\n      setDisplayedMessages(\r\n        content.slice((page - 1) * pageSize, page * pageSize)\r\n      );\r\n      setPageCount(Math.ceil(content.length / pageSize));\r\n    }\r\n  }, [content, page, pageSize]);\r\n\r\n  const handlers = {\r\n    handleChangePageSize: (e, { value }) => {\r\n      setPageSize(value);\r\n      setPage(1);\r\n    },\r\n    handleChangePage: setPage,\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <>\r\n        <div className=\"messagesInnerArea\">\r\n          {displayedMessages.length > 0 ? (\r\n            displayedMessages.map((item, index) => (\r\n              <Message\r\n                {...item}\r\n                handleCheck={handleCheck}\r\n                index={index}\r\n                key={index}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"emptyMessage\">Empty</div>\r\n          )}\r\n        </div>\r\n        <div className=\"messagesPagination\">\r\n          <Pagination\r\n            handlers={handlers}\r\n            pageSize={pageSize}\r\n            page={page}\r\n            pageCount={pageCount}\r\n          />\r\n        </div>\r\n      </>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const Tab = ({ title, messagesCounter, locale }) => {\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const theme = useSelector(selectTheme);\r\n  const dispatch = useDispatch();\r\n\r\n  const isActive = activeTab === title;\r\n  const activeColor = theme === \"dark\" ? \"white\" : \"grey\";\r\n  const borderColor = isActive ? activeColor : \"transparent\";\r\n  const tabStyle = { borderBottom: `2px solid ${borderColor}` };\r\n\r\n  const handleClick = () => dispatch(setTab(title));\r\n\r\n  return (\r\n    <div style={tabStyle} className=\"tab\" key={title} onClick={handleClick}>\r\n      <span style={themeStyle[theme]}>{locale.tabs[title]}</span>\r\n      {messagesCounter && <Label>{messagesCounter}</Label>}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst Tabs = ({ tabs = [], children }) => {\r\n  return (\r\n    <div className=\"ui-tabs\">\r\n      <div className=\"ui-tabs_tabsContainer\">{tabs}</div>\r\n      <div className=\"ui-tabs_content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Tabs);\r\n","import React from \"react\";\r\n\r\nimport TabsComponent from \"./component\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst TabsContainer = (props) => {\r\n  return <TabsComponent {...props} />;\r\n};\r\n\r\nexport default React.memo(TabsContainer);\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Input } from \"semantic-ui-react\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectActiveTab, selectSortedMessages } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { Tab, Content } from \"./components/tab\";\r\nimport Tabs from \"containers/tabs\";\r\nimport WithLoader from \"containers/withLoader\";\r\n\r\nconst MailPageComponent = ({\r\n  handleCheck,\r\n  handleCheckAll,\r\n  checked,\r\n  tabsNames,\r\n}) => {\r\n  const {\r\n    messages: { titles, mail },\r\n  } = useIntl();\r\n\r\n  const tabs = useSelector(selectSortedMessages);\r\n  const activeTab = useSelector(selectActiveTab);\r\n\r\n  const checkAll = () => handleCheckAll({ setCheck: true });\r\n  const unCheckAll = () => handleCheckAll({ setCheck: false });\r\n\r\n  const renderTabs = tabsNames.map((item, index) => (\r\n    <Tab\r\n      key={index}\r\n      locale={mail}\r\n      messagesCounter={tabs[item] ? tabs[item].length.toString() : \"0\"}\r\n      title={item}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <PageWithHeader title={titles.mail}>\r\n      <div className=\"mailBody\">\r\n        <div className=\"mailActions\">\r\n          <div className=\"buttons\">\r\n            <Button onClick={checkAll}>{mail.buttons.checkAll}</Button>\r\n\r\n            <Button onClick={unCheckAll}>{mail.buttons.uncheckAll}</Button>\r\n\r\n            <Button disabled={checked === 0}>\r\n              {mail.buttons.checkAsImportant}\r\n            </Button>\r\n\r\n            <Button disabled={checked === 0}>\r\n              {mail.buttons[activeTab === \"trash\" ? \"remove\" : \"removeToTrash\"]}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <Input placeholder={mail.searchPlaceholder} icon=\"search\" />\r\n          </div>\r\n        </div>\r\n\r\n        <Tabs tabs={renderTabs}>\r\n          <WithLoader>\r\n            <Content handleCheck={handleCheck} />\r\n          </WithLoader>\r\n        </Tabs>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default memo(MailPageComponent);\r\n","export const tabsNames = [\"all\", \"unread\", \"read\", \"important\", \"trash\"];\r\n\r\nexport const tabFilter = {\r\n  all: (item) => !item.isDeleted,\r\n  read: (item) => item.isRead && !item.isDeleted,\r\n  unread: (item) => !item.isRead && !item.isDeleted,\r\n  important: (item) => item.isImportant && !item.isDeleted,\r\n  trash: (item) => item.isDeleted,\r\n};\r\n","import React, { useEffect, useState, memo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport MainPageComponent from \"./component\";\r\n\r\nimport { getMessages } from \"ducks\";\r\nimport { tabsNames, tabFilter } from \"constants/messagesConstants\";\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\nimport { setAppState, setMessages, setTabSortedMessages } from \"redux/actions\";\r\nimport { selectActiveTab, selectMessages } from \"redux/selectors\";\r\n\r\nconst helpUserNotify = () => {\r\n  const isShow = localStorage.getItem(\"mailNotify\");\r\n\r\n  if (!isShow) {\r\n    localStorage.setItem(\"mailNotify\", \"showed\");\r\n    store.addNotification({\r\n      ...notificationSettings,\r\n      title: \"Подсказка\",\r\n      message:\r\n        \"Воспользуйтесь меню быстрого доступа, кликнув по сообщению правой кнопкой мыши\",\r\n      type: \"info\",\r\n      dismiss: {\r\n        duration: 25000,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nconst MailPageContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const messages = useSelector(selectMessages);\r\n\r\n  const [checked, setChecked] = useState(0);\r\n\r\n  const countChecked = (array) => {\r\n    setChecked(\r\n      array.reduce((accum, item) =>\r\n        typeof accum === \"object\"\r\n          ? accum.isChecked + item.isChecked\r\n          : accum + item.isChecked\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCheck = (id) => {\r\n    const checkedMessages = messages.map((item) => ({\r\n      ...item,\r\n      isChecked: item.id === id ? !item.isChecked : item.isChecked,\r\n    }));\r\n\r\n    const tabs = {};\r\n    tabsNames.forEach((item) => {\r\n      tabs[item] = checkedMessages.filter(tabFilter[item]);\r\n    });\r\n\r\n    dispatch(setMessages(checkedMessages));\r\n    dispatch(setTabSortedMessages(tabs));\r\n    countChecked(checkedMessages);\r\n  };\r\n  const handleCheckAll = ({ setCheck }) => {\r\n    const checkedMessages = messages.map((item) => ({\r\n      ...item,\r\n      isChecked: tabFilter[activeTab](item) ? setCheck : item.isChecked,\r\n    }));\r\n\r\n    const tabs = {};\r\n    tabsNames.forEach((item) => {\r\n      tabs[item] = checkedMessages.filter(tabFilter[item]);\r\n    });\r\n\r\n    dispatch(setMessages(checkedMessages));\r\n    dispatch(setTabSortedMessages(tabs));\r\n    countChecked(checkedMessages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    const fetchMessages = async (source) => {\r\n      dispatch(setAppState(true));\r\n      const response = await getMessages({\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      if (response) {\r\n        const responseWithChecked = response.map((item) => ({\r\n          ...item,\r\n          isChecked: false,\r\n        }));\r\n\r\n        const tabs = {};\r\n        tabsNames.forEach((item) => {\r\n          tabs[item] = responseWithChecked.filter(tabFilter[item]);\r\n        });\r\n\r\n        dispatch(setMessages(responseWithChecked));\r\n        helpUserNotify();\r\n\r\n        dispatch(setTabSortedMessages(tabs));\r\n      }\r\n      dispatch(setAppState(false));\r\n    };\r\n\r\n    !messages && fetchMessages(source);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch, messages]);\r\n\r\n  return (\r\n    <MainPageComponent\r\n      tabsNames={tabsNames}\r\n      messages={messages}\r\n      handleCheckAll={handleCheckAll}\r\n      handleCheck={handleCheck}\r\n      checked={checked}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(MailPageContainer);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport WithLoader from \"containers/withLoader\";\r\nimport { dateParse } from \"utils\";\r\nimport Card from \"containers/card\";\r\n\r\nimport { selectActiveMessage } from \"redux/selectors\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst MessageCheckPageComponent = ({ handleClickBack }) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  const activeMessage = useSelector(selectActiveMessage);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.mail} subtitle={\"read\"}>\r\n      <div className=\"messagePage\">\r\n        <div className=\"messagePage-buttons\">\r\n          <Button onClick={handleClickBack}>Назад</Button>\r\n          <Button>В корзину</Button>\r\n          <Button>Отметить как важное</Button>\r\n        </div>\r\n\r\n        <Card>\r\n          <div className=\"messagePage-body\">\r\n            <WithLoader>\r\n              <div>\r\n                <div className=\"messagePage-Body__date\">\r\n                  <span>Дата: </span>\r\n                  {activeMessage && dateParse(activeMessage.date)}\r\n                </div>\r\n                <div className=\"messagePage-Body__from\">\r\n                  <span>От кого: </span>\r\n                  {activeMessage && activeMessage.client}\r\n                </div>\r\n                <div className=\"messagePage-Body__theme\">\r\n                  <span>Тема: </span>\r\n                  {activeMessage && activeMessage.title}\r\n                </div>\r\n                <div className=\"messagePage-Body__text\">\r\n                  <span>Сообщение: </span>\r\n                  {activeMessage && activeMessage.text}\r\n                </div>\r\n              </div>\r\n            </WithLoader>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default MessageCheckPageComponent;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { getMessages } from \"ducks\";\r\n\r\nimport { tabsNames, tabFilter } from \"constants/messagesConstants\";\r\n\r\nimport MessageCheckComponent from \"./component\";\r\n\r\nimport {\r\n  setActiveMessage,\r\n  setMessages,\r\n  setTabSortedMessages,\r\n  setAppState,\r\n} from \"redux/actions\";\r\n\r\nconst MessageCheckPageContainer = () => {\r\n  const history = useHistory();\r\n  const { message } = useParams();\r\n\r\n  const messages = useSelector((state) => state.messages.messages);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickBack = () => history.goBack();\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    const fetchMessages = async (source) => {\r\n      dispatch(setAppState(true));\r\n\r\n      const response = await getMessages({\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      if (response) {\r\n        const responseWithChecked = response.map((item) => ({\r\n          ...item,\r\n          isChecked: false,\r\n        }));\r\n\r\n        const activeMessage = responseWithChecked.filter(\r\n          (item) => item.id.toString() === message.toString()\r\n        )[0];\r\n\r\n        const tabs = {};\r\n        tabsNames.forEach((item) => {\r\n          tabs[item] = responseWithChecked.filter(tabFilter[item]);\r\n        });\r\n\r\n        dispatch(setMessages(responseWithChecked));\r\n        dispatch(setTabSortedMessages(tabs));\r\n        dispatch(setActiveMessage(activeMessage));\r\n      }\r\n      dispatch(setAppState(false));\r\n    };\r\n\r\n    !messages && fetchMessages(source);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [messages, dispatch, message]);\r\n\r\n  return <MessageCheckComponent handleClickBack={handleClickBack} />;\r\n};\r\n\r\nexport default MessageCheckPageContainer;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst inputStyle = { display: \"none\" };\r\n\r\nconst AddPictureForm = () => {\r\n  const [uploadedImage, setUploadedImage] = useState();\r\n  const inputRef = useRef();\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n  const handleChangeInput = (e) => setUploadedImage(e.target.value);\r\n\r\n  return (\r\n    <div className=\"form-text\">\r\n      <div className=\"form-text_title\">{uploadedImage || \"Выберите файл\"}</div>\r\n      <Button onClick={handleClick}>Выбрать файл</Button>\r\n\r\n      <input\r\n        type=\"file\"\r\n        style={inputStyle}\r\n        ref={inputRef}\r\n        onChange={handleChangeInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPictureForm;\r\n","import React from \"react\";\r\nimport { Form, TextArea } from \"semantic-ui-react\";\r\n\r\nconst AddTextForm = () => {\r\n  return (\r\n    <div className=\"form_textArea\">\r\n      <Form>\r\n        <TextArea placeholder=\"Введите текст\" />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTextForm;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport Modal from \"containers/modal\";\r\nimport AddPictureForm from \"./components/addPictureForm\";\r\nimport AddTextForm from \"./components/addTextForm\";\r\nimport Card from \"containers/card\";\r\n\r\nconst ProjectSavePageComponent = ({\r\n  onBack,\r\n  isTextModalShow,\r\n  isPictureModalShow,\r\n  handleToggleTextModal,\r\n  handleTogglePictureModal,\r\n}) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  return (\r\n    <PageWithHeader title={titles.projects} subtitle={\"read\"}>\r\n      <div className=\"projectsSaveBody\">\r\n        <div className=\"projectsSaveActions\">\r\n          <Button onClick={onBack}>Назад</Button>\r\n          <Button onClick={handleTogglePictureModal}>Добавить картинку</Button>\r\n          <Button onClick={handleToggleTextModal}>Добавить текст</Button>\r\n        </div>\r\n        <Card>\r\n          <div className=\"projectContent\">empty</div>\r\n        </Card>\r\n      </div>\r\n      <Modal\r\n        title=\"Добавить текст\"\r\n        isOpen={isTextModalShow}\r\n        handleClose={handleToggleTextModal}\r\n      >\r\n        <AddTextForm />\r\n      </Modal>\r\n      <Modal\r\n        title=\"Добавить картинку\"\r\n        isOpen={isPictureModalShow}\r\n        handleClose={handleTogglePictureModal}\r\n      >\r\n        <AddPictureForm />\r\n      </Modal>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default ProjectSavePageComponent;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ProjectSavePageComponent from \"./component\";\r\n\r\nconst ProjectSavePageContainer = () => {\r\n  const history = useHistory();\r\n\r\n  const [isTextModalShow, setIsTextModalShow] = useState(false);\r\n  const [isPictureModalShow, setIsPictureModalShow] = useState(false);\r\n\r\n  const onBack = () => history.goBack();\r\n\r\n  const handleToggleTextModal = () => setIsTextModalShow(!isTextModalShow);\r\n  const handleTogglePictureModal = () =>\r\n    setIsPictureModalShow(!isPictureModalShow);\r\n\r\n  return (\r\n    <ProjectSavePageComponent\r\n      isTextModalShow={isTextModalShow}\r\n      isPictureModalShow={isPictureModalShow}\r\n      onBack={onBack}\r\n      handleToggleTextModal={handleToggleTextModal}\r\n      handleTogglePictureModal={handleTogglePictureModal}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProjectSavePageContainer;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthComponent from \"./pages/auth\";\r\nimport MainPageComponent from \"./pages/main\";\r\nimport SettingsPageComponent from \"./pages/settings\";\r\nimport ProjectsPageComponent from \"./pages/projects\";\r\nimport MailPageComponent from \"./pages/mail\";\r\nimport MessageCheckPageComponent from \"./pages/messageCheck\";\r\nimport ProjectsSavePageComponent from \"./pages/projectsSave\";\r\n\r\nconst customRoute = ({ path, getToken }) => ({ children, ...props }) => {\r\n  const renderFunc = ({ location }) => {\r\n    const redirectConfig = {\r\n      pathname: path,\r\n      state: { from: location },\r\n    };\r\n\r\n    return getToken() ? children : <Redirect to={redirectConfig} />;\r\n  };\r\n\r\n  return <Route path={props.path} render={renderFunc}></Route>;\r\n};\r\n\r\nconst ProtectedRoute = customRoute({\r\n  path: \"/auth\",\r\n  getToken: () => localStorage.getItem(\"isAuth\"),\r\n});\r\n\r\nconst AuthRoute = customRoute({\r\n  path: \"/\",\r\n  getToken: () => !localStorage.getItem(\"isAuth\"),\r\n});\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <ProtectedRoute path=\"/mail/:message\">\r\n        <MessageCheckPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/projects/:project\">\r\n        <ProjectsSavePageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/projects\">\r\n        <ProjectsPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/mail\">\r\n        <MailPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/settings\">\r\n        <SettingsPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <AuthRoute path=\"/auth\">\r\n        <AuthComponent />\r\n      </AuthRoute>\r\n\r\n      <ProtectedRoute path=\"/\">\r\n        <MainPageComponent />\r\n      </ProtectedRoute>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport ReactNotification from \"react-notifications-component\";\r\n\r\nimport Routes from \"./routes\";\r\n\r\nimport { messages_ru } from \"locale/messages_ru\";\r\nimport { messages_en } from \"locale/messages_en\";\r\nimport { selectLanguage } from \"redux/selectors\";\r\n\r\nconst messages = {\r\n  en: messages_en,\r\n  ru: messages_ru,\r\n};\r\n\r\nconst App = () => {\r\n  const language = useSelector(selectLanguage);\r\n\r\n  return (\r\n    <>\r\n      <ReactNotification />\r\n      <IntlProvider locale={language} messages={messages[language]}>\r\n        <Router basename={\"portfolio\"}>\r\n          <Routes />\r\n        </Router>\r\n      </IntlProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const messages_en = {\r\n  titles: {\r\n    home: \"Main\",\r\n    projects: \"Projects\",\r\n    mail: \"Mail\",\r\n    settings: \"Settings\",\r\n    logout: \"Exit\",\r\n  },\r\n  mail: {\r\n    empty: \"Empty\",\r\n    searchPlaceholder: \"Search...\",\r\n    buttons: {\r\n      checkAll: \"Select all\",\r\n      uncheckAll: \"Remove selection\",\r\n      checkAsImportant: \"Check as important\",\r\n      removeToTrash: \"Remove to trash\",\r\n      remove: \"Remove\",\r\n    },\r\n    tabs: {\r\n      all: \"All\",\r\n      read: \"Read\",\r\n      unread: \"Unread\",\r\n      important: \"Important\",\r\n      trash: \"Trash\",\r\n    },\r\n  },\r\n  settings: {\r\n    theme: \"Dark theme\",\r\n    language: \"Language\",\r\n    password: \"Change password\",\r\n    userData: \"Change contact information\",\r\n    enterPasswordPlaceholder: \"Enter new password\",\r\n    repeatPasswordPlaceholder: \"Repeat new password\",\r\n    savePassword: \"Save\",\r\n    reset: \"Reset settings\",\r\n    resetButton: \"agree\",\r\n  },\r\n  home: {\r\n    title: \"Welcome, Administrator\",\r\n    visitors: {\r\n      title: \"New visitors for last time\",\r\n      day: \"Today\",\r\n      week: \"This week\",\r\n      month: \"This month\",\r\n    },\r\n    messages: {\r\n      title: \"New messages\",\r\n    },\r\n  },\r\n  projects: {\r\n    title: \"Projects list\",\r\n    add: \"Add project\",\r\n    delete: \"Delete checked\",\r\n    update: \"Edit\",\r\n    search: \"Search...\",\r\n    dense: \"Columns dense\",\r\n  },\r\n  table: {\r\n    rows: \"Rows per page \",\r\n    columnNames: {\r\n      name: \"Name\",\r\n      type: \"Type\",\r\n      client: \"Client\",\r\n      createDate: \"Creation date\",\r\n    },\r\n  },\r\n};\r\n","export const messages_ru = {\r\n  titles: {\r\n    home: \"Главная\",\r\n    projects: \"Проекты\",\r\n    mail: \"Почта\",\r\n    settings: \"Настройки\",\r\n    logout: \"Выход\",\r\n  },\r\n  mail: {\r\n    empty: \"Пусто\",\r\n    searchPlaceholder: \"Найти...\",\r\n    buttons: {\r\n      checkAll: \"Выделить все\",\r\n      uncheckAll: \"Снять выделение\",\r\n      checkAsImportant: \"Отметить как важное\",\r\n      removeToTrash: \"Поместить в корзину\",\r\n      remove: \"Удалить\",\r\n    },\r\n    tabs: {\r\n      all: \"Все\",\r\n      read: \"Прочитанные\",\r\n      unread: \"Непрочитанные\",\r\n      important: \"Важные\",\r\n      trash: \"Корзина\",\r\n    },\r\n  },\r\n  settings: {\r\n    theme: \"Темная тема\",\r\n    language: \"Язык\",\r\n    password: \"Изменить пароль\",\r\n    userData: \"Изменить контактные данные\",\r\n    enterPasswordPlaceholder: \"Введите новый пароль\",\r\n    repeatPasswordPlaceholder: \"Повторите новый пароль\",\r\n    savePassword: \"Сохранить\",\r\n    reset: \"Сброс настроек\",\r\n    resetButton: \"Подтвердить\",\r\n  },\r\n  home: {\r\n    title: \"Добро пожаловать, Администратор\",\r\n    visitors: {\r\n      title: \"Посетители за последнее время\",\r\n      day: \"сегодня\",\r\n      week: \"за неделю\",\r\n      month: \"за месяц\",\r\n    },\r\n    messages: {\r\n      title: \"Новые сообщения\",\r\n    },\r\n  },\r\n  projects: {\r\n    title: \"Список проектов\",\r\n    add: \"Добавить проект\",\r\n    delete: \"Удалить выбранное\",\r\n    update: \"Редактировать\",\r\n    search: \"Найти...\",\r\n    dense: \"Сжатие столбцов\",\r\n  },\r\n  table: {\r\n    rows: \"Количество строк \",\r\n    columnNames: {\r\n      name: \"Название\",\r\n      type: \"Тип проекта\",\r\n      client: \"Клиент\",\r\n      createDate: \"Дата создания\",\r\n    },\r\n  },\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  SET_MESSAGES,\r\n  SET_THEME,\r\n  SET_LANGUAGE,\r\n  SET_APP_STATE,\r\n  SET_TAB,\r\n  SET_TAB_SORTED_MESSAGES,\r\n  SET_ACTIVE_MESSAGE,\r\n  SET_ACTIVE_PROJECT,\r\n  SET_PROJECTS,\r\n} from \"./types\";\r\n\r\nconst messagesInitialState = {\r\n  messages: null,\r\n  tabSortedMessages: [],\r\n  activeMessage: null,\r\n  activeTab: \"all\",\r\n};\r\n\r\nconst projectsInitialState = {\r\n  projects: null,\r\n  activeProject: \"all\",\r\n};\r\n\r\nconst themeInitialState = {\r\n  theme: localStorage.getItem(\"theme\") || \"light\",\r\n};\r\n\r\nconst languageInitialState = {\r\n  language: localStorage.getItem(\"lang\") || \"en\",\r\n};\r\n\r\nconst appInitialState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const messagesReducer = (state = messagesInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_MESSAGES:\r\n      return { ...state, messages: action.payload };\r\n    case SET_TAB_SORTED_MESSAGES:\r\n      return { ...state, tabSortedMessages: action.payload };\r\n    case SET_TAB:\r\n      return { ...state, activeTab: action.payload };\r\n    case SET_ACTIVE_MESSAGE:\r\n      return { ...state, activeMessage: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const projectsReducer = (state = projectsInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROJECTS:\r\n      return { ...state, projects: action.payload };\r\n    case SET_ACTIVE_PROJECT:\r\n      return { ...state, activeProjects: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const themeReducer = (state = themeInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_THEME:\r\n      return { ...state, theme: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const languageReducer = (state = languageInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LANGUAGE:\r\n      return { ...state, language: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const appStateReducer = (state = appInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_APP_STATE:\r\n      return { ...state, isLoading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport {\r\n  messagesReducer,\r\n  themeReducer,\r\n  languageReducer,\r\n  appStateReducer,\r\n  projectsReducer,\r\n} from \"./reducers\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  messages: messagesReducer,\r\n  projects: projectsReducer,\r\n  theme: themeReducer,\r\n  language: languageReducer,\r\n  appState: appStateReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"normalize.css\";\r\nimport \"./index.sass\";\r\nimport App from \"./App\";\r\nimport \"animate.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore } from \"redux\";\r\nimport { rootReducer } from \"./redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}