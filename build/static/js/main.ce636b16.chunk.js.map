{"version":3,"sources":["redux/types.js","redux/actions.js","utils/dateParse.js","utils/cryptHandler.js","constants/messagesConstants.js","utils/getTabSortedMessages.js","constants/notificationSettings.js","utils/notifications.js","redux/selectors.js","utils/requestWrapper.js","ducks/messages.js","ducks/index.js","pages/auth/component.jsx","pages/auth/index.js","ducks/auth.js","containers/pageWithHeader/components/drawer.jsx","constants/drawerConstants.js","constants/themingStyles.js","containers/pageWithHeader/component.jsx","containers/pageWithHeader/index.js","containers/withLoader/index.js","pages/main/component.jsx","pages/main/index.js","ducks/main.js","pages/settings/components/theme.jsx","pages/settings/components/password.jsx","ducks/settings.js","constants/settingsConstants.js","pages/settings/components/index.js","pages/settings/components/language.jsx","pages/settings/components/userData.jsx","pages/settings/components/reset.jsx","pages/settings/component.jsx","pages/settings/index.js","containers/modal/index.js","constants/tableConstants.js","containers/pagination/component.jsx","containers/pagination/index.js","containers/table/component.jsx","containers/table/index.js","pages/projects/components/projectAddForm.jsx","pages/projects/component.jsx","pages/projects/index.js","ducks/projects.js","containers/card/component.jsx","containers/card/index.js","pages/mail/components/message.jsx","pages/mail/components/tab.jsx","containers/tabs/component.jsx","containers/tabs/index.js","pages/mail/component.jsx","pages/mail/index.js","pages/messageCheck/component.jsx","pages/messageCheck/index.js","pages/projectsSave/components/addPictureForm.jsx","pages/projectsSave/components/addTextForm.jsx","pages/projectsSave/component.jsx","pages/projectsSave/index.js","routes.js","App.js","locale/messages_en.js","locale/messages_ru.js","serviceWorker.js","redux/reducers.js","redux/index.js","index.js"],"names":["SET_TAB","setMessages","messages","type","payload","setActiveMessage","activeMessage","setAppState","state","dateParse","date","moment","format","encryptData","item","secretKey","Math","floor","random","encryptedData","CryptoJS","AES","encrypt","toString","tabsNames","tabFilter","all","isDeleted","read","isRead","unread","important","isImportant","trash","sortMessages","dispatch","tabs","forEach","filter","notificationSettings","insert","container","animationIn","animationOut","dismiss","duration","showNotifyByResponseStatusCode","status","messageData","message","store","addNotification","title","selectLanguage","language","selectTheme","theme","selectLoading","appState","isLoading","selectProjects","projects","selectActiveMessage","selectActiveTab","activeTab","selectSortedMessages","tabSortedMessages","selectMessages","selectNewMessagesCounter","counter","selectVisits","visits","queryWrapper","successCallback","method","url","cancelToken","body","errorMessages","getState","a","token","localStorage","getItem","axios","data","headers","authToken","response","console","log","isAxiosError","errorStatus","isCancel","setActualityMessages","serverPath","responseWithChecked","map","isChecked","setPriorityMessages","AuthPageComponent","handleChangeLogin","handleChangePassword","handleLogin","loading","useSelector","className","fluid","Content","Input","icon","iconPosition","placeholder","onChange","Button","onClick","primary","AuthPageContainer","history","useHistory","useDispatch","from","useLocation","pathname","useState","login","setLogin","password","setPassword","handlers","e","target","value","loginData","JSON","stringify","500","_","setItem","replace","checkAuth","BarsIcon","handleDrawerVisible","drawerVisible","id","DrawerComponent","children","titles","useIntl","location","handleClick","this","path","removeItem","push","itemStyle","backgroundColor","drawerStyle","maxWidth","style","onMouseLeave","home","mail","settings","logout","drawerItems","index","bind","key","Icon","name","size","themeStyle","dark","color","transition","light","memo","subtitle","marginLeft","styleByTheme","React","props","isVisible","setIsVisible","WithLoader","Loader","active","inline","MainPageComponent","visitors","day","week","month","MainPageContainer","useEffect","source","CancelToken","getMainInfo","cancel","ChangeTheme","locale","isDark","Radio","slider","checked","newTheme","setTheme","ChangePassword","isPasswordChangeShow","setIsPasswordChangeShow","oldPassword","setOldPassword","repeatPassword","setRepeatPassword","error","setError","contentStyle","maxHeight","chevronStyle","transform","enterOldPasswordPlaceholder","enterPasswordPlaceholder","repeatPasswordPlaceholder","505","200","changePassword","savePassword","languageOptions","text","Theme","Password","Menu","compact","Dropdown","options","setLanguage","simple","userData","reset","clear","err","resetButton","components","SettingsComponent","SettingsPageContainer","ModalWindow","handleClose","isOpen","handleSuccess","Modal","open","onClose","Header","Actions","headerNames","names","accessor","client","createDate","paginationOptions","TablePagination","pageSize","pageCount","page","table","handleChangePageSize","handleChangePage","handleChevronLeft","handleChevronRight","buttons","i","rows","floated","pagination","Item","cursor","disabled","PaginationContainer","$handlers","inlineStyle","overflow","headerCells","showPagination","colSpan","length","tableParams","inverted","header","handleSort","isSorted","Table","HeaderCell","sorted","tableData","cells","headerItem","Cell","Row","sortable","selectable","celled","fixed","Body","Footer","fullWidth","reverseDirection","ascending","descending","TableContainer","columnNames","column","setColumn","direction","setDirection","setPage","setPageSize","displayData","setDisplayData","setPageCount","slice","ceil","sortBy","reverse","AddProjectForm","ProjectsPageComponent","handleChange","handleChangeFilter","handleFilterData","handleToggleModal","modalState","handleClickEdit","projectsData","add","delete","update","dense","toggle","search","ProjectsPageContainer","changeCompact","setModalState","setFilter","getProjects","Object","values","toLowerCase","indexOf","borderColor","handleCheck","_id","setIsOpen","setStyle","iconName","messageContainerPadding","paddingLeft","transitionDelay","delay","calcDelay","opacity","setTimeout","action","onContextMenu","preventDefault","onMouseDown","button","Checkbox","content","displayedMessages","setDisplayedMessages","Tab","messagesCounter","tabStyle","borderBottom","newMessages","Label","handleCheckAll","handleDeleteMessages","handleSetImportantMessages","handleSetUsualMessages","handleReturnMessages","renderTabs","setCheck","checkAll","uncheckAll","undoDelete","checkAsNotImportant","checkAsImportant","switchButtons","searchPlaceholder","setChecked","countChecked","array","checkedCount","reduce","acc","Number","getCheckedMessages","priorityAction","checkedMessages","actualityAction","successCallbackFromUI","getMessages","MessageCheckPageComponent","handleClickBack","handleDelete","handleSetPriority","MessageCheckPageContainer","useParams","getMessage","goBack","inputStyle","display","AddPictureForm","uploadedImage","setUploadedImage","inputRef","useRef","current","click","ref","AddTextForm","Form","TextArea","ProjectSavePageComponent","onBack","isTextModalShow","isPictureModalShow","handleToggleTextModal","handleTogglePictureModal","ProjectSavePageContainer","setIsTextModalShow","setIsPictureModalShow","customRoute","getToken","render","redirectConfig","to","ProtectedRoute","AuthRoute","Routes","en","empty","checkAsUsual","removeToTrash","remove","ru","App","Boolean","window","hostname","match","messagesInitialState","visitsInitialState","projectsInitialState","activeProject","themeInitialState","languageInitialState","appInitialState","rootReducer","combineReducers","activeProjects","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ce636b16.chunk.js","sourcesContent":["export const SET_MESSAGES = \"MESSAGES/SET_MESSAGES\";\r\nexport const SET_NEW_MESSAGES_COUNTER = \"MESSAGES/SET_NEW_MESSAGES_COUNTER\";\r\nexport const SET_ACTIVE_MESSAGE = \"MESSAGES/SET_ACTIVE_MESSAGE\";\r\nexport const SET_TAB_SORTED_MESSAGES = \"MESSAGES/SET_TAB_SORTED_MESSAGES\";\r\nexport const SET_TAB = \"MESSAGES/SET_TAB\";\r\nexport const SET_PROJECTS = \"PROJECTS/SET_PROJECTS\";\r\nexport const SET_ACTIVE_PROJECT = \"PROJECTS/SET_ACTIVE_PROJECT\";\r\nexport const SET_THEME = \"THEME/SET_THEME\";\r\nexport const SET_LANGUAGE = \"LANGUAGE/SET_LANGUAGE\";\r\nexport const SET_APP_STATE = \"APP_STATE/SET_APP_STATE\";\r\nexport const SET_VISITS = \"VISITS/SET_VISITS\";\r\n","import {\r\n  SET_MESSAGES,\r\n  SET_LANGUAGE,\r\n  SET_THEME,\r\n  SET_APP_STATE,\r\n  SET_TAB,\r\n  SET_TAB_SORTED_MESSAGES,\r\n  SET_ACTIVE_MESSAGE,\r\n  SET_ACTIVE_PROJECT,\r\n  SET_PROJECTS,\r\n  SET_NEW_MESSAGES_COUNTER,\r\n  SET_VISITS,\r\n} from \"./types\";\r\n\r\nexport const setVisits = (visits) => ({\r\n  type: SET_VISITS,\r\n  payload: visits,\r\n});\r\n\r\nexport const setProjects = (projects) => ({\r\n  type: SET_PROJECTS,\r\n  payload: projects,\r\n});\r\n\r\nexport const setActiveProject = (activeProject) => ({\r\n  type: SET_ACTIVE_PROJECT,\r\n  payload: activeProject,\r\n});\r\n\r\nexport const setMessages = (messages) => ({\r\n  type: SET_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const setNewMessagesCounter = (counter) => ({\r\n  type: SET_NEW_MESSAGES_COUNTER,\r\n  payload: counter,\r\n});\r\n\r\nexport const setTabSortedMessages = (tabSortedMessages) => ({\r\n  type: SET_TAB_SORTED_MESSAGES,\r\n  payload: tabSortedMessages,\r\n});\r\n\r\nexport const setActiveMessage = (activeMessage) => ({\r\n  type: SET_ACTIVE_MESSAGE,\r\n  payload: activeMessage,\r\n});\r\n\r\nexport const setTab = (tab) => ({\r\n  type: SET_TAB,\r\n  payload: tab,\r\n});\r\n\r\nexport const setTheme = (theme) => ({\r\n  type: SET_THEME,\r\n  payload: theme,\r\n});\r\n\r\nexport const setLanguage = (language) => ({\r\n  type: SET_LANGUAGE,\r\n  payload: language,\r\n});\r\n\r\nexport const setAppState = (state) => ({\r\n  type: SET_APP_STATE,\r\n  payload: state,\r\n});\r\n","import moment from \"moment\";\r\n\r\nexport const dateParse = (date) => moment(date).format(\"MMM Do YY hh:mm\");\r\n","import CryptoJS from \"crypto-js\";\r\n\r\nexport const encryptData = (item) => {\r\n  const secretKey = 100 + Math.floor((1000 - 100) * Math.random());\r\n  const encryptedData = CryptoJS.AES.encrypt(\r\n    item.toString(),\r\n    secretKey.toString()\r\n  ).toString();\r\n\r\n  return `${encryptedData}${secretKey}`;\r\n};\r\n","export const tabsNames = [\"all\", \"unread\", \"read\", \"important\", \"trash\"];\r\n\r\nexport const tabFilter = {\r\n  all: (item) => !item.isDeleted,\r\n  read: (item) => item.isRead && !item.isDeleted,\r\n  unread: (item) => !item.isRead && !item.isDeleted,\r\n  important: (item) => item.isImportant && !item.isDeleted,\r\n  trash: (item) => item.isDeleted,\r\n};\r\n","import { tabsNames, tabFilter } from \"constants/messagesConstants\";\r\nimport { setTabSortedMessages } from \"redux/actions\";\r\n\r\nexport const sortMessages = ({ messages, dispatch }) => {\r\n  const tabs = {};\r\n  tabsNames.forEach((item) => {\r\n    tabs[item] = messages.filter(tabFilter[item]);\r\n  });\r\n\r\n  dispatch(setTabSortedMessages(tabs));\r\n};\r\n","export const notificationSettings = {\r\n  insert: \"top\",\r\n  container: \"top-right\",\r\n  animationIn: [\"animate__animated\", \"animate__fadeInRightBig\"],\r\n  animationOut: [\"animate__animated\", \"animate__fadeOutRightBig\"],\r\n  dismiss: {\r\n    duration: 5000,\r\n  },\r\n};\r\n","import { notificationSettings } from \"constants/notificationSettings\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nexport const showNotifyByResponseStatusCode = (status, messages) => {\r\n  const messageData = messages\r\n    ? messages[status]\r\n    : { message: \"Не удалось завершить операцию\", type: \"danger\" };\r\n\r\n  store.addNotification({\r\n    ...notificationSettings,\r\n    title: messageData.type === \"success\" ? \"Успех\" : \"Ошибка\",\r\n    message: messageData.message,\r\n    type: messageData.type,\r\n  });\r\n};\r\n","export const selectLanguage = (state) => state.language.language;\r\nexport const selectTheme = (state) => state.theme.theme;\r\nexport const selectLoading = (state) => state.appState.isLoading;\r\nexport const selectProjects = (state) => state.projects.projects;\r\nexport const selectActiveMessage = (state) => state.messages.activeMessage;\r\nexport const selectActiveTab = (state) => state.messages.activeTab;\r\nexport const selectSortedMessages = (state) => state.messages.tabSortedMessages;\r\nexport const selectMessages = (state) => state.messages.messages;\r\nexport const selectNewMessagesCounter = (state) => state.messages.counter;\r\nexport const selectVisits = (state) => state.visits.visits;\r\n","import axios from \"axios\";\r\n\r\nimport { selectLoading } from \"redux/selectors\";\r\nimport { setAppState } from \"redux/actions\";\r\nimport { showNotifyByResponseStatusCode } from \"./notifications\";\r\n\r\nexport const queryWrapper = ({\r\n  successCallback,\r\n  method,\r\n  url,\r\n  cancelToken,\r\n  body,\r\n  errorMessages,\r\n}) => async (dispatch, getState) => {\r\n  const isLoading = selectLoading(getState());\r\n  if (!isLoading) {\r\n    dispatch(setAppState(true));\r\n    try {\r\n      const token = localStorage.getItem(\"token\") || \"\";\r\n      const response = await axios({\r\n        method: method,\r\n        url: url,\r\n        data: body,\r\n        headers: { authToken: token },\r\n        cancelToken: cancelToken,\r\n      });\r\n\r\n      successCallback && successCallback(dispatch, response);\r\n      showNotifyByResponseStatusCode(errorMessages, response.status);\r\n    } catch (error) {\r\n      console.log({ ...error });\r\n      if (error.isAxiosError) {\r\n        const errorStatus = error.response && error.response.status;\r\n        axios.isCancel(error)\r\n          ? console.log(\"Отмена запроса\")\r\n          : showNotifyByResponseStatusCode(errorMessages, errorStatus);\r\n      }\r\n    }\r\n    dispatch(setAppState(false));\r\n  }\r\n};\r\n","import { setMessages, setActiveMessage } from \"redux/actions\";\r\nimport { serverPath } from \"ducks\";\r\nimport { queryWrapper } from \"utils\";\r\nimport { sortMessages } from \"utils/getTabSortedMessages\";\r\n\r\nexport const setActualityMessages = ({ cancelToken, data }) =>\r\n  queryWrapper({\r\n    cancelToken: cancelToken,\r\n    url: `${serverPath}/messages/actuality`,\r\n    method: \"post\",\r\n    body: data,\r\n    successCallback: (dispatch, response) => {\r\n      const responseWithChecked = response.data.map((item) => ({\r\n        ...item,\r\n        isChecked: false,\r\n      }));\r\n\r\n      dispatch(setMessages(responseWithChecked));\r\n      sortMessages({ messages: responseWithChecked, dispatch: dispatch });\r\n    },\r\n  });\r\n\r\nexport const setPriorityMessages = ({ cancelToken, data }) =>\r\n  queryWrapper({\r\n    cancelToken: cancelToken,\r\n    url: `${serverPath}/messages/priority`,\r\n    method: \"post\",\r\n    body: data,\r\n    successCallback: (dispatch, response) => {\r\n      const responseWithChecked = response.data.map((item) => ({\r\n        ...item,\r\n        isChecked: false,\r\n      }));\r\n\r\n      dispatch(setMessages(responseWithChecked));\r\n      sortMessages({ messages: responseWithChecked, dispatch: dispatch });\r\n    },\r\n  });\r\n\r\nexport const getMessage = ({ cancelToken, data }) =>\r\n  queryWrapper({\r\n    cancelToken: cancelToken,\r\n    url: `${serverPath}/messages/message`,\r\n    method: \"post\",\r\n    body: data,\r\n    errorMessages: {\r\n      500: { message: \"Не удалось загрузить сообщение\", type: \"danger\" },\r\n    },\r\n    successCallback: (dispatch, response) => {\r\n      dispatch(setActiveMessage(response.data));\r\n    },\r\n  });\r\n\r\nexport const getMessages = ({ cancelToken, successCallbackFromUI }) =>\r\n  queryWrapper({\r\n    cancelToken: cancelToken,\r\n    url: `${serverPath}/messages`,\r\n    method: \"get\",\r\n    errorMessages: {\r\n      500: { message: \"Не удалось загрузить сообщения\", type: \"danger\" },\r\n    },\r\n    successCallback: (dispatch, response) => {\r\n      const responseWithChecked = response.data.map((item) => ({\r\n        ...item,\r\n        isChecked: false,\r\n      }));\r\n\r\n      dispatch(setMessages(responseWithChecked));\r\n      sortMessages({ messages: responseWithChecked, dispatch: dispatch });\r\n\r\n      successCallbackFromUI(responseWithChecked);\r\n    },\r\n  });\r\n","export const serverPath = \"http://localhost:9000\";\r\n\r\nexport * from \"./messages\";\r\nexport * from \"./projects\";\r\nexport * from \"./main\";\r\nexport * from \"./settings\";\r\nexport * from \"./auth\";\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectLoading } from \"redux/selectors\";\r\n\r\nimport { Card, Input, Button } from \"semantic-ui-react\";\r\n\r\nconst AuthPageComponent = ({\r\n  handleChangeLogin,\r\n  handleChangePassword,\r\n  handleLogin,\r\n}) => {\r\n  const loading = useSelector(selectLoading);\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"cardBody\">\r\n        <Card fluid>\r\n          <Card.Content>\r\n            <div className=\"cardContent\">\r\n              <div className=\"cardContent_title\">\r\n                <p>Авторизация</p>\r\n              </div>\r\n\r\n              <div className=\"cardContent_input\">\r\n                <Input\r\n                  fluid\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"login\"\r\n                  type=\"login\"\r\n                  onChange={handleChangeLogin}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"cardContent_input\">\r\n                <Input\r\n                  fluid\r\n                  icon=\"key\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"password\"\r\n                  type=\"password\"\r\n                  onChange={handleChangePassword}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"cardContent_button\">\r\n                <Button loading={loading} onClick={handleLogin} primary>\r\n                  Вход\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card.Content>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPageComponent;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { checkAuth } from \"ducks/auth\";\r\n\r\nimport AuthComponent from \"./component\";\r\n\r\nconst AuthPageContainer = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { from } = useLocation().state || { from: { pathname: \"/\" } };\r\n\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handlers = {\r\n    handleChangeLogin: (e) => setLogin(e.target.value),\r\n    handleChangePassword: (e) => setPassword(e.target.value),\r\n    handleLogin: () => {\r\n      dispatch(\r\n        checkAuth({\r\n          cancelToken: null,\r\n          from: from,\r\n          history: history,\r\n          loginData: {\r\n            login,\r\n            password,\r\n          },\r\n        })\r\n      );\r\n    },\r\n  };\r\n\r\n  return (\r\n    <AuthComponent\r\n      handleChangeLogin={handlers.handleChangeLogin}\r\n      handleChangePassword={handlers.handleChangePassword}\r\n      handleLogin={handlers.handleLogin}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthPageContainer;\r\n","import { serverPath } from \"ducks\";\r\nimport { queryWrapper } from \"utils\";\r\nimport { encryptData } from \"utils\";\r\n\r\nexport const checkAuth = ({ cancelToken, loginData, from, history }) =>\r\n  queryWrapper({\r\n    url: `${serverPath}/auth`,\r\n    method: \"post\",\r\n    body: { data: encryptData(JSON.stringify(loginData)) },\r\n    cancelToken: cancelToken,\r\n    errorMessages: {\r\n      500: { message: \"Неверный логин или пароль\", type: \"danger\" },\r\n    },\r\n    successCallback: (_, response) => {\r\n      localStorage.setItem(\"token\", response.data.token);\r\n      history.replace(from);\r\n    },\r\n  });\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { drawerItems } from \"constants/drawerConstants\";\r\n\r\nconst BarsIcon = ({ handleDrawerVisible, drawerVisible }) => {\r\n  return (\r\n    <div className=\"sidebar-item\">\r\n      <div\r\n        className=\"sidebar-item__icon icon_header\"\r\n        onClick={handleDrawerVisible}\r\n      >\r\n        <div id=\"nav-icon4\" className={drawerVisible ? \" open\" : \"\"}>\r\n          <span></span>\r\n\r\n          <span></span>\r\n\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawerComponent = ({ handleDrawerVisible, drawerVisible, children }) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  const history = useHistory();\r\n\r\n  const { pathname } = history.location;\r\n\r\n  function handleClick() {\r\n    if (this.path === \"/auth\") {\r\n      localStorage.removeItem(\"token\");\r\n      history.push(\"/auth\");\r\n    } else {\r\n      history.push(this.path);\r\n      handleDrawerVisible();\r\n    }\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    drawerVisible && handleDrawerVisible();\r\n  };\r\n\r\n  const itemStyle = {\r\n    backgroundColor: \"#333\",\r\n  };\r\n\r\n  const drawerStyle = { maxWidth: drawerVisible ? \"220px\" : \"70px\" };\r\n\r\n  return (\r\n    <div className=\"drawer\">\r\n      <div\r\n        className=\"sidebar\"\r\n        style={drawerStyle}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <BarsIcon\r\n          handleDrawerVisible={handleDrawerVisible}\r\n          drawerVisible={drawerVisible}\r\n        />\r\n\r\n        {drawerItems(titles).map((item, index) => (\r\n          <div\r\n            className=\"sidebar-item\"\r\n            onClick={handleClick.bind(item)}\r\n            style={pathname === item.path ? itemStyle : {}}\r\n            key={index}\r\n          >\r\n            <div className=\"sidebar-item__icon\">\r\n              <Icon name={item.icon} size=\"big\" />\r\n            </div>\r\n\r\n            <div className=\"sidebar-item__title\">{item.title}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <>{children}</>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerComponent;\r\n","export const drawerItems = (titles) => [\r\n  {\r\n    icon: \"home\",\r\n    title: titles.home,\r\n    path: \"/\",\r\n  },\r\n  {\r\n    icon: \"file\",\r\n    title: titles.projects,\r\n    path: \"/projects\",\r\n  },\r\n  {\r\n    icon: \"mail\",\r\n    title: titles.mail,\r\n    path: \"/mail\",\r\n  },\r\n  {\r\n    icon: \"settings\",\r\n    title: titles.settings,\r\n    path: \"/settings\",\r\n  },\r\n  {\r\n    icon: \"log out\",\r\n    title: titles.logout,\r\n    path: \"/auth\",\r\n  },\r\n];\r\n","export const themeStyle = {\r\n  dark: {\r\n    backgroundColor: \"#333\",\r\n    color: \"white\",\r\n    transition: \"all 0.5s ease\",\r\n  },\r\n  light: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    transition: \"all 0.5s ease\",\r\n  },\r\n};\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport Drawer from \"./components/drawer\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\n\r\nconst PageWithHeaderComponent = ({\r\n  drawerVisible,\r\n  drawerItems,\r\n  handleDrawerVisible,\r\n  title,\r\n  subtitle,\r\n  children,\r\n}) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const style = { marginLeft: drawerVisible ? \"220px\" : \"70px\" };\r\n  const styleByTheme = themeStyle[theme];\r\n\r\n  return (\r\n    <Drawer\r\n      drawerVisible={drawerVisible}\r\n      drawerItems={drawerItems}\r\n      handleDrawerVisible={handleDrawerVisible}\r\n    >\r\n      <div className=\"pageWithHeader\" style={style}>\r\n        <div className=\"header\" style={styleByTheme}>\r\n          <div className=\"headerContent\">\r\n            <div className=\"headerTitle\">{title}</div>\r\n\r\n            {subtitle && <div className=\"headerSubtitle\">/{subtitle}</div>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body\" style={styleByTheme}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default memo(PageWithHeaderComponent);\r\n","import React, { useState } from \"react\";\r\n\r\nimport PageWithHeaderComponent from \"./component\";\r\n\r\nconst PageWithHeaderContainer = (props) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const handleChangeIsVisible = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  return (\r\n    <PageWithHeaderComponent\r\n      handleDrawerVisible={handleChangeIsVisible}\r\n      drawerVisible={isVisible}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PageWithHeaderContainer);\r\n","import React from \"react\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { selectLoading } from \"redux/selectors\";\r\n\r\nconst WithLoader = ({ children }) => {\r\n  const loading = useSelector(selectLoading);\r\n  return <>{loading ? <Loader active inline=\"centered\" /> : children}</>;\r\n};\r\n\r\nexport default WithLoader;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectTheme } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport WithLoader from \"containers/withLoader\";\r\n\r\nconst MainPageComponent = ({ counter, visits }) => {\r\n  const {\r\n    messages: {\r\n      titles,\r\n      home: { title, visitors, messages },\r\n    },\r\n  } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.home}>\r\n      <div className=\"mainBody\">\r\n        <div className=\"helloWorld\">\r\n          <Card style={themeStyle[theme]} fluid>\r\n            <Card.Content>\r\n              <div className=\"welcomeSlogan\">\r\n                <p>{title}</p>\r\n              </div>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n\r\n        <WithLoader>\r\n          <div className=\"mainInformation\">\r\n            <div className=\"infoBlock\">\r\n              <Card style={themeStyle[theme]} fluid>\r\n                <Card.Content>\r\n                  <div className=\"newMessages\">\r\n                    <p className=\"infoTitle\">{messages.title}</p>\r\n\r\n                    <p>{counter}</p>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n            </div>\r\n            <div className=\"infoBlock\">\r\n              <Card style={themeStyle[theme]} fluid>\r\n                <Card.Content>\r\n                  <div className=\"visitors\">\r\n                    <p className=\"infoTitle\">{visitors.title}</p>\r\n\r\n                    <p>\r\n                      {visitors.day}: {visits.day}\r\n                    </p>\r\n\r\n                    <p>\r\n                      {visitors.week}: {visits.week}\r\n                    </p>\r\n\r\n                    <p>\r\n                      {visitors.month}: {visits.month}\r\n                    </p>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </WithLoader>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default MainPageComponent;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getMainInfo } from \"ducks/main\";\r\nimport { selectNewMessagesCounter, selectVisits } from \"redux/selectors\";\r\n\r\nimport MainPageComponent from \"./component\";\r\n\r\nconst MainPageContainer = () => {\r\n  const counter = useSelector(selectNewMessagesCounter);\r\n  const visits = useSelector(selectVisits);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    dispatch(\r\n      getMainInfo({\r\n        cancelToken: source.token,\r\n      })\r\n    );\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return <MainPageComponent counter={counter} visits={visits} />;\r\n};\r\n\r\nexport default MainPageContainer;\r\n","import { setVisits, setNewMessagesCounter } from \"redux/actions\";\r\nimport { queryWrapper } from \"utils\";\r\nimport { serverPath } from \"ducks\";\r\n\r\nexport const getMainInfo = ({ cancelToken }) => {\r\n  return queryWrapper({\r\n    url: `${serverPath}/mainPage/info`,\r\n    method: \"get\",\r\n    cancelToken: cancelToken,\r\n    errorMessages: {\r\n      500: { message: \"Не удалось загрузить данные\", type: \"danger\" },\r\n    },\r\n    successCallback: (dispatch, response) => {\r\n      dispatch(setNewMessagesCounter(response.data.counter));\r\n      dispatch(setVisits(response.data.visits));\r\n    },\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Radio } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\nimport { setTheme } from \"redux/actions\";\r\n\r\nconst ChangeTheme = ({ locale }) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeTheme = () => {\r\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\r\n    dispatch(setTheme(newTheme));\r\n    localStorage.setItem(\"theme\", newTheme);\r\n  };\r\n\r\n  const isDark = theme === \"dark\";\r\n\r\n  return (\r\n    <div id=\"theme\">\r\n      <p>{locale.settings.theme}</p>\r\n      <Radio slider checked={isDark} onChange={handleChangeTheme} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeTheme;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Icon, Input, Button } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\nimport { changePassword } from \"ducks/settings\";\r\n\r\nconst ChangePassword = ({ locale }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isPasswordChangeShow, setIsPasswordChangeShow] = useState(false);\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleChangePassword = (e) => setPassword(e.target.value);\r\n  const handleChangeOldPassword = (e) => setOldPassword(e.target.value);\r\n  const handleChangeRepeatPassword = (e) => {\r\n    error && setError(false);\r\n    setRepeatPassword(e.target.value);\r\n  };\r\n  const handleSubmit = () => {\r\n    if (password !== repeatPassword) {\r\n      setError(true);\r\n    } else {\r\n      dispatch(\r\n        changePassword({ password: password, oldPassword: oldPassword })\r\n      );\r\n      setPassword(\"\");\r\n      setRepeatPassword(\"\");\r\n      setIsPasswordChangeShow(false);\r\n    }\r\n  };\r\n  const handleOpenPasswordChange = () =>\r\n    setIsPasswordChangeShow(!isPasswordChangeShow);\r\n\r\n  const contentStyle = {\r\n    maxHeight: `${isPasswordChangeShow ? 300 : 0}px`,\r\n  };\r\n\r\n  const chevronStyle = {\r\n    transform: `rotate(${isPasswordChangeShow ? 180 : 0}deg)`,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"passwordChangeHeader\" onClick={handleOpenPasswordChange}>\r\n        <p>{locale.settings.password}</p>\r\n\r\n        <div className=\"chevronIcon\" style={chevronStyle}>\r\n          <Icon name=\"chevron down\"></Icon>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"passwordChange\" style={contentStyle}>\r\n        <div className=\"passwordChange-input\">\r\n          <Input\r\n            size=\"small\"\r\n            fluid\r\n            type=\"password\"\r\n            onChange={handleChangeOldPassword}\r\n            value={oldPassword}\r\n            placeholder={locale.settings.enterOldPasswordPlaceholder}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"passwordChange\" style={contentStyle}>\r\n        <div className=\"passwordChange-input\">\r\n          <Input\r\n            size=\"small\"\r\n            fluid\r\n            type=\"password\"\r\n            onChange={handleChangePassword}\r\n            value={password}\r\n            placeholder={locale.settings.enterPasswordPlaceholder}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"passwordChange-input\">\r\n          <Input\r\n            size=\"small\"\r\n            fluid\r\n            type=\"password\"\r\n            error={error}\r\n            onChange={handleChangeRepeatPassword}\r\n            value={repeatPassword}\r\n            placeholder={locale.settings.repeatPasswordPlaceholder}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"passwordChange-button\">\r\n          <Button onClick={handleSubmit}>{locale.settings.savePassword}</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import { serverPath } from \"ducks\";\r\nimport { queryWrapper } from \"utils\";\r\nimport { encryptData } from \"utils\";\r\n\r\nexport const changePassword = ({ password, oldPassword }) =>\r\n  queryWrapper({\r\n    method: \"post\",\r\n    url: `${serverPath}/users/setPassword`,\r\n    body: {\r\n      data: {\r\n        password: encryptData(password),\r\n        oldPassword: encryptData(oldPassword),\r\n      },\r\n    },\r\n    errorMessages: {\r\n      500: { message: \"Не удалось сменить пароль\", type: \"danger\" },\r\n      505: { message: \"Введен неверный старый пароль\", type: \"danger\" },\r\n      200: { message: \"Пароль успешно изменен\", type: \"success\" },\r\n    },\r\n  });\r\n","export const languageOptions = [\r\n  { key: 1, text: \"en\", value: \"en\" },\r\n  { key: 2, text: \"ru\", value: \"ru\" },\r\n];\r\n","import Theme from \"./theme\";\r\nimport Password from \"./password\";\r\nimport Language from \"./language\";\r\nimport UserData from \"./userData\";\r\nimport Reset from \"./reset\";\r\n\r\nexport default [Theme, Password, Language, UserData, Reset];\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Menu, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { languageOptions } from \"constants/settingsConstants\";\r\nimport { selectLanguage } from \"redux/selectors\";\r\n\r\nimport \"../style.sass\";\r\nimport { setLanguage } from \"redux/actions\";\r\n\r\nconst Language = ({ locale }) => {\r\n  const language = useSelector(selectLanguage);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeLanguage = (e, data) => {\r\n    const { value } = data;\r\n    dispatch(setLanguage(value));\r\n    localStorage.setItem(\"lang\", value);\r\n  };\r\n\r\n  return (\r\n    <div id=\"language\">\r\n      <p>{locale.settings.language}</p>\r\n      <Menu compact>\r\n        <Dropdown\r\n          options={languageOptions}\r\n          value={language}\r\n          onChange={handleChangeLanguage}\r\n          simple\r\n          item\r\n        />\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Language;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst UserData = ({ locale }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"passwordChangeHeader\">\r\n        <p>{locale.settings.userData}</p>\r\n        <div className=\"chevronIcon\">\r\n          <Icon name=\"chevron down\"></Icon>\r\n        </div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserData;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\n\r\nconst Reset = ({ locale }) => {\r\n  const handleReset = () => {\r\n    try {\r\n      localStorage.clear();\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Сброс\",\r\n        message: \"Произошел сброс настроек\",\r\n        type: \"success\",\r\n      });\r\n    } catch (err) {\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Сброс\",\r\n        message: \"Сброс не удался\",\r\n        type: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"reset\">\r\n      <p>{locale.settings.reset}</p>\r\n      <div>\r\n        <Button onClick={handleReset}>{locale.settings.resetButton}</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectTheme } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport components from \"./components\";\r\n\r\nconst SettingsPageComponent = () => {\r\n  const { messages } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n\r\n  return (\r\n    <PageWithHeader title={messages.titles.settings}>\r\n      <div className=\"settingsBody\">\r\n        {components.map((SettingsComponent, index) => (\r\n          <div key={index} className=\"settingsItem\">\r\n            <Card fluid style={themeStyle[theme]}>\r\n              <Card.Content>\r\n                <SettingsComponent locale={messages} />\r\n              </Card.Content>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default memo(SettingsPageComponent);\r\n","import React from \"react\";\r\n\r\nimport SettingsPageComponent from \"./component\";\r\n\r\nconst SettingsPageContainer = () => {\r\n  return <SettingsPageComponent />;\r\n};\r\n\r\nexport default SettingsPageContainer;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"semantic-ui-react\";\r\n\r\nconst ModalWindow = ({\r\n  handleClose,\r\n  isOpen,\r\n  title,\r\n  children,\r\n  handleSuccess,\r\n  size,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal open={isOpen} onClose={handleClose} size={size}>\r\n        <Modal.Header>{title}</Modal.Header>\r\n        <Modal.Content>{children}</Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={handleClose}>Отмена</Button>\r\n          <Button onClick={handleSuccess}>Подтвердить</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","export const headerNames = (names) => [\r\n  { accessor: \"name\", title: names.name },\r\n  { accessor: \"type\", title: names.type },\r\n  { accessor: \"client\", title: names.client },\r\n  { accessor: \"createDate\", title: names.createDate },\r\n];\r\n\r\nexport const paginationOptions = [\r\n  {\r\n    key: 0,\r\n    text: 10,\r\n    value: 10,\r\n  },\r\n  {\r\n    key: 1,\r\n    text: 15,\r\n    value: 15,\r\n  },\r\n  {\r\n    key: 2,\r\n    text: 20,\r\n    value: 20,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Dropdown, Menu, Icon } from \"semantic-ui-react\";\r\n\r\nimport { paginationOptions } from \"constants/tableConstants\";\r\n\r\nconst TablePagination = ({ pageSize, handlers, pageCount, page }) => {\r\n  const {\r\n    messages: { table },\r\n  } = useIntl();\r\n\r\n  const {\r\n    handleChangePageSize,\r\n    handleChangePage,\r\n    handleChevronLeft,\r\n    handleChevronRight,\r\n  } = handlers;\r\n\r\n  const buttons = [];\r\n\r\n  if (pageCount < 6) {\r\n    for (let i = 1; i <= pageCount; i++) {\r\n      buttons.push(i);\r\n    }\r\n  }\r\n\r\n  if (pageCount >= 6) {\r\n    if (page < 3) {\r\n      for (let i = 1; i <= 3; i++) {\r\n        buttons.push(i);\r\n      }\r\n    } else if (page > pageCount - 2) {\r\n      console.log(\"there\");\r\n      for (let i = pageCount - 4; i <= pageCount; i++) {\r\n        buttons.push(i);\r\n      }\r\n    } else {\r\n      for (let i = page - 1; i <= page + 1; i++) {\r\n        buttons.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (pageCount > 5 && page < pageCount - 2) {\r\n    buttons.push(\"...\");\r\n    buttons.push(pageCount);\r\n  }\r\n\r\n  return (\r\n    <div className=\"tableFooter\">\r\n      <span>\r\n        {table.rows}\r\n        <Dropdown\r\n          inline\r\n          onChange={handleChangePageSize}\r\n          options={paginationOptions}\r\n          value={pageSize}\r\n        />\r\n      </span>\r\n\r\n      <Menu size=\"mini\" floated=\"right\" pagination>\r\n        <Menu.Item icon onClick={handleChevronLeft} cursor=\"pointer\">\r\n          <Icon name=\"chevron left\" />\r\n        </Menu.Item>\r\n\r\n        {buttons.map((item, index) => {\r\n          return item === \"...\" ? (\r\n            <Menu.Item key=\"index\" disabled>\r\n              ...\r\n            </Menu.Item>\r\n          ) : (\r\n            <Menu.Item\r\n              key={index}\r\n              active={page === item}\r\n              onClick={() => handleChangePage(item)}\r\n            >\r\n              {item}\r\n            </Menu.Item>\r\n          );\r\n        })}\r\n\r\n        <Menu.Item icon onClick={handleChevronRight} cursor=\"pointer\">\r\n          <Icon name=\"chevron right\" />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TablePagination;\r\n","import React from \"react\";\r\n\r\nimport Component from \"./component\";\r\n\r\nconst PaginationContainer = ({ handlers, page, pageCount, ...props }) => {\r\n  const $handlers = {\r\n    ...handlers,\r\n    handleChevronLeft: () => page > 1 && handlers.handleChangePage(page - 1),\r\n    handleChevronRight: () =>\r\n      page < pageCount && handlers.handleChangePage(page + 1),\r\n  };\r\n  return (\r\n    <Component\r\n      handlers={$handlers}\r\n      page={page}\r\n      pageCount={pageCount}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaginationContainer;\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nimport TablePagination from \"containers/pagination\";\r\n\r\nconst inlineStyle = { overflow: \"visible\" };\r\n\r\nconst TableComponent = ({\r\n  headerCells,\r\n  data,\r\n  compact,\r\n  handlers,\r\n  showPagination,\r\n  ...props\r\n}) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n\r\n  const colSpan = headerCells.length;\r\n\r\n  const tableParams = {\r\n    compact: compact ? \"very\" : null,\r\n    inverted: theme === \"dark\",\r\n  };\r\n\r\n  const header = headerCells.map((item, index) => {\r\n    const handleSort = handlers.handleSort.bind(item);\r\n    const isSorted = handlers.isSorted.bind(item)();\r\n\r\n    return (\r\n      <Table.HeaderCell onClick={handleSort} sorted={isSorted} key={index}>\r\n        {item.title}\r\n      </Table.HeaderCell>\r\n    );\r\n  });\r\n\r\n  const tableData = data.map((item, index) => {\r\n    const cells = headerCells.map((headerItem, index) => (\r\n      <Table.Cell key={index}>{item[headerItem.accessor]}</Table.Cell>\r\n    ));\r\n\r\n    return <Table.Row key={index}>{cells}</Table.Row>;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        compact={tableParams.compact}\r\n        inverted={tableParams.inverted}\r\n        sortable\r\n        selectable\r\n        celled\r\n        fixed\r\n      >\r\n        <Table.Header>\r\n          <Table.Row>{header}</Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>{tableData}</Table.Body>\r\n\r\n        {showPagination && (\r\n          <Table.Footer fullWidth>\r\n            <Table.Row>\r\n              <Table.HeaderCell style={inlineStyle} colSpan={colSpan}>\r\n                <TablePagination handlers={handlers} {...props} />\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Footer>\r\n        )}\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(TableComponent);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { sortBy } from \"lodash\";\r\n\r\nimport TableComponent from \"./component\";\r\n\r\nconst reverseDirection = {\r\n  ascending: \"descending\",\r\n  descending: \"ascending\",\r\n};\r\n\r\nconst TableContainer = ({ headerNames, tableData, ...props }) => {\r\n  const {\r\n    messages: {\r\n      table: { columnNames },\r\n    },\r\n  } = useIntl();\r\n\r\n  const [column, setColumn] = useState();\r\n  const [direction, setDirection] = useState();\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [displayData, setDisplayData] = useState(tableData);\r\n  const [pageCount, setPageCount] = useState();\r\n\r\n  useEffect(() => {\r\n    setDisplayData(tableData.slice((page - 1) * pageSize, page * pageSize));\r\n    setPageCount(Math.ceil(tableData.length / pageSize));\r\n  }, [tableData, page, pageSize]);\r\n\r\n  const handlers = {\r\n    handleChangePageSize: (e, { value }) => {\r\n      setPageSize(value);\r\n      setPage(1);\r\n    },\r\n    handleChangePage: setPage,\r\n    isSorted: function () {\r\n      return column === this.accessor ? direction : null;\r\n    },\r\n    handleSort: function () {\r\n      if (column !== this.accessor) {\r\n        setDisplayData(sortBy(displayData, [this.accessor]));\r\n        setColumn(this.accessor);\r\n        setDirection(\"ascending\");\r\n      } else {\r\n        setDisplayData(displayData.reverse());\r\n        setDirection(reverseDirection[direction]);\r\n      }\r\n    },\r\n  };\r\n\r\n  const headerCells = headerNames(columnNames);\r\n\r\n  return (\r\n    <TableComponent\r\n      headerCells={headerCells}\r\n      pageSize={pageSize}\r\n      data={displayData}\r\n      handlers={handlers}\r\n      pageCount={pageCount}\r\n      page={page}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TableContainer;\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nconst AddProjectForm = () => {\r\n  return (\r\n    <div className=\"projectAddForm\">\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Название\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Тип проекта\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Клиент\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Дата создания\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProjectForm;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card, Input, Button, Radio } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport Modal from \"containers/modal\";\r\nimport Table from \"containers/table\";\r\nimport WithLoader from \"containers/withLoader\";\r\nimport AddProjectForm from \"./components/projectAddForm\";\r\n\r\nimport { headerNames } from \"constants/tableConstants\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport { selectTheme, selectProjects } from \"redux/selectors\";\r\n\r\nconst ProjectsPageComponent = ({\r\n  compact,\r\n  handleChange,\r\n  handleChangeFilter,\r\n  handleFilterData,\r\n  handleToggleModal,\r\n  modalState,\r\n  handleClickEdit,\r\n}) => {\r\n  const {\r\n    messages: { titles, projects },\r\n  } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n  const projectsData = useSelector(selectProjects);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.projects}>\r\n      <div className=\"projectsBody\">\r\n        <Card fluid style={themeStyle[theme]}>\r\n          <Card.Content>\r\n            <div className=\"projectsContent\">\r\n              <div className=\"projectsTitle\">{projects.title}</div>\r\n\r\n              <div className=\"projectsActions\">\r\n                <div className=\"projectsButtons\">\r\n                  <div className=\"crudButton\">\r\n                    <Button onClick={handleToggleModal}>{projects.add}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <Button>{projects.delete}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <Button onClick={handleClickEdit}>{projects.update}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <p>{projects.dense}</p>\r\n\r\n                    <Radio toggle onChange={handleChange} />\r\n                  </div>\r\n                </div>\r\n\r\n                <Input\r\n                  icon=\"search\"\r\n                  placeholder={projects.search}\r\n                  onChange={handleChangeFilter}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"projectsTable\">\r\n                <WithLoader>\r\n                  {projectsData && (\r\n                    <Table\r\n                      showPagination={true}\r\n                      compact={compact}\r\n                      headerNames={headerNames}\r\n                      tableData={handleFilterData(projectsData)}\r\n                    />\r\n                  )}\r\n                </WithLoader>\r\n              </div>\r\n            </div>\r\n          </Card.Content>\r\n        </Card>\r\n        <Modal\r\n          isOpen={modalState}\r\n          handleClose={handleToggleModal}\r\n          title=\"Добавление проекта\"\r\n          size=\"tiny\"\r\n        >\r\n          <AddProjectForm />\r\n        </Modal>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default ProjectsPageComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getProjects } from \"ducks\";\r\nimport { selectProjects } from \"redux/selectors\";\r\n\r\nimport ProjectsPageComponent from \"./component\";\r\n\r\nconst ProjectsPageContainer = () => {\r\n  const [compact, changeCompact] = useState(false);\r\n  const [modalState, setModalState] = useState(false);\r\n  const [filter, setFilter] = useState(\"\");\r\n  //const [selectedProject, setSelectedProject] = useState();\r\n\r\n  const projects = useSelector(selectProjects);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleClickEdit = () => history.push(\"/projects/0\");\r\n  const handleToggleModal = () => setModalState(!modalState);\r\n  const handleChange = () => changeCompact(!compact);\r\n  const handleChangeFilter = ({ target: { value } }) => setFilter(value);\r\n  //const handleDeleteProjects = (projects) => {};\r\n  const handleFilterData = (data) =>\r\n    data.filter((item) => {\r\n      const filtered = Object.values(item).filter((value) => {\r\n        const index = value\r\n          .toString()\r\n          .toLowerCase()\r\n          .indexOf(filter.toLowerCase());\r\n\r\n        return index !== -1;\r\n      });\r\n\r\n      return filtered.length > 0;\r\n    });\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    !projects &&\r\n      dispatch(\r\n        getProjects({\r\n          cancelToken: source.token,\r\n        })\r\n      );\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch, projects]);\r\n\r\n  return (\r\n    <ProjectsPageComponent\r\n      compact={compact}\r\n      modalState={modalState}\r\n      handleChangeFilter={handleChangeFilter}\r\n      handleToggleModal={handleToggleModal}\r\n      handleChange={handleChange}\r\n      handleClickEdit={handleClickEdit}\r\n      handleFilterData={handleFilterData}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProjectsPageContainer;\r\n","import { dateParse } from \"utils\";\r\nimport { setProjects } from \"redux/actions\";\r\nimport { serverPath } from \"ducks\";\r\nimport { queryWrapper } from \"utils\";\r\n\r\nexport const deleteProjects = () => {};\r\n\r\nexport const getProjects = ({ cancelToken }) => {\r\n  return queryWrapper({\r\n    cancelToken: cancelToken,\r\n    url: `${serverPath}/projects`,\r\n    method: \"get\",\r\n    errorMessages: {\r\n      500: { message: \"Не удалось загрузить проекты\", type: \"danger\" },\r\n    },\r\n    successCallback: (dispatch, response) => {\r\n      const responseWithChecked = response.data.map((item) => ({\r\n        ...item,\r\n        isChecked: false,\r\n        createDate: dateParse(item.createDate),\r\n      }));\r\n\r\n      dispatch(setProjects(responseWithChecked));\r\n    },\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst Card = ({ children }) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const style = {\r\n    borderColor: theme === \"light\" ? \"rgba(0,0,0, 0.15)\" : \"gray\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui-card\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Card);\r\n","import React from \"react\";\r\n\r\nimport CardComponent from \"./component\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst CardContainer = (props) => {\r\n  return <CardComponent {...props} />;\r\n};\r\n\r\nexport default React.memo(CardContainer);\r\n","import React, { useState, useEffect, memo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Icon, Checkbox } from \"semantic-ui-react\";\r\n\r\nimport Card from \"containers/card\";\r\n\r\nimport { setActiveMessage } from \"redux/actions\";\r\nimport { dateParse } from \"utils\";\r\nimport { setActualityMessages, setPriorityMessages } from \"ducks\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst Message = ({\r\n  title,\r\n  text,\r\n  isRead,\r\n  isImportant,\r\n  handleCheck,\r\n  id,\r\n  _id,\r\n  isChecked,\r\n  client,\r\n  date,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [style, setStyle] = useState({});\r\n\r\n  const iconName = isRead ? \"envelope open outline\" : \"envelope outline\";\r\n\r\n  const handleChange = () => handleCheck(id);\r\n  const handleContextMenu = (e) => e.preventDefault();\r\n  const handleMouseLeave = () => isOpen && setIsOpen(false);\r\n  const handleSetPriority = () => {\r\n    dispatch(\r\n      setPriorityMessages({\r\n        data: { messages: [_id], action: !isImportant },\r\n      })\r\n    );\r\n  };\r\n  const handleDeleteMessage = () => {\r\n    dispatch(\r\n      setActualityMessages({\r\n        data: { messages: [_id], action: true },\r\n      })\r\n    );\r\n  };\r\n  const handleMouseDown = (e) => {\r\n    e.preventDefault();\r\n    e.button === 2 && setIsOpen(!isOpen);\r\n  };\r\n  const handleClick = () => {\r\n    dispatch(\r\n      setActiveMessage({\r\n        title: title,\r\n        text: text,\r\n        client: client,\r\n        date: date,\r\n      })\r\n    );\r\n    history.push(`mail/${_id}`);\r\n  };\r\n\r\n  const messageContainerPadding = { paddingLeft: isOpen ? \"100px\" : \"0px\" };\r\n\r\n  useEffect(() => {\r\n    const calcDelay = () => {\r\n      const delay = id * 2;\r\n      if (delay < 10) {\r\n        return \"0\" + delay;\r\n      }\r\n      return delay;\r\n    };\r\n\r\n    const style = {\r\n      transitionDelay: `0.${calcDelay()}s`,\r\n      opacity: 1,\r\n    };\r\n\r\n    setTimeout(() => setStyle(style), 0);\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"messageComponent-hover\" onMouseLeave={handleMouseLeave}>\r\n      <div\r\n        className=\"messageComponent\"\r\n        style={{ ...style, ...messageContainerPadding }}\r\n      >\r\n        <div className=\"deleteMessage\">\r\n          <div className=\"actionIcon\">\r\n            <Icon\r\n              onClick={handleDeleteMessage}\r\n              size=\"big\"\r\n              name=\"trash alternate\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"actionIcon\">\r\n            <Icon onClick={handleSetPriority} size=\"big\" name=\"warning\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"messageContainer\">\r\n          <Card>\r\n            <div\r\n              className=\"messageContent\"\r\n              onContextMenu={handleContextMenu}\r\n              onMouseDown={handleMouseDown}\r\n            >\r\n              <div className=\"indicator\">\r\n                {!isRead && <div className=\"readPoint\"></div>}\r\n\r\n                {isImportant && <div className=\"importantPoint\"></div>}\r\n              </div>\r\n\r\n              <div className=\"checkboxContainer\">\r\n                <div className=\"checkbox\">\r\n                  <Checkbox checked={isChecked} onChange={handleChange} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"redirect\" onClick={handleClick}>\r\n                <div className=\"image\">\r\n                  <Icon size=\"huge\" name={iconName}></Icon>\r\n                </div>\r\n\r\n                <div className=\"messageInfo\">\r\n                  <div className=\"messageMeta\">\r\n                    <div className=\"title\">\r\n                      <strong>{client}</strong>\r\n                    </div>\r\n\r\n                    <div className=\"date\">{dateParse(date)}</div>\r\n                  </div>\r\n\r\n                  <div className=\"messageText\">\r\n                    <div className=\"title\">\r\n                      <strong>{title}</strong>\r\n                    </div>\r\n\r\n                    <div className=\"text\">{text}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Message);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Label } from \"semantic-ui-react\";\r\n\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport { setTab, setMessages } from \"redux/actions\";\r\nimport { sortMessages } from \"utils\";\r\nimport {\r\n  selectTheme,\r\n  selectActiveTab,\r\n  selectSortedMessages,\r\n  selectMessages,\r\n} from \"redux/selectors\";\r\n\r\nimport Card from \"containers/card\";\r\nimport Message from \"./message\";\r\nimport Pagination from \"containers/pagination\";\r\n\r\nexport const Content = ({ handleCheck }) => {\r\n  const tabs = useSelector(selectSortedMessages);\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const content = tabs[activeTab];\r\n\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState();\r\n  const [displayedMessages, setDisplayedMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (content) {\r\n      setDisplayedMessages(\r\n        content.slice((page - 1) * pageSize, page * pageSize)\r\n      );\r\n      setPageCount(Math.ceil(content.length / pageSize));\r\n    }\r\n  }, [content, page, pageSize]);\r\n\r\n  const handlers = {\r\n    handleChangePageSize: (e, { value }) => {\r\n      setPageSize(value);\r\n      setPage(1);\r\n    },\r\n    handleChangePage: setPage,\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <>\r\n        <div className=\"messagesInnerArea\">\r\n          {displayedMessages.length > 0 ? (\r\n            displayedMessages.map((item, index) => (\r\n              <Message\r\n                {...item}\r\n                handleCheck={handleCheck}\r\n                index={index}\r\n                key={index}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"emptyMessage\">Empty</div>\r\n          )}\r\n        </div>\r\n        <div className=\"messagesPagination\">\r\n          <Pagination\r\n            handlers={handlers}\r\n            pageSize={pageSize}\r\n            page={page}\r\n            pageCount={pageCount}\r\n          />\r\n        </div>\r\n      </>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const Tab = ({ title, messagesCounter, locale }) => {\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const theme = useSelector(selectTheme);\r\n  const messages = useSelector(selectMessages);\r\n  const dispatch = useDispatch();\r\n\r\n  const isActive = activeTab === title;\r\n  const activeColor = theme === \"dark\" ? \"white\" : \"grey\";\r\n  const borderColor = isActive ? activeColor : \"transparent\";\r\n  const tabStyle = { borderBottom: `2px solid ${borderColor}` };\r\n\r\n  const handleClick = () => {\r\n    const newMessages = messages.map((item) => ({ ...item, isChecked: false }));\r\n    dispatch(setMessages(newMessages));\r\n    sortMessages({ messages: newMessages, dispatch: dispatch });\r\n    dispatch(setTab(title));\r\n  };\r\n\r\n  return (\r\n    <div style={tabStyle} className=\"tab\" key={title} onClick={handleClick}>\r\n      <span style={themeStyle[theme]}>{locale.tabs[title]}</span>\r\n      {messagesCounter && <Label>{messagesCounter}</Label>}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst Tabs = ({ tabs = [], children }) => {\r\n  return (\r\n    <div className=\"ui-tabs\">\r\n      <div className=\"ui-tabs_tabsContainer\">{tabs}</div>\r\n      <div className=\"ui-tabs_content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Tabs);\r\n","import React from \"react\";\r\n\r\nimport TabsComponent from \"./component\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst TabsContainer = (props) => {\r\n  return <TabsComponent {...props} />;\r\n};\r\n\r\nexport default React.memo(TabsContainer);\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Input } from \"semantic-ui-react\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectActiveTab, selectSortedMessages } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { Tab, Content } from \"./components/tab\";\r\nimport Tabs from \"containers/tabs\";\r\nimport WithLoader from \"containers/withLoader\";\r\n\r\nconst MailPageComponent = ({\r\n  handleCheck,\r\n  handleCheckAll,\r\n  handleDeleteMessages,\r\n  handleSetImportantMessages,\r\n  handleSetUsualMessages,\r\n  handleReturnMessages,\r\n  checked,\r\n  tabsNames,\r\n}) => {\r\n  const {\r\n    messages: { titles, mail },\r\n  } = useIntl();\r\n\r\n  const tabs = useSelector(selectSortedMessages);\r\n  const activeTab = useSelector(selectActiveTab);\r\n\r\n  const checkAll = () => handleCheckAll({ setCheck: true });\r\n  const unCheckAll = () => handleCheckAll({ setCheck: false });\r\n\r\n  const renderTabs = tabsNames.map((item, index) => (\r\n    <Tab\r\n      key={index}\r\n      locale={mail}\r\n      messagesCounter={tabs[item] ? tabs[item].length.toString() : \"0\"}\r\n      title={item}\r\n    />\r\n  ));\r\n  const switchButtons = () => {\r\n    switch (activeTab) {\r\n      case \"trash\":\r\n        return (\r\n          <Button onClick={handleReturnMessages} disabled={checked === 0}>\r\n            {mail.buttons.undoDelete}\r\n          </Button>\r\n        );\r\n      case \"important\":\r\n        return (\r\n          <Button onClick={handleSetUsualMessages} disabled={checked === 0}>\r\n            {mail.buttons.checkAsNotImportant}\r\n          </Button>\r\n        );\r\n      default:\r\n        return (\r\n          <Button onClick={handleSetImportantMessages} disabled={checked === 0}>\r\n            {mail.buttons.checkAsImportant}\r\n          </Button>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageWithHeader title={titles.mail}>\r\n      <div className=\"mailBody\">\r\n        <div className=\"mailActions\">\r\n          <div className=\"buttons\">\r\n            <Button onClick={checkAll}>{mail.buttons.checkAll}</Button>\r\n\r\n            <Button onClick={unCheckAll}>{mail.buttons.uncheckAll}</Button>\r\n\r\n            {switchButtons()}\r\n\r\n            <Button onClick={handleDeleteMessages} disabled={checked === 0}>\r\n              {mail.buttons[activeTab === \"trash\" ? \"remove\" : \"removeToTrash\"]}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <Input placeholder={mail.searchPlaceholder} icon=\"search\" />\r\n          </div>\r\n        </div>\r\n\r\n        <Tabs tabs={renderTabs}>\r\n          <WithLoader>\r\n            <Content handleCheck={handleCheck} />\r\n          </WithLoader>\r\n        </Tabs>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default memo(MailPageComponent);\r\n","import React, { useEffect, useState, memo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport MailPageComponent from \"./component\";\r\n\r\nimport { getMessages, setPriorityMessages, setActualityMessages } from \"ducks\";\r\nimport { tabsNames, tabFilter } from \"constants/messagesConstants\";\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\nimport { setMessages } from \"redux/actions\";\r\nimport { selectActiveTab, selectMessages } from \"redux/selectors\";\r\nimport { sortMessages } from \"utils/getTabSortedMessages\";\r\n\r\nconst helpUserNotify = () => {\r\n  const isShow = localStorage.getItem(\"mailNotify\");\r\n\r\n  if (!isShow) {\r\n    localStorage.setItem(\"mailNotify\", \"showed\");\r\n    store.addNotification({\r\n      ...notificationSettings,\r\n      title: \"Подсказка\",\r\n      message:\r\n        \"Воспользуйтесь меню быстрого доступа, кликнув по сообщению правой кнопкой мыши\",\r\n      type: \"info\",\r\n      dismiss: {\r\n        duration: 25000,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nconst MailPageContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const messages = useSelector(selectMessages);\r\n\r\n  const [checked, setChecked] = useState(0);\r\n\r\n  const countChecked = (array) => {\r\n    const checkedCount = array.reduce(\r\n      (acc, item) => acc + Number(item.isChecked),\r\n      0\r\n    );\r\n\r\n    setChecked(checkedCount);\r\n  };\r\n  const getCheckedMessages = () =>\r\n    messages.filter((item) => item.isChecked).map((item) => item._id);\r\n  const priorityAction = ({ action }) => () => {\r\n    const checkedMessages = getCheckedMessages();\r\n    dispatch(\r\n      setPriorityMessages({\r\n        data: { messages: checkedMessages, action: action },\r\n      })\r\n    );\r\n    setChecked(0);\r\n  };\r\n  const actualityAction = ({ action }) => () => {\r\n    const checkedMessages = getCheckedMessages();\r\n    dispatch(\r\n      setActualityMessages({\r\n        data: { messages: checkedMessages, action: action },\r\n      })\r\n    );\r\n    setChecked(0);\r\n  };\r\n\r\n  const handleSetUsualMessages = priorityAction({ action: false });\r\n  const handleSetImportantMessages = priorityAction({ action: true });\r\n  const handleDeleteMessages = actualityAction({ action: true });\r\n  const handleReturnMessages = actualityAction({ action: false });\r\n  const handleCheck = (id) => {\r\n    const checkedMessages = messages.map((item) => ({\r\n      ...item,\r\n      isChecked: item.id === id ? !item.isChecked : item.isChecked,\r\n    }));\r\n\r\n    sortMessages({ messages: checkedMessages, dispatch: dispatch });\r\n    dispatch(setMessages(checkedMessages));\r\n    countChecked(checkedMessages);\r\n  };\r\n  const handleCheckAll = ({ setCheck }) => {\r\n    const checkedMessages = messages.map((item) => ({\r\n      ...item,\r\n      isChecked: tabFilter[activeTab](item) ? setCheck : item.isChecked,\r\n    }));\r\n\r\n    sortMessages({ messages: checkedMessages, dispatch: dispatch });\r\n    dispatch(setMessages(checkedMessages));\r\n    countChecked(checkedMessages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setChecked(0);\r\n  }, [setChecked, activeTab]);\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    dispatch(\r\n      getMessages({\r\n        cancelToken: source.token,\r\n        successCallbackFromUI: (_) => {\r\n          helpUserNotify();\r\n        },\r\n      })\r\n    );\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <MailPageComponent\r\n      tabsNames={tabsNames}\r\n      messages={messages}\r\n      handleCheckAll={handleCheckAll}\r\n      handleCheck={handleCheck}\r\n      handleReturnMessages={handleReturnMessages}\r\n      handleDeleteMessages={handleDeleteMessages}\r\n      handleSetImportantMessages={handleSetImportantMessages}\r\n      handleSetUsualMessages={handleSetUsualMessages}\r\n      checked={checked}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(MailPageContainer);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport WithLoader from \"containers/withLoader\";\r\nimport { dateParse } from \"utils\";\r\nimport Card from \"containers/card\";\r\n\r\nimport { selectActiveMessage } from \"redux/selectors\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst MessageCheckPageComponent = ({\r\n  handleClickBack,\r\n  handleDelete,\r\n  handleSetPriority,\r\n}) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  const activeMessage = useSelector(selectActiveMessage);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.mail} subtitle={\"read\"}>\r\n      <div className=\"messagePage\">\r\n        <div className=\"messagePage-buttons\">\r\n          <Button onClick={handleClickBack}>Назад</Button>\r\n          <Button onClick={handleDelete}>В корзину</Button>\r\n          <Button onClick={handleSetPriority}>Отметить как важное</Button>\r\n        </div>\r\n\r\n        <Card>\r\n          <div className=\"messagePage-body\">\r\n            <WithLoader>\r\n              <div>\r\n                <div className=\"messagePage-Body__date\">\r\n                  <span>Дата: </span>\r\n                  {activeMessage && dateParse(activeMessage.date)}\r\n                </div>\r\n                <div className=\"messagePage-Body__from\">\r\n                  <span>От кого: </span>\r\n                  {activeMessage && activeMessage.client}\r\n                </div>\r\n                <div className=\"messagePage-Body__theme\">\r\n                  <span>Тема: </span>\r\n                  {activeMessage && activeMessage.title}\r\n                </div>\r\n                <div className=\"messagePage-Body__text\">\r\n                  <span>Сообщение: </span>\r\n                  {activeMessage && activeMessage.text}\r\n                </div>\r\n              </div>\r\n            </WithLoader>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default MessageCheckPageComponent;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { getMessage, setPriorityMessages, setActualityMessages } from \"ducks\";\r\n\r\nimport MessageCheckComponent from \"./component\";\r\n\r\nconst MessageCheckPageContainer = () => {\r\n  const history = useHistory();\r\n  const { message } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickBack = () => history.goBack();\r\n  const handleDelete = () => {\r\n    dispatch(\r\n      setActualityMessages({\r\n        data: { messages: [message], action: true },\r\n      })\r\n    );\r\n    history.goBack();\r\n  };\r\n  const handleSetPriority = () => {\r\n    dispatch(\r\n      setPriorityMessages({\r\n        data: { messages: [message], action: true },\r\n      })\r\n    );\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    dispatch(\r\n      getMessage({\r\n        data: { _id: message },\r\n        cancelToken: source.token,\r\n      })\r\n    );\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch, message]);\r\n\r\n  return (\r\n    <MessageCheckComponent\r\n      handleDelete={handleDelete}\r\n      handleSetPriority={handleSetPriority}\r\n      handleClickBack={handleClickBack}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MessageCheckPageContainer;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst inputStyle = { display: \"none\" };\r\n\r\nconst AddPictureForm = () => {\r\n  const [uploadedImage, setUploadedImage] = useState();\r\n  const inputRef = useRef();\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n  const handleChangeInput = (e) => setUploadedImage(e.target.value);\r\n\r\n  return (\r\n    <div className=\"form-text\">\r\n      <div className=\"form-text_title\">{uploadedImage || \"Выберите файл\"}</div>\r\n      <Button onClick={handleClick}>Выбрать файл</Button>\r\n\r\n      <input\r\n        type=\"file\"\r\n        style={inputStyle}\r\n        ref={inputRef}\r\n        onChange={handleChangeInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPictureForm;\r\n","import React from \"react\";\r\nimport { Form, TextArea } from \"semantic-ui-react\";\r\n\r\nconst AddTextForm = () => {\r\n  return (\r\n    <div className=\"form_textArea\">\r\n      <Form>\r\n        <TextArea placeholder=\"Введите текст\" />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTextForm;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport Modal from \"containers/modal\";\r\nimport AddPictureForm from \"./components/addPictureForm\";\r\nimport AddTextForm from \"./components/addTextForm\";\r\nimport Card from \"containers/card\";\r\n\r\nconst ProjectSavePageComponent = ({\r\n  onBack,\r\n  isTextModalShow,\r\n  isPictureModalShow,\r\n  handleToggleTextModal,\r\n  handleTogglePictureModal,\r\n}) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  return (\r\n    <PageWithHeader title={titles.projects} subtitle={\"read\"}>\r\n      <div className=\"projectsSaveBody\">\r\n        <div className=\"projectsSaveActions\">\r\n          <Button onClick={onBack}>Назад</Button>\r\n          <Button onClick={handleTogglePictureModal}>Добавить картинку</Button>\r\n          <Button onClick={handleToggleTextModal}>Добавить текст</Button>\r\n        </div>\r\n        <Card>\r\n          <div className=\"projectContent\">empty</div>\r\n        </Card>\r\n      </div>\r\n      <Modal\r\n        title=\"Добавить текст\"\r\n        isOpen={isTextModalShow}\r\n        handleClose={handleToggleTextModal}\r\n      >\r\n        <AddTextForm />\r\n      </Modal>\r\n      <Modal\r\n        title=\"Добавить картинку\"\r\n        isOpen={isPictureModalShow}\r\n        handleClose={handleTogglePictureModal}\r\n      >\r\n        <AddPictureForm />\r\n      </Modal>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default ProjectSavePageComponent;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ProjectSavePageComponent from \"./component\";\r\n\r\nconst ProjectSavePageContainer = () => {\r\n  const history = useHistory();\r\n\r\n  const [isTextModalShow, setIsTextModalShow] = useState(false);\r\n  const [isPictureModalShow, setIsPictureModalShow] = useState(false);\r\n\r\n  const onBack = () => history.goBack();\r\n\r\n  const handleToggleTextModal = () => setIsTextModalShow(!isTextModalShow);\r\n  const handleTogglePictureModal = () =>\r\n    setIsPictureModalShow(!isPictureModalShow);\r\n\r\n  return (\r\n    <ProjectSavePageComponent\r\n      isTextModalShow={isTextModalShow}\r\n      isPictureModalShow={isPictureModalShow}\r\n      onBack={onBack}\r\n      handleToggleTextModal={handleToggleTextModal}\r\n      handleTogglePictureModal={handleTogglePictureModal}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProjectSavePageContainer;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthComponent from \"./pages/auth\";\r\nimport MainPageComponent from \"./pages/main\";\r\nimport SettingsPageComponent from \"./pages/settings\";\r\nimport ProjectsPageComponent from \"./pages/projects\";\r\nimport MailPageComponent from \"./pages/mail\";\r\nimport MessageCheckPageComponent from \"./pages/messageCheck\";\r\nimport ProjectsSavePageComponent from \"./pages/projectsSave\";\r\n\r\nconst customRoute = ({ path, getToken }) => ({ children, ...props }) => {\r\n  const renderFunc = ({ location }) => {\r\n    const redirectConfig = {\r\n      pathname: path,\r\n      state: { from: location },\r\n    };\r\n\r\n    return getToken() ? children : <Redirect to={redirectConfig} />;\r\n  };\r\n\r\n  return <Route path={props.path} render={renderFunc}></Route>;\r\n};\r\n\r\nconst ProtectedRoute = customRoute({\r\n  path: \"/auth\",\r\n  getToken: () => localStorage.getItem(\"token\"),\r\n});\r\n\r\nconst AuthRoute = customRoute({\r\n  path: \"/\",\r\n  getToken: () => !localStorage.getItem(\"token\"),\r\n});\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <ProtectedRoute path=\"/mail/:message\">\r\n        <MessageCheckPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/projects/:project\">\r\n        <ProjectsSavePageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/projects\">\r\n        <ProjectsPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/mail\">\r\n        <MailPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/settings\">\r\n        <SettingsPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <AuthRoute path=\"/auth\">\r\n        <AuthComponent />\r\n      </AuthRoute>\r\n\r\n      <ProtectedRoute path=\"/\">\r\n        <MainPageComponent />\r\n      </ProtectedRoute>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport ReactNotification from \"react-notifications-component\";\r\n\r\nimport Routes from \"./routes\";\r\n\r\nimport { messages_ru } from \"locale/messages_ru\";\r\nimport { messages_en } from \"locale/messages_en\";\r\nimport { selectLanguage } from \"redux/selectors\";\r\n\r\nconst messages = {\r\n  en: messages_en,\r\n  ru: messages_ru,\r\n};\r\n\r\nconst App = () => {\r\n  const language = useSelector(selectLanguage);\r\n\r\n  return (\r\n    <>\r\n      <ReactNotification />\r\n      <IntlProvider locale={language} messages={messages[language]}>\r\n        <Router>\r\n          <Routes />\r\n        </Router>\r\n      </IntlProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const messages_en = {\r\n  titles: {\r\n    home: \"Main\",\r\n    projects: \"Projects\",\r\n    mail: \"Mail\",\r\n    settings: \"Settings\",\r\n    logout: \"Exit\",\r\n  },\r\n  mail: {\r\n    empty: \"Empty\",\r\n    searchPlaceholder: \"Search...\",\r\n    buttons: {\r\n      checkAll: \"Select all\",\r\n      uncheckAll: \"Remove selection\",\r\n      undoDelete: \"Return to \",\r\n      checkAsUsual: \"Check as usual\",\r\n      checkAsImportant: \"Check as important\",\r\n      removeToTrash: \"Remove to trash\",\r\n      remove: \"Remove\",\r\n    },\r\n    tabs: {\r\n      all: \"All\",\r\n      read: \"Read\",\r\n      unread: \"Unread\",\r\n      important: \"Important\",\r\n      trash: \"Trash\",\r\n    },\r\n  },\r\n  settings: {\r\n    theme: \"Dark theme\",\r\n    language: \"Language\",\r\n    password: \"Change password\",\r\n    userData: \"Change contact information\",\r\n    enterOldPasswordPlaceholder: \"Enter old password\",\r\n    enterPasswordPlaceholder: \"Enter new password\",\r\n    repeatPasswordPlaceholder: \"Repeat new password\",\r\n    savePassword: \"Save\",\r\n    reset: \"Reset settings\",\r\n    resetButton: \"agree\",\r\n  },\r\n  home: {\r\n    title: \"Welcome, Administrator\",\r\n    visitors: {\r\n      title: \"New visitors for last time\",\r\n      day: \"Today\",\r\n      week: \"This week\",\r\n      month: \"This month\",\r\n    },\r\n    messages: {\r\n      title: \"New messages\",\r\n    },\r\n  },\r\n  projects: {\r\n    title: \"Projects list\",\r\n    add: \"Add project\",\r\n    delete: \"Delete checked\",\r\n    update: \"Edit\",\r\n    search: \"Search...\",\r\n    dense: \"Columns dense\",\r\n  },\r\n  table: {\r\n    rows: \"Rows per page \",\r\n    columnNames: {\r\n      name: \"Name\",\r\n      type: \"Type\",\r\n      client: \"Client\",\r\n      createDate: \"Creation date\",\r\n    },\r\n  },\r\n};\r\n","export const messages_ru = {\r\n  titles: {\r\n    home: \"Главная\",\r\n    projects: \"Проекты\",\r\n    mail: \"Почта\",\r\n    settings: \"Настройки\",\r\n    logout: \"Выход\",\r\n  },\r\n  mail: {\r\n    empty: \"Пусто\",\r\n    searchPlaceholder: \"Найти...\",\r\n    buttons: {\r\n      checkAll: \"Выделить все\",\r\n      uncheckAll: \"Снять выделение\",\r\n      checkAsImportant: \"Отметить как важное\",\r\n      removeToTrash: \"Поместить в корзину\",\r\n      remove: \"Удалить\",\r\n    },\r\n    tabs: {\r\n      all: \"Все\",\r\n      read: \"Прочитанные\",\r\n      unread: \"Непрочитанные\",\r\n      important: \"Важные\",\r\n      trash: \"Корзина\",\r\n    },\r\n  },\r\n  settings: {\r\n    theme: \"Темная тема\",\r\n    language: \"Язык\",\r\n    password: \"Изменить пароль\",\r\n    userData: \"Изменить контактные данные\",\r\n    enterOldPasswordPlaceholder: \"Enter old password\",\r\n    enterPasswordPlaceholder: \"Введите новый пароль\",\r\n    repeatPasswordPlaceholder: \"Повторите новый пароль\",\r\n    savePassword: \"Сохранить\",\r\n    reset: \"Сброс настроек\",\r\n    resetButton: \"Подтвердить\",\r\n  },\r\n  home: {\r\n    title: \"Добро пожаловать, Администратор\",\r\n    visitors: {\r\n      title: \"Посетители за последнее время\",\r\n      day: \"сегодня\",\r\n      week: \"за неделю\",\r\n      month: \"за месяц\",\r\n    },\r\n    messages: {\r\n      title: \"Новые сообщения\",\r\n    },\r\n  },\r\n  projects: {\r\n    title: \"Список проектов\",\r\n    add: \"Добавить проект\",\r\n    delete: \"Удалить выбранное\",\r\n    update: \"Редактировать\",\r\n    search: \"Найти...\",\r\n    dense: \"Сжатие столбцов\",\r\n  },\r\n  table: {\r\n    rows: \"Количество строк \",\r\n    columnNames: {\r\n      name: \"Название\",\r\n      type: \"Тип проекта\",\r\n      client: \"Клиент\",\r\n      createDate: \"Дата создания\",\r\n    },\r\n  },\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  SET_MESSAGES,\r\n  SET_THEME,\r\n  SET_LANGUAGE,\r\n  SET_APP_STATE,\r\n  SET_TAB,\r\n  SET_TAB_SORTED_MESSAGES,\r\n  SET_ACTIVE_MESSAGE,\r\n  SET_ACTIVE_PROJECT,\r\n  SET_PROJECTS,\r\n  SET_NEW_MESSAGES_COUNTER,\r\n  SET_VISITS,\r\n} from \"./types\";\r\n\r\nconst messagesInitialState = {\r\n  messages: null,\r\n  counter: 0,\r\n  tabSortedMessages: [],\r\n  activeMessage: null,\r\n  activeTab: \"all\",\r\n};\r\n\r\nconst visitsInitialState = {\r\n  visits: { day: 0, week: 0, month: 0 },\r\n};\r\n\r\nconst projectsInitialState = {\r\n  projects: null,\r\n  activeProject: \"all\",\r\n};\r\n\r\nconst themeInitialState = {\r\n  theme: localStorage.getItem(\"theme\") || \"light\",\r\n};\r\n\r\nconst languageInitialState = {\r\n  language: localStorage.getItem(\"lang\") || \"en\",\r\n};\r\n\r\nconst appInitialState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const messagesReducer = (state = messagesInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NEW_MESSAGES_COUNTER:\r\n      return { ...state, counter: action.payload };\r\n    case SET_MESSAGES:\r\n      return { ...state, messages: action.payload };\r\n    case SET_TAB_SORTED_MESSAGES:\r\n      return { ...state, tabSortedMessages: action.payload };\r\n    case SET_TAB:\r\n      return { ...state, activeTab: action.payload };\r\n    case SET_ACTIVE_MESSAGE:\r\n      return { ...state, activeMessage: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const visitsReducer = (state = visitsInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_VISITS:\r\n      return { ...state, visits: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const projectsReducer = (state = projectsInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROJECTS:\r\n      return { ...state, projects: action.payload };\r\n    case SET_ACTIVE_PROJECT:\r\n      return { ...state, activeProjects: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const themeReducer = (state = themeInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_THEME:\r\n      return { ...state, theme: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const languageReducer = (state = languageInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LANGUAGE:\r\n      return { ...state, language: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const appStateReducer = (state = appInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_APP_STATE:\r\n      return { ...state, isLoading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport {\r\n  messagesReducer,\r\n  themeReducer,\r\n  languageReducer,\r\n  appStateReducer,\r\n  projectsReducer,\r\n  visitsReducer,\r\n} from \"./reducers\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  messages: messagesReducer,\r\n  projects: projectsReducer,\r\n  theme: themeReducer,\r\n  language: languageReducer,\r\n  appState: appStateReducer,\r\n  visits: visitsReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"normalize.css\";\r\nimport \"./index.sass\";\r\nimport App from \"./App\";\r\nimport \"animate.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}