{"version":3,"sources":["constants/notificationSettings.js","pages/auth/component.jsx","pages/auth/index.js","ducks/projects.js","ducks/index.js","ducks/messages.js","ducks/visits.js","redux/selectors.js","redux/types.js","redux/actions.js","containers/pageWithHeader/components/drawer.jsx","constants/drawerConstants.js","constants/themingStyles.js","containers/pageWithHeader/component.jsx","containers/pageWithHeader/index.js","containers/withLoader/index.js","pages/main/component.jsx","pages/main/index.js","pages/settings/components/theme.jsx","pages/settings/components/password.jsx","constants/settingsConstants.js","pages/settings/components/index.js","pages/settings/components/language.jsx","pages/settings/components/userData.jsx","pages/settings/components/reset.jsx","pages/settings/component.jsx","pages/settings/index.js","utils/dateParse.js","containers/modal/index.js","constants/tableConstants.js","containers/pagination/component.jsx","containers/pagination/index.js","containers/table/component.jsx","containers/table/index.js","pages/projects/components/projectAddForm.jsx","pages/projects/component.jsx","pages/projects/index.js","containers/card/component.jsx","containers/card/index.js","pages/mail/components/message.jsx","pages/mail/components/tab.jsx","containers/tabs/component.jsx","containers/tabs/index.js","pages/mail/component.jsx","constants/messagesConstants.js","pages/mail/index.js","pages/messageCheck/component.jsx","pages/messageCheck/index.js","pages/projectsSave/components/addPictureForm.jsx","pages/projectsSave/components/addTextForm.jsx","pages/projectsSave/component.jsx","pages/projectsSave/index.js","routes.js","App.js","locale/messages_en.js","locale/messages_ru.js","serviceWorker.js","redux/reducers.js","redux/index.js","index.js"],"names":["notificationSettings","insert","container","animationIn","animationOut","dismiss","duration","AuthPageComponent","handleChangeLogin","handleChangePassword","handleLogin","className","fluid","Content","Input","icon","iconPosition","placeholder","type","onChange","Button","onClick","primary","AuthPageContainer","history","useHistory","from","useLocation","state","pathname","useState","login","setLogin","password","setPassword","handlers","e","target","value","localStorage","setItem","replace","store","addNotification","title","message","getProjects","a","cancelToken","axios","get","serverPath","response","data","isCancel","console","log","getNewMessagesCounter","getMessages","getVisits","selectLanguage","language","selectTheme","theme","selectLoading","appState","isLoading","selectProjects","projects","selectActiveMessage","messages","activeMessage","selectActiveTab","activeTab","selectSortedMessages","tabSortedMessages","selectMessages","selectNewMessagesCounter","counter","selectVisits","visits","SET_TAB","setVisits","payload","setProjects","setMessages","setNewMessagesCounter","setTabSortedMessages","setActiveMessage","setAppState","BarsIcon","handleDrawerVisible","drawerVisible","id","DrawerComponent","children","titles","useIntl","location","handleClick","this","path","removeItem","push","itemStyle","backgroundColor","drawerStyle","maxWidth","style","onMouseLeave","home","mail","settings","logout","drawerItems","map","item","index","bind","key","Icon","name","size","themeStyle","dark","color","transition","light","memo","subtitle","useSelector","marginLeft","styleByTheme","React","props","isVisible","setIsVisible","WithLoader","loading","Loader","active","inline","MainPageComponent","visitors","day","week","month","MainPageContainer","dispatch","useDispatch","useEffect","source","CancelToken","fetchVisits","token","visitsResponse","messagesResponse","fetchNewMessagesCounter","cancel","ChangeTheme","locale","isDark","Radio","slider","checked","newTheme","setTheme","ChangePassword","isPasswordChangeShow","setIsPasswordChangeShow","contentStyle","maxHeight","chevronStyle","transform","enterPasswordPlaceholder","repeatPasswordPlaceholder","savePassword","languageOptions","text","Theme","Password","Menu","compact","Dropdown","options","setLanguage","simple","userData","reset","clear","err","resetButton","components","SettingsComponent","SettingsPageContainer","dateParse","date","moment","format","ModalWindow","handleClose","isOpen","handleSuccess","Modal","open","onClose","Header","Actions","headerNames","names","accessor","client","createDate","paginationOptions","TablePagination","pageSize","pageCount","page","table","handleChangePageSize","handleChangePage","handleChevronLeft","handleChevronRight","buttons","i","rows","floated","pagination","Item","cursor","disabled","PaginationContainer","$handlers","inlineStyle","overflow","headerCells","showPagination","colSpan","length","tableParams","inverted","header","handleSort","isSorted","Table","HeaderCell","sorted","tableData","cells","headerItem","Cell","Row","sortable","selectable","celled","fixed","Body","Footer","fullWidth","reverseDirection","ascending","descending","TableContainer","columnNames","column","setColumn","direction","setDirection","setPage","setPageSize","displayData","setDisplayData","setPageCount","slice","Math","ceil","sortBy","reverse","AddProjectForm","ProjectsPageComponent","handleChange","handleChangeFilter","handleFilterData","handleToggleModal","modalState","handleClickEdit","projectsData","add","delete","update","dense","toggle","search","ProjectsPageContainer","changeCompact","setModalState","filter","setFilter","responseWithChecked","isChecked","fetchProjects","Object","values","toString","toLowerCase","indexOf","borderColor","isRead","isImportant","handleCheck","setIsOpen","setStyle","iconName","messageContainerPadding","paddingLeft","transitionDelay","delay","calcDelay","opacity","setTimeout","onContextMenu","preventDefault","onMouseDown","button","Checkbox","content","displayedMessages","setDisplayedMessages","Tab","messagesCounter","tabStyle","borderBottom","tabs","Label","handleCheckAll","tabsNames","renderTabs","setCheck","checkAll","uncheckAll","checkAsImportant","searchPlaceholder","tabFilter","all","isDeleted","read","unread","important","trash","setChecked","countChecked","array","reduce","accum","forEach","getItem","fetchMessages","checkedMessages","MessageCheckPageComponent","handleClickBack","MessageCheckPageContainer","useParams","goBack","inputStyle","display","AddPictureForm","uploadedImage","setUploadedImage","inputRef","useRef","current","click","ref","AddTextForm","Form","TextArea","ProjectSavePageComponent","onBack","isTextModalShow","isPictureModalShow","handleToggleTextModal","handleTogglePictureModal","ProjectSavePageContainer","setIsTextModalShow","setIsPictureModalShow","customRoute","getToken","render","redirectConfig","to","ProtectedRoute","AuthRoute","Routes","en","empty","removeToTrash","remove","ru","App","basename","Boolean","window","hostname","match","messagesInitialState","visitsInitialState","projectsInitialState","activeProject","themeInitialState","languageInitialState","appInitialState","rootReducer","combineReducers","action","activeProjects","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0b9a0f4a.chunk.js","sourcesContent":["export const notificationSettings = {\r\n  insert: \"top\",\r\n  container: \"top-right\",\r\n  animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n  animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n  dismiss: {\r\n    duration: 5000,\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport { Card, Input, Button } from \"semantic-ui-react\";\r\n\r\nconst AuthPageComponent = ({\r\n  handleChangeLogin,\r\n  handleChangePassword,\r\n  handleLogin,\r\n}) => {\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"cardBody\">\r\n        <Card fluid>\r\n          <Card.Content>\r\n            <div className=\"cardContent\">\r\n              <div className=\"cardContent_title\">\r\n                <p>Авторизация</p>\r\n              </div>\r\n\r\n              <div className=\"cardContent_input\">\r\n                <Input\r\n                  fluid\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"login\"\r\n                  type=\"login\"\r\n                  onChange={handleChangeLogin}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"cardContent_input\">\r\n                <Input\r\n                  fluid\r\n                  icon=\"key\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"password\"\r\n                  type=\"password\"\r\n                  onChange={handleChangePassword}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"cardContent_button\">\r\n                <Button onClick={handleLogin} primary>\r\n                  Вход\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card.Content>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPageComponent;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\n\r\nimport AuthComponent from \"./component\";\r\n\r\nconst AuthPageContainer = () => {\r\n  const history = useHistory();\r\n  const { from } = useLocation().state || { from: { pathname: \"/\" } };\r\n\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handlers = {\r\n    handleChangeLogin: (e) => setLogin(e.target.value),\r\n    handleChangePassword: (e) => setPassword(e.target.value),\r\n    handleLogin: () => {\r\n      if (login === \"Admin\" && password === \"1\") {\r\n        localStorage.setItem(\"isAuth\", true);\r\n        history.replace(from);\r\n      } else {\r\n        store.addNotification({\r\n          ...notificationSettings,\r\n          title: \"Ошибка\",\r\n          message: \"Неверный логин или пароль\",\r\n          type: \"danger\",\r\n        });\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <AuthComponent\r\n      handleChangeLogin={handlers.handleChangeLogin}\r\n      handleChangePassword={handlers.handleChangePassword}\r\n      handleLogin={handlers.handleLogin}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthPageContainer;\r\n","import axios from \"axios\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\nimport { serverPath } from \"./\";\r\n\r\nexport const getProjects = async ({ cancelToken }) => {\r\n  try {\r\n    const response = await axios.get(`${serverPath}/projects`, {\r\n      cancelToken: cancelToken,\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isCancel(error)) {\r\n      console.log(\"Отмена запроса\");\r\n    } else {\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Ошибка\",\r\n        message: \"Не удалось загрузить проекты\",\r\n        type: \"danger\",\r\n      });\r\n    }\r\n  }\r\n};\r\n","export const serverPath = \"http://localhost:9000\";\r\n\r\nexport * from \"./messages\";\r\nexport * from \"./projects\";\r\n","import axios from \"axios\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\nimport { serverPath } from \"./\";\r\n\r\nexport const getNewMessagesCounter = async ({ cancelToken }) => {\r\n  try {\r\n    const response = await axios.get(`${serverPath}/newMessages`, {\r\n      cancelToken: cancelToken,\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    store.addNotification({\r\n      ...notificationSettings,\r\n      title: \"Ошибка\",\r\n      message: \"Не удалось загрузить счетчик новых сообщений\",\r\n      type: \"danger\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMessages = async ({ cancelToken }) => {\r\n  try {\r\n    const response = await axios.get(`${serverPath}/messages`, {\r\n      cancelToken: cancelToken,\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isCancel(error)) {\r\n      console.log(\"Отмена запроса\");\r\n    } else {\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Ошибка\",\r\n        message: \"Не удалось загрузить сообщения\",\r\n        type: \"danger\",\r\n      });\r\n    }\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\nimport { serverPath } from \"./\";\r\n\r\nexport const getVisits = async ({ cancelToken }) => {\r\n  try {\r\n    const response = await axios.get(`${serverPath}/visits`, {\r\n      cancelToken: cancelToken,\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    store.addNotification({\r\n      ...notificationSettings,\r\n      title: \"Ошибка\",\r\n      message: \"Не удалось загрузить счетчик посещений\",\r\n      type: \"danger\",\r\n    });\r\n  }\r\n};\r\n","export const selectLanguage = (state) => state.language.language;\r\nexport const selectTheme = (state) => state.theme.theme;\r\nexport const selectLoading = (state) => state.appState.isLoading;\r\nexport const selectProjects = (state) => state.projects.projects;\r\nexport const selectActiveMessage = (state) => state.messages.activeMessage;\r\nexport const selectActiveTab = (state) => state.messages.activeTab;\r\nexport const selectSortedMessages = (state) => state.messages.tabSortedMessages;\r\nexport const selectMessages = (state) => state.messages.messages;\r\nexport const selectNewMessagesCounter = (state) => state.messages.counter;\r\nexport const selectVisits = (state) => state.visits.visits;\r\n","export const SET_MESSAGES = \"MESSAGES/SET_MESSAGES\";\r\nexport const SET_NEW_MESSAGES_COUNTER = \"MESSAGES/SET_NEW_MESSAGES_COUNTER\";\r\nexport const SET_ACTIVE_MESSAGE = \"MESSAGES/SET_ACTIVE_MESSAGE\";\r\nexport const SET_TAB_SORTED_MESSAGES = \"MESSAGES/SET_TAB_SORTED_MESSAGES\";\r\nexport const SET_TAB = \"MESSAGES/SET_TAB\";\r\nexport const SET_PROJECTS = \"PROJECTS/SET_PROJECTS\";\r\nexport const SET_ACTIVE_PROJECT = \"PROJECTS/SET_ACTIVE_PROJECT\";\r\nexport const SET_THEME = \"THEME/SET_THEME\";\r\nexport const SET_LANGUAGE = \"LANGUAGE/SET_LANGUAGE\";\r\nexport const SET_APP_STATE = \"APP_STATE/SET_APP_STATE\";\r\nexport const SET_VISITS = \"VISITS/SET_VISITS\";\r\n","import {\r\n  SET_MESSAGES,\r\n  SET_LANGUAGE,\r\n  SET_THEME,\r\n  SET_APP_STATE,\r\n  SET_TAB,\r\n  SET_TAB_SORTED_MESSAGES,\r\n  SET_ACTIVE_MESSAGE,\r\n  SET_ACTIVE_PROJECT,\r\n  SET_PROJECTS,\r\n  SET_NEW_MESSAGES_COUNTER,\r\n  SET_VISITS,\r\n} from \"./types\";\r\n\r\nexport const setVisits = (visits) => ({\r\n  type: SET_VISITS,\r\n  payload: visits,\r\n});\r\n\r\nexport const setProjects = (projects) => ({\r\n  type: SET_PROJECTS,\r\n  payload: projects,\r\n});\r\n\r\nexport const setActiveProject = (activeProject) => ({\r\n  type: SET_ACTIVE_PROJECT,\r\n  payload: activeProject,\r\n});\r\n\r\nexport const setMessages = (messages) => ({\r\n  type: SET_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const setNewMessagesCounter = (counter) => ({\r\n  type: SET_NEW_MESSAGES_COUNTER,\r\n  payload: counter,\r\n});\r\n\r\nexport const setTabSortedMessages = (tabSortedMessages) => ({\r\n  type: SET_TAB_SORTED_MESSAGES,\r\n  payload: tabSortedMessages,\r\n});\r\n\r\nexport const setActiveMessage = (activeMessage) => ({\r\n  type: SET_ACTIVE_MESSAGE,\r\n  payload: activeMessage,\r\n});\r\n\r\nexport const setTab = (tab) => ({\r\n  type: SET_TAB,\r\n  payload: tab,\r\n});\r\n\r\nexport const setTheme = (theme) => ({\r\n  type: SET_THEME,\r\n  payload: theme,\r\n});\r\n\r\nexport const setLanguage = (language) => ({\r\n  type: SET_LANGUAGE,\r\n  payload: language,\r\n});\r\n\r\nexport const setAppState = (state) => ({\r\n  type: SET_APP_STATE,\r\n  payload: state,\r\n});\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { drawerItems } from \"constants/drawerConstants\";\r\n\r\nconst BarsIcon = ({ handleDrawerVisible, drawerVisible }) => {\r\n  return (\r\n    <div className=\"sidebar-item\">\r\n      <div\r\n        className=\"sidebar-item__icon icon_header\"\r\n        onClick={handleDrawerVisible}\r\n      >\r\n        <div id=\"nav-icon4\" className={drawerVisible ? \" open\" : \"\"}>\r\n          <span></span>\r\n\r\n          <span></span>\r\n\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawerComponent = ({ handleDrawerVisible, drawerVisible, children }) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  const history = useHistory();\r\n\r\n  const { pathname } = history.location;\r\n\r\n  function handleClick() {\r\n    if (this.path === \"/auth\") {\r\n      localStorage.removeItem(\"isAuth\");\r\n      history.push(\"/auth\");\r\n    } else {\r\n      history.push(this.path);\r\n      handleDrawerVisible();\r\n    }\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    drawerVisible && handleDrawerVisible();\r\n  };\r\n\r\n  const itemStyle = {\r\n    backgroundColor: \"#333\",\r\n  };\r\n\r\n  const drawerStyle = { maxWidth: drawerVisible ? \"220px\" : \"70px\" };\r\n\r\n  return (\r\n    <div className=\"drawer\">\r\n      <div\r\n        className=\"sidebar\"\r\n        style={drawerStyle}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <BarsIcon\r\n          handleDrawerVisible={handleDrawerVisible}\r\n          drawerVisible={drawerVisible}\r\n        />\r\n\r\n        {drawerItems(titles).map((item, index) => (\r\n          <div\r\n            className=\"sidebar-item\"\r\n            onClick={handleClick.bind(item)}\r\n            style={pathname === item.path ? itemStyle : {}}\r\n            key={index}\r\n          >\r\n            <div className=\"sidebar-item__icon\">\r\n              <Icon name={item.icon} size=\"big\" />\r\n            </div>\r\n\r\n            <div className=\"sidebar-item__title\">{item.title}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <>{children}</>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerComponent;\r\n","export const drawerItems = (titles) => [\r\n  {\r\n    icon: \"home\",\r\n    title: titles.home,\r\n    path: \"/\",\r\n  },\r\n  {\r\n    icon: \"file\",\r\n    title: titles.projects,\r\n    path: \"/projects\",\r\n  },\r\n  {\r\n    icon: \"mail\",\r\n    title: titles.mail,\r\n    path: \"/mail\",\r\n  },\r\n  {\r\n    icon: \"settings\",\r\n    title: titles.settings,\r\n    path: \"/settings\",\r\n  },\r\n  {\r\n    icon: \"log out\",\r\n    title: titles.logout,\r\n    path: \"/auth\",\r\n  },\r\n];\r\n","export const themeStyle = {\r\n  dark: {\r\n    backgroundColor: \"#333\",\r\n    color: \"white\",\r\n    transition: \"all 0.5s ease\",\r\n  },\r\n  light: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    transition: \"all 0.5s ease\",\r\n  },\r\n};\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport Drawer from \"./components/drawer\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\n\r\nconst PageWithHeaderComponent = ({\r\n  drawerVisible,\r\n  drawerItems,\r\n  handleDrawerVisible,\r\n  title,\r\n  subtitle,\r\n  children,\r\n}) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const style = { marginLeft: drawerVisible ? \"220px\" : \"70px\" };\r\n  const styleByTheme = themeStyle[theme];\r\n\r\n  return (\r\n    <Drawer\r\n      drawerVisible={drawerVisible}\r\n      drawerItems={drawerItems}\r\n      handleDrawerVisible={handleDrawerVisible}\r\n    >\r\n      <div className=\"pageWithHeader\" style={style}>\r\n        <div className=\"header\" style={styleByTheme}>\r\n          <div className=\"headerContent\">\r\n            <div className=\"headerTitle\">{title}</div>\r\n\r\n            {subtitle && <div className=\"headerSubtitle\">/{subtitle}</div>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body\" style={styleByTheme}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default memo(PageWithHeaderComponent);\r\n","import React, { useState } from \"react\";\r\n\r\nimport PageWithHeaderComponent from \"./component\";\r\n\r\nconst PageWithHeaderContainer = (props) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const handleChangeIsVisible = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  return (\r\n    <PageWithHeaderComponent\r\n      handleDrawerVisible={handleChangeIsVisible}\r\n      drawerVisible={isVisible}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PageWithHeaderContainer);\r\n","import React from \"react\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { selectLoading } from \"redux/selectors\";\r\n\r\nconst WithLoader = ({ children }) => {\r\n  const loading = useSelector(selectLoading);\r\n  return <>{loading ? <Loader active inline=\"centered\" /> : children}</>;\r\n};\r\n\r\nexport default WithLoader;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectTheme } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport WithLoader from \"containers/withLoader\";\r\n\r\nconst MainPageComponent = ({ counter, visits }) => {\r\n  const {\r\n    messages: {\r\n      titles,\r\n      home: { title, visitors, messages },\r\n    },\r\n  } = useIntl();\r\n\r\n  console.log(visits);\r\n  const theme = useSelector(selectTheme);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.home}>\r\n      <div className=\"mainBody\">\r\n        <div className=\"helloWorld\">\r\n          <Card style={themeStyle[theme]} fluid>\r\n            <Card.Content>\r\n              <div className=\"welcomeSlogan\">\r\n                <p>{title}</p>\r\n              </div>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n\r\n        <WithLoader>\r\n          <div className=\"mainInformation\">\r\n            <div className=\"infoBlock\">\r\n              <Card style={themeStyle[theme]} fluid>\r\n                <Card.Content>\r\n                  <div className=\"newMessages\">\r\n                    <p className=\"infoTitle\">{messages.title}</p>\r\n\r\n                    <p>{counter}</p>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n            </div>\r\n            <div className=\"infoBlock\">\r\n              <Card style={themeStyle[theme]} fluid>\r\n                <Card.Content>\r\n                  <div className=\"visitors\">\r\n                    <p className=\"infoTitle\">{visitors.title}</p>\r\n\r\n                    <p>\r\n                      {visitors.day}: {visits.day}\r\n                    </p>\r\n\r\n                    <p>\r\n                      {visitors.week}: {visits.week}\r\n                    </p>\r\n\r\n                    <p>\r\n                      {visitors.month}: {visits.month}\r\n                    </p>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </WithLoader>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default MainPageComponent;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getNewMessagesCounter } from \"ducks/messages\";\r\nimport { getVisits } from \"ducks/visits\";\r\nimport { selectNewMessagesCounter, selectVisits } from \"redux/selectors\";\r\nimport { setNewMessagesCounter, setAppState, setVisits } from \"redux/actions\";\r\n\r\nimport MainPageComponent from \"./component\";\r\n\r\nconst MainPageContainer = () => {\r\n  const counter = useSelector(selectNewMessagesCounter);\r\n  const visits = useSelector(selectVisits);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    const fetchVisits = async (source) => {\r\n      dispatch(setAppState(true));\r\n\r\n      const visitsResponse = await getVisits({\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      visitsResponse && dispatch(setVisits(visitsResponse[0]));\r\n\r\n      dispatch(setAppState(false));\r\n    };\r\n\r\n    const fetchNewMessagesCounter = async (source) => {\r\n      dispatch(setAppState(true));\r\n      const messagesResponse = await getNewMessagesCounter({\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      messagesResponse &&\r\n        dispatch(setNewMessagesCounter(messagesResponse.counter));\r\n\r\n      dispatch(setAppState(false));\r\n    };\r\n\r\n    fetchNewMessagesCounter(source);\r\n    fetchVisits(source);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return <MainPageComponent counter={counter} visits={visits} />;\r\n};\r\n\r\nexport default MainPageContainer;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Radio } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\nimport { setTheme } from \"redux/actions\";\r\n\r\nconst ChangeTheme = ({ locale }) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeTheme = () => {\r\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\r\n    dispatch(setTheme(newTheme));\r\n    localStorage.setItem(\"theme\", newTheme);\r\n  };\r\n\r\n  const isDark = theme === \"dark\";\r\n\r\n  return (\r\n    <div id=\"theme\">\r\n      <p>{locale.settings.theme}</p>\r\n      <Radio slider checked={isDark} onChange={handleChangeTheme} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeTheme;\r\n","import React, { useState } from \"react\";\r\nimport { Icon, Input, Button } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst ChangePassword = ({ locale }) => {\r\n  const [isPasswordChangeShow, setIsPasswordChangeShow] = useState(false);\r\n\r\n  const handleOpenPasswordChange = () =>\r\n    setIsPasswordChangeShow(!isPasswordChangeShow);\r\n\r\n  const contentStyle = {\r\n    maxHeight: `${isPasswordChangeShow ? 300 : 0}px`,\r\n  };\r\n\r\n  const chevronStyle = {\r\n    transform: `rotate(${isPasswordChangeShow ? 180 : 0}deg)`,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"passwordChangeHeader\" onClick={handleOpenPasswordChange}>\r\n        <p>{locale.settings.password}</p>\r\n\r\n        <div className=\"chevronIcon\" style={chevronStyle}>\r\n          <Icon name=\"chevron down\"></Icon>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"passwordChange\" style={contentStyle}>\r\n        <div className=\"passwordChange-input\">\r\n          <Input\r\n            size=\"small\"\r\n            fluid\r\n            placeholder={locale.settings.enterPasswordPlaceholder}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"passwordChange-input\">\r\n          <Input\r\n            size=\"small\"\r\n            fluid\r\n            placeholder={locale.settings.repeatPasswordPlaceholder}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"passwordChange-button\">\r\n          <Button>{locale.settings.savePassword}</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","export const languageOptions = [\r\n  { key: 1, text: \"en\", value: \"en\" },\r\n  { key: 2, text: \"ru\", value: \"ru\" },\r\n];\r\n","import Theme from \"./theme\";\r\nimport Password from \"./password\";\r\nimport Language from \"./language\";\r\nimport UserData from \"./userData\";\r\nimport Reset from \"./reset\";\r\n\r\nexport default [Theme, Password, Language, UserData, Reset];\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Menu, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { languageOptions } from \"constants/settingsConstants\";\r\nimport { selectLanguage } from \"redux/selectors\";\r\n\r\nimport \"../style.sass\";\r\nimport { setLanguage } from \"redux/actions\";\r\n\r\nconst Language = ({ locale }) => {\r\n  const language = useSelector(selectLanguage);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeLanguage = (e, data) => {\r\n    const { value } = data;\r\n    dispatch(setLanguage(value));\r\n    localStorage.setItem(\"lang\", value);\r\n  };\r\n\r\n  return (\r\n    <div id=\"language\">\r\n      <p>{locale.settings.language}</p>\r\n      <Menu compact>\r\n        <Dropdown\r\n          options={languageOptions}\r\n          value={language}\r\n          onChange={handleChangeLanguage}\r\n          simple\r\n          item\r\n        />\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Language;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst UserData = ({ locale }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"passwordChangeHeader\">\r\n        <p>{locale.settings.userData}</p>\r\n        <div className=\"chevronIcon\">\r\n          <Icon name=\"chevron down\"></Icon>\r\n        </div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserData;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\n\r\nconst Reset = ({ locale }) => {\r\n  const handleReset = () => {\r\n    try {\r\n      localStorage.clear();\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Сброс\",\r\n        message: \"Произошел сброс настроек\",\r\n        type: \"success\",\r\n      });\r\n    } catch (err) {\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Сброс\",\r\n        message: \"Сброс не удался\",\r\n        type: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"reset\">\r\n      <p>{locale.settings.reset}</p>\r\n      <div>\r\n        <Button onClick={handleReset}>{locale.settings.resetButton}</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectTheme } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport components from \"./components\";\r\n\r\nconst SettingsPageComponent = () => {\r\n  const { messages } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n\r\n  return (\r\n    <PageWithHeader title={messages.titles.settings}>\r\n      <div className=\"settingsBody\">\r\n        {components.map((SettingsComponent, index) => (\r\n          <div key={index} className=\"settingsItem\">\r\n            <Card fluid style={themeStyle[theme]}>\r\n              <Card.Content>\r\n                <SettingsComponent locale={messages} />\r\n              </Card.Content>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default memo(SettingsPageComponent);\r\n","import React from \"react\";\r\n\r\nimport SettingsPageComponent from \"./component\";\r\n\r\nconst SettingsPageContainer = () => {\r\n  return <SettingsPageComponent />;\r\n};\r\n\r\nexport default SettingsPageContainer;\r\n","import moment from \"moment\";\r\n\r\nexport const dateParse = (date) => moment(date).format(\"MMM Do YY hh:mm\");\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"semantic-ui-react\";\r\n\r\nconst ModalWindow = ({\r\n  handleClose,\r\n  isOpen,\r\n  title,\r\n  children,\r\n  handleSuccess,\r\n  size,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal open={isOpen} onClose={handleClose} size={size}>\r\n        <Modal.Header>{title}</Modal.Header>\r\n        <Modal.Content>{children}</Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={handleClose}>Отмена</Button>\r\n          <Button onClick={handleSuccess}>Подтвердить</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","export const headerNames = (names) => [\r\n  { accessor: \"name\", title: names.name },\r\n  { accessor: \"type\", title: names.type },\r\n  { accessor: \"client\", title: names.client },\r\n  { accessor: \"createDate\", title: names.createDate },\r\n];\r\n\r\nexport const paginationOptions = [\r\n  {\r\n    key: 0,\r\n    text: 10,\r\n    value: 10,\r\n  },\r\n  {\r\n    key: 1,\r\n    text: 15,\r\n    value: 15,\r\n  },\r\n  {\r\n    key: 2,\r\n    text: 20,\r\n    value: 20,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Dropdown, Menu, Icon } from \"semantic-ui-react\";\r\n\r\nimport { paginationOptions } from \"constants/tableConstants\";\r\n\r\nconst TablePagination = ({ pageSize, handlers, pageCount, page }) => {\r\n  const {\r\n    messages: { table },\r\n  } = useIntl();\r\n  console.log(handlers);\r\n\r\n  const {\r\n    handleChangePageSize,\r\n    handleChangePage,\r\n    handleChevronLeft,\r\n    handleChevronRight,\r\n  } = handlers;\r\n\r\n  const buttons = [];\r\n\r\n  if (pageCount < 6) {\r\n    for (let i = 1; i <= pageCount; i++) {\r\n      buttons.push(i);\r\n    }\r\n  }\r\n\r\n  if (pageCount >= 6) {\r\n    if (page < 3) {\r\n      for (let i = 1; i <= 3; i++) {\r\n        buttons.push(i);\r\n      }\r\n    } else if (page > pageCount - 2) {\r\n      console.log(\"there\");\r\n      for (let i = pageCount - 4; i <= pageCount; i++) {\r\n        buttons.push(i);\r\n      }\r\n    } else {\r\n      for (let i = page - 1; i <= page + 1; i++) {\r\n        buttons.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (pageCount > 5 && page < pageCount - 2) {\r\n    buttons.push(\"...\");\r\n    buttons.push(pageCount);\r\n  }\r\n\r\n  return (\r\n    <div className=\"tableFooter\">\r\n      <span>\r\n        {table.rows}\r\n        <Dropdown\r\n          inline\r\n          onChange={handleChangePageSize}\r\n          options={paginationOptions}\r\n          value={pageSize}\r\n        />\r\n      </span>\r\n\r\n      <Menu size=\"mini\" floated=\"right\" pagination>\r\n        <Menu.Item icon onClick={handleChevronLeft} cursor=\"pointer\">\r\n          <Icon name=\"chevron left\" />\r\n        </Menu.Item>\r\n\r\n        {buttons.map((item, index) => {\r\n          return item === \"...\" ? (\r\n            <Menu.Item key=\"index\" disabled>\r\n              ...\r\n            </Menu.Item>\r\n          ) : (\r\n            <Menu.Item\r\n              key={index}\r\n              active={page === item}\r\n              onClick={() => handleChangePage(item)}\r\n            >\r\n              {item}\r\n            </Menu.Item>\r\n          );\r\n        })}\r\n\r\n        <Menu.Item icon onClick={handleChevronRight} cursor=\"pointer\">\r\n          <Icon name=\"chevron right\" />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TablePagination;\r\n","import React from \"react\";\r\n\r\nimport Component from \"./component\";\r\n\r\nconst PaginationContainer = ({ handlers, page, pageCount, ...props }) => {\r\n  const $handlers = {\r\n    ...handlers,\r\n    handleChevronLeft: () => page > 1 && handlers.handleChangePage(page - 1),\r\n    handleChevronRight: () =>\r\n      page < pageCount && handlers.handleChangePage(page + 1),\r\n  };\r\n  return (\r\n    <Component\r\n      handlers={$handlers}\r\n      page={page}\r\n      pageCount={pageCount}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaginationContainer;\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nimport TablePagination from \"containers/pagination\";\r\n\r\nconst inlineStyle = { overflow: \"visible\" };\r\n\r\nconst TableComponent = ({\r\n  headerCells,\r\n  data,\r\n  compact,\r\n  handlers,\r\n  showPagination,\r\n  ...props\r\n}) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n\r\n  const colSpan = headerCells.length;\r\n\r\n  const tableParams = {\r\n    compact: compact ? \"very\" : null,\r\n    inverted: theme === \"dark\",\r\n  };\r\n\r\n  const header = headerCells.map((item, index) => {\r\n    const handleSort = handlers.handleSort.bind(item);\r\n    const isSorted = handlers.isSorted.bind(item)();\r\n\r\n    return (\r\n      <Table.HeaderCell onClick={handleSort} sorted={isSorted} key={index}>\r\n        {item.title}\r\n      </Table.HeaderCell>\r\n    );\r\n  });\r\n\r\n  const tableData = data.map((item, index) => {\r\n    const cells = headerCells.map((headerItem, index) => (\r\n      <Table.Cell key={index}>{item[headerItem.accessor]}</Table.Cell>\r\n    ));\r\n\r\n    return <Table.Row key={index}>{cells}</Table.Row>;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        compact={tableParams.compact}\r\n        inverted={tableParams.inverted}\r\n        sortable\r\n        selectable\r\n        celled\r\n        fixed\r\n      >\r\n        <Table.Header>\r\n          <Table.Row>{header}</Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>{tableData}</Table.Body>\r\n\r\n        {showPagination && (\r\n          <Table.Footer fullWidth>\r\n            <Table.Row>\r\n              <Table.HeaderCell style={inlineStyle} colSpan={colSpan}>\r\n                <TablePagination handlers={handlers} {...props} />\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Footer>\r\n        )}\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(TableComponent);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { sortBy } from \"lodash\";\r\n\r\nimport TableComponent from \"./component\";\r\n\r\nconst reverseDirection = {\r\n  ascending: \"descending\",\r\n  descending: \"ascending\",\r\n};\r\n\r\nconst TableContainer = ({ headerNames, tableData, ...props }) => {\r\n  const {\r\n    messages: {\r\n      table: { columnNames },\r\n    },\r\n  } = useIntl();\r\n\r\n  const [column, setColumn] = useState();\r\n  const [direction, setDirection] = useState();\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [displayData, setDisplayData] = useState(tableData);\r\n  const [pageCount, setPageCount] = useState();\r\n\r\n  useEffect(() => {\r\n    setDisplayData(tableData.slice((page - 1) * pageSize, page * pageSize));\r\n    setPageCount(Math.ceil(tableData.length / pageSize));\r\n  }, [tableData, page, pageSize]);\r\n\r\n  const handlers = {\r\n    handleChangePageSize: (e, { value }) => {\r\n      setPageSize(value);\r\n      setPage(1);\r\n    },\r\n    handleChangePage: setPage,\r\n    isSorted: function () {\r\n      return column === this.accessor ? direction : null;\r\n    },\r\n    handleSort: function () {\r\n      if (column !== this.accessor) {\r\n        setDisplayData(sortBy(displayData, [this.accessor]));\r\n        setColumn(this.accessor);\r\n        setDirection(\"ascending\");\r\n      } else {\r\n        setDisplayData(displayData.reverse());\r\n        setDirection(reverseDirection[direction]);\r\n      }\r\n    },\r\n  };\r\n\r\n  const headerCells = headerNames(columnNames);\r\n\r\n  return (\r\n    <TableComponent\r\n      headerCells={headerCells}\r\n      pageSize={pageSize}\r\n      data={displayData}\r\n      handlers={handlers}\r\n      pageCount={pageCount}\r\n      page={page}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TableContainer;\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nconst AddProjectForm = () => {\r\n  return (\r\n    <div className=\"projectAddForm\">\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Название\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Тип проекта\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Клиент\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Дата создания\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProjectForm;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card, Input, Button, Radio } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport Modal from \"containers/modal\";\r\nimport Table from \"containers/table\";\r\nimport WithLoader from \"containers/withLoader\";\r\nimport AddProjectForm from \"./components/projectAddForm\";\r\n\r\nimport { headerNames } from \"constants/tableConstants\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport { selectTheme, selectProjects } from \"redux/selectors\";\r\n\r\nconst ProjectsPageComponent = ({\r\n  compact,\r\n  handleChange,\r\n  handleChangeFilter,\r\n  handleFilterData,\r\n  handleToggleModal,\r\n  modalState,\r\n  handleClickEdit,\r\n}) => {\r\n  const {\r\n    messages: { titles, projects },\r\n  } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n  const projectsData = useSelector(selectProjects);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.projects}>\r\n      <div className=\"projectsBody\">\r\n        <Card fluid style={themeStyle[theme]}>\r\n          <Card.Content>\r\n            <div className=\"projectsContent\">\r\n              <div className=\"projectsTitle\">{projects.title}</div>\r\n\r\n              <div className=\"projectsActions\">\r\n                <div className=\"projectsButtons\">\r\n                  <div className=\"crudButton\">\r\n                    <Button onClick={handleToggleModal}>{projects.add}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <Button>{projects.delete}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <Button onClick={handleClickEdit}>{projects.update}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <p>{projects.dense}</p>\r\n\r\n                    <Radio toggle onChange={handleChange} />\r\n                  </div>\r\n                </div>\r\n\r\n                <Input\r\n                  icon=\"search\"\r\n                  placeholder={projects.search}\r\n                  onChange={handleChangeFilter}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"projectsTable\">\r\n                <WithLoader>\r\n                  {projectsData && (\r\n                    <Table\r\n                      showPagination={true}\r\n                      compact={compact}\r\n                      headerNames={headerNames}\r\n                      tableData={handleFilterData(projectsData)}\r\n                    />\r\n                  )}\r\n                </WithLoader>\r\n              </div>\r\n            </div>\r\n          </Card.Content>\r\n        </Card>\r\n        <Modal\r\n          isOpen={modalState}\r\n          handleClose={handleToggleModal}\r\n          title=\"Добавление проекта\"\r\n          size=\"tiny\"\r\n        >\r\n          <AddProjectForm />\r\n        </Modal>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default ProjectsPageComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getProjects } from \"ducks\";\r\nimport { dateParse } from \"utils\";\r\nimport { setAppState, setProjects } from \"redux/actions\";\r\nimport { selectProjects } from \"redux/selectors\";\r\n\r\nimport ProjectsPageComponent from \"./component\";\r\n\r\nconst ProjectsPageContainer = () => {\r\n  const [compact, changeCompact] = useState(false);\r\n  const [modalState, setModalState] = useState(false);\r\n  const [filter, setFilter] = useState(\"\");\r\n  //const [selectedProject, setSelectedProject] = useState();\r\n\r\n  const projects = useSelector(selectProjects);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleClickEdit = () => history.push(\"/projects/0\");\r\n  const handleToggleModal = () => setModalState(!modalState);\r\n  const handleChange = () => changeCompact(!compact);\r\n  const handleChangeFilter = ({ target: { value } }) => setFilter(value);\r\n  const handleFilterData = (data) =>\r\n    data.filter((item) => {\r\n      const filtered = Object.values(item).filter((value) => {\r\n        const index = value\r\n          .toString()\r\n          .toLowerCase()\r\n          .indexOf(filter.toLowerCase());\r\n\r\n        return index !== -1;\r\n      });\r\n\r\n      return filtered.length > 0;\r\n    });\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    const fetchProjects = async (source) => {\r\n      dispatch(setAppState(true));\r\n\r\n      const response = await getProjects({\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      if (response) {\r\n        const responseWithChecked = response.map((item) => ({\r\n          ...item,\r\n          isChecked: false,\r\n          createDate: dateParse(item.createDate),\r\n        }));\r\n\r\n        dispatch(setProjects(responseWithChecked));\r\n      }\r\n\r\n      dispatch(setAppState(false));\r\n    };\r\n\r\n    !projects && fetchProjects(source);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch, projects]);\r\n\r\n  return (\r\n    <ProjectsPageComponent\r\n      compact={compact}\r\n      modalState={modalState}\r\n      handleChangeFilter={handleChangeFilter}\r\n      handleToggleModal={handleToggleModal}\r\n      handleChange={handleChange}\r\n      handleClickEdit={handleClickEdit}\r\n      handleFilterData={handleFilterData}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProjectsPageContainer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst Card = ({ children }) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const style = {\r\n    borderColor: theme === \"light\" ? \"rgba(0,0,0, 0.15)\" : \"gray\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui-card\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Card);\r\n","import React from \"react\";\r\n\r\nimport CardComponent from \"./component\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst CardContainer = (props) => {\r\n  return <CardComponent {...props} />;\r\n};\r\n\r\nexport default React.memo(CardContainer);\r\n","import React, { useState, useEffect, memo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Icon, Checkbox } from \"semantic-ui-react\";\r\n\r\nimport Card from \"containers/card\";\r\n\r\nimport { setActiveMessage } from \"redux/actions\";\r\nimport { dateParse } from \"utils\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst Message = ({\r\n  title,\r\n  text,\r\n  isRead,\r\n  isImportant,\r\n  handleCheck,\r\n  id,\r\n  isChecked,\r\n  client,\r\n  date,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [style, setStyle] = useState({});\r\n\r\n  const iconName = isRead ? \"envelope open outline\" : \"envelope outline\";\r\n\r\n  const handleChange = () => handleCheck(id);\r\n  const handleContextMenu = (e) => e.preventDefault();\r\n  const handleMouseLeave = () => isOpen && setIsOpen(false);\r\n  const handleMouseDown = (e) => {\r\n    e.preventDefault();\r\n    e.button === 2 && setIsOpen(!isOpen);\r\n  };\r\n  const handleClick = () => {\r\n    dispatch(\r\n      setActiveMessage({\r\n        title: title,\r\n        text: text,\r\n        client: client,\r\n        date: date,\r\n      })\r\n    );\r\n    history.push(`mail/${id}`);\r\n  };\r\n\r\n  const messageContainerPadding = { paddingLeft: isOpen ? \"100px\" : \"0px\" };\r\n\r\n  useEffect(() => {\r\n    const calcDelay = () => {\r\n      const delay = id * 2;\r\n      if (delay < 10) {\r\n        return \"0\" + delay;\r\n      }\r\n      return delay;\r\n    };\r\n\r\n    const style = {\r\n      transitionDelay: `0.${calcDelay()}s`,\r\n      opacity: 1,\r\n    };\r\n\r\n    setTimeout(() => setStyle(style), 0);\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"messageComponent-hover\" onMouseLeave={handleMouseLeave}>\r\n      <div\r\n        className=\"messageComponent\"\r\n        style={{ ...style, ...messageContainerPadding }}\r\n      >\r\n        <div className=\"deleteMessage\">\r\n          <div className=\"actionIcon\">\r\n            <Icon size=\"big\" name=\"trash alternate\" />\r\n          </div>\r\n\r\n          <div className=\"actionIcon\">\r\n            <Icon size=\"big\" name=\"warning\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"messageContainer\">\r\n          <Card>\r\n            <div\r\n              className=\"messageContent\"\r\n              onContextMenu={handleContextMenu}\r\n              onMouseDown={handleMouseDown}\r\n            >\r\n              <div className=\"indicator\">\r\n                {!isRead && <div className=\"readPoint\"></div>}\r\n\r\n                {isImportant && <div className=\"importantPoint\"></div>}\r\n              </div>\r\n\r\n              <div className=\"checkboxContainer\">\r\n                <div className=\"checkbox\">\r\n                  <Checkbox checked={isChecked} onChange={handleChange} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"redirect\" onClick={handleClick}>\r\n                <div className=\"image\">\r\n                  <Icon size=\"huge\" name={iconName}></Icon>\r\n                </div>\r\n\r\n                <div className=\"messageInfo\">\r\n                  <div className=\"messageMeta\">\r\n                    <div className=\"title\">\r\n                      <strong>{client}</strong>\r\n                    </div>\r\n\r\n                    <div className=\"date\">{dateParse(date)}</div>\r\n                  </div>\r\n\r\n                  <div className=\"messageText\">\r\n                    <div className=\"title\">\r\n                      <strong>{title}</strong>\r\n                    </div>\r\n\r\n                    <div className=\"text\">{text}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Message);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Label } from \"semantic-ui-react\";\r\n\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport { setTab } from \"redux/actions\";\r\nimport {\r\n  selectTheme,\r\n  selectActiveTab,\r\n  selectSortedMessages,\r\n} from \"redux/selectors\";\r\n\r\nimport Card from \"containers/card\";\r\nimport Message from \"./message\";\r\nimport Pagination from \"containers/pagination\";\r\n\r\nexport const Content = ({ handleCheck }) => {\r\n  const tabs = useSelector(selectSortedMessages);\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const content = tabs[activeTab];\r\n\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState();\r\n  const [displayedMessages, setDisplayedMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (content) {\r\n      setDisplayedMessages(\r\n        content.slice((page - 1) * pageSize, page * pageSize)\r\n      );\r\n      setPageCount(Math.ceil(content.length / pageSize));\r\n    }\r\n  }, [content, page, pageSize]);\r\n\r\n  const handlers = {\r\n    handleChangePageSize: (e, { value }) => {\r\n      setPageSize(value);\r\n      setPage(1);\r\n    },\r\n    handleChangePage: setPage,\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <>\r\n        <div className=\"messagesInnerArea\">\r\n          {displayedMessages.length > 0 ? (\r\n            displayedMessages.map((item, index) => (\r\n              <Message\r\n                {...item}\r\n                handleCheck={handleCheck}\r\n                index={index}\r\n                key={index}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"emptyMessage\">Empty</div>\r\n          )}\r\n        </div>\r\n        <div className=\"messagesPagination\">\r\n          <Pagination\r\n            handlers={handlers}\r\n            pageSize={pageSize}\r\n            page={page}\r\n            pageCount={pageCount}\r\n          />\r\n        </div>\r\n      </>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const Tab = ({ title, messagesCounter, locale }) => {\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const theme = useSelector(selectTheme);\r\n  const dispatch = useDispatch();\r\n\r\n  const isActive = activeTab === title;\r\n  const activeColor = theme === \"dark\" ? \"white\" : \"grey\";\r\n  const borderColor = isActive ? activeColor : \"transparent\";\r\n  const tabStyle = { borderBottom: `2px solid ${borderColor}` };\r\n\r\n  const handleClick = () => dispatch(setTab(title));\r\n\r\n  return (\r\n    <div style={tabStyle} className=\"tab\" key={title} onClick={handleClick}>\r\n      <span style={themeStyle[theme]}>{locale.tabs[title]}</span>\r\n      {messagesCounter && <Label>{messagesCounter}</Label>}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst Tabs = ({ tabs = [], children }) => {\r\n  return (\r\n    <div className=\"ui-tabs\">\r\n      <div className=\"ui-tabs_tabsContainer\">{tabs}</div>\r\n      <div className=\"ui-tabs_content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Tabs);\r\n","import React from \"react\";\r\n\r\nimport TabsComponent from \"./component\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst TabsContainer = (props) => {\r\n  return <TabsComponent {...props} />;\r\n};\r\n\r\nexport default React.memo(TabsContainer);\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Input } from \"semantic-ui-react\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectActiveTab, selectSortedMessages } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { Tab, Content } from \"./components/tab\";\r\nimport Tabs from \"containers/tabs\";\r\nimport WithLoader from \"containers/withLoader\";\r\n\r\nconst MailPageComponent = ({\r\n  handleCheck,\r\n  handleCheckAll,\r\n  checked,\r\n  tabsNames,\r\n}) => {\r\n  const {\r\n    messages: { titles, mail },\r\n  } = useIntl();\r\n\r\n  const tabs = useSelector(selectSortedMessages);\r\n  const activeTab = useSelector(selectActiveTab);\r\n\r\n  const checkAll = () => handleCheckAll({ setCheck: true });\r\n  const unCheckAll = () => handleCheckAll({ setCheck: false });\r\n\r\n  const renderTabs = tabsNames.map((item, index) => (\r\n    <Tab\r\n      key={index}\r\n      locale={mail}\r\n      messagesCounter={tabs[item] ? tabs[item].length.toString() : \"0\"}\r\n      title={item}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <PageWithHeader title={titles.mail}>\r\n      <div className=\"mailBody\">\r\n        <div className=\"mailActions\">\r\n          <div className=\"buttons\">\r\n            <Button onClick={checkAll}>{mail.buttons.checkAll}</Button>\r\n\r\n            <Button onClick={unCheckAll}>{mail.buttons.uncheckAll}</Button>\r\n\r\n            <Button disabled={checked === 0}>\r\n              {mail.buttons.checkAsImportant}\r\n            </Button>\r\n\r\n            <Button disabled={checked === 0}>\r\n              {mail.buttons[activeTab === \"trash\" ? \"remove\" : \"removeToTrash\"]}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <Input placeholder={mail.searchPlaceholder} icon=\"search\" />\r\n          </div>\r\n        </div>\r\n\r\n        <Tabs tabs={renderTabs}>\r\n          <WithLoader>\r\n            <Content handleCheck={handleCheck} />\r\n          </WithLoader>\r\n        </Tabs>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default memo(MailPageComponent);\r\n","export const tabsNames = [\"all\", \"unread\", \"read\", \"important\", \"trash\"];\r\n\r\nexport const tabFilter = {\r\n  all: (item) => !item.isDeleted,\r\n  read: (item) => item.isRead && !item.isDeleted,\r\n  unread: (item) => !item.isRead && !item.isDeleted,\r\n  important: (item) => item.isImportant && !item.isDeleted,\r\n  trash: (item) => item.isDeleted,\r\n};\r\n","import React, { useEffect, useState, memo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport MainPageComponent from \"./component\";\r\n\r\nimport { getMessages } from \"ducks\";\r\nimport { tabsNames, tabFilter } from \"constants/messagesConstants\";\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\nimport { setAppState, setMessages, setTabSortedMessages } from \"redux/actions\";\r\nimport { selectActiveTab, selectMessages } from \"redux/selectors\";\r\n\r\nconst helpUserNotify = () => {\r\n  const isShow = localStorage.getItem(\"mailNotify\");\r\n\r\n  if (!isShow) {\r\n    localStorage.setItem(\"mailNotify\", \"showed\");\r\n    store.addNotification({\r\n      ...notificationSettings,\r\n      title: \"Подсказка\",\r\n      message:\r\n        \"Воспользуйтесь меню быстрого доступа, кликнув по сообщению правой кнопкой мыши\",\r\n      type: \"info\",\r\n      dismiss: {\r\n        duration: 25000,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nconst MailPageContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const messages = useSelector(selectMessages);\r\n\r\n  const [checked, setChecked] = useState(0);\r\n\r\n  const countChecked = (array) => {\r\n    setChecked(\r\n      array.reduce((accum, item) =>\r\n        typeof accum === \"object\"\r\n          ? accum.isChecked + item.isChecked\r\n          : accum + item.isChecked\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCheck = (id) => {\r\n    const checkedMessages = messages.map((item) => ({\r\n      ...item,\r\n      isChecked: item.id === id ? !item.isChecked : item.isChecked,\r\n    }));\r\n\r\n    const tabs = {};\r\n    tabsNames.forEach((item) => {\r\n      tabs[item] = checkedMessages.filter(tabFilter[item]);\r\n    });\r\n\r\n    dispatch(setMessages(checkedMessages));\r\n    dispatch(setTabSortedMessages(tabs));\r\n    countChecked(checkedMessages);\r\n  };\r\n  const handleCheckAll = ({ setCheck }) => {\r\n    const checkedMessages = messages.map((item) => ({\r\n      ...item,\r\n      isChecked: tabFilter[activeTab](item) ? setCheck : item.isChecked,\r\n    }));\r\n\r\n    const tabs = {};\r\n    tabsNames.forEach((item) => {\r\n      tabs[item] = checkedMessages.filter(tabFilter[item]);\r\n    });\r\n\r\n    dispatch(setMessages(checkedMessages));\r\n    dispatch(setTabSortedMessages(tabs));\r\n    countChecked(checkedMessages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    const fetchMessages = async (source) => {\r\n      dispatch(setAppState(true));\r\n      const response = await getMessages({\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      if (response) {\r\n        const responseWithChecked = response.map((item) => ({\r\n          ...item,\r\n          isChecked: false,\r\n        }));\r\n\r\n        const tabs = {};\r\n        tabsNames.forEach((item) => {\r\n          tabs[item] = responseWithChecked.filter(tabFilter[item]);\r\n        });\r\n\r\n        dispatch(setMessages(responseWithChecked));\r\n        helpUserNotify();\r\n\r\n        dispatch(setTabSortedMessages(tabs));\r\n      }\r\n      dispatch(setAppState(false));\r\n    };\r\n\r\n    !messages && fetchMessages(source);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch, messages]);\r\n\r\n  return (\r\n    <MainPageComponent\r\n      tabsNames={tabsNames}\r\n      messages={messages}\r\n      handleCheckAll={handleCheckAll}\r\n      handleCheck={handleCheck}\r\n      checked={checked}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(MailPageContainer);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport WithLoader from \"containers/withLoader\";\r\nimport { dateParse } from \"utils\";\r\nimport Card from \"containers/card\";\r\n\r\nimport { selectActiveMessage } from \"redux/selectors\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst MessageCheckPageComponent = ({ handleClickBack }) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  const activeMessage = useSelector(selectActiveMessage);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.mail} subtitle={\"read\"}>\r\n      <div className=\"messagePage\">\r\n        <div className=\"messagePage-buttons\">\r\n          <Button onClick={handleClickBack}>Назад</Button>\r\n          <Button>В корзину</Button>\r\n          <Button>Отметить как важное</Button>\r\n        </div>\r\n\r\n        <Card>\r\n          <div className=\"messagePage-body\">\r\n            <WithLoader>\r\n              <div>\r\n                <div className=\"messagePage-Body__date\">\r\n                  <span>Дата: </span>\r\n                  {activeMessage && dateParse(activeMessage.date)}\r\n                </div>\r\n                <div className=\"messagePage-Body__from\">\r\n                  <span>От кого: </span>\r\n                  {activeMessage && activeMessage.client}\r\n                </div>\r\n                <div className=\"messagePage-Body__theme\">\r\n                  <span>Тема: </span>\r\n                  {activeMessage && activeMessage.title}\r\n                </div>\r\n                <div className=\"messagePage-Body__text\">\r\n                  <span>Сообщение: </span>\r\n                  {activeMessage && activeMessage.text}\r\n                </div>\r\n              </div>\r\n            </WithLoader>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default MessageCheckPageComponent;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { getMessages } from \"ducks\";\r\n\r\nimport { tabsNames, tabFilter } from \"constants/messagesConstants\";\r\n\r\nimport MessageCheckComponent from \"./component\";\r\n\r\nimport {\r\n  setActiveMessage,\r\n  setMessages,\r\n  setTabSortedMessages,\r\n  setAppState,\r\n} from \"redux/actions\";\r\n\r\nconst MessageCheckPageContainer = () => {\r\n  const history = useHistory();\r\n  const { message } = useParams();\r\n\r\n  const messages = useSelector((state) => state.messages.messages);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickBack = () => history.goBack();\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    const fetchMessages = async (source) => {\r\n      dispatch(setAppState(true));\r\n\r\n      const response = await getMessages({\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      if (response) {\r\n        const responseWithChecked = response.map((item) => ({\r\n          ...item,\r\n          isChecked: false,\r\n        }));\r\n\r\n        const activeMessage = responseWithChecked.filter(\r\n          (item) => item.id.toString() === message.toString()\r\n        )[0];\r\n\r\n        const tabs = {};\r\n        tabsNames.forEach((item) => {\r\n          tabs[item] = responseWithChecked.filter(tabFilter[item]);\r\n        });\r\n\r\n        dispatch(setMessages(responseWithChecked));\r\n        dispatch(setTabSortedMessages(tabs));\r\n        dispatch(setActiveMessage(activeMessage));\r\n      }\r\n      dispatch(setAppState(false));\r\n    };\r\n\r\n    !messages && fetchMessages(source);\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [messages, dispatch, message]);\r\n\r\n  return <MessageCheckComponent handleClickBack={handleClickBack} />;\r\n};\r\n\r\nexport default MessageCheckPageContainer;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst inputStyle = { display: \"none\" };\r\n\r\nconst AddPictureForm = () => {\r\n  const [uploadedImage, setUploadedImage] = useState();\r\n  const inputRef = useRef();\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n  const handleChangeInput = (e) => setUploadedImage(e.target.value);\r\n\r\n  return (\r\n    <div className=\"form-text\">\r\n      <div className=\"form-text_title\">{uploadedImage || \"Выберите файл\"}</div>\r\n      <Button onClick={handleClick}>Выбрать файл</Button>\r\n\r\n      <input\r\n        type=\"file\"\r\n        style={inputStyle}\r\n        ref={inputRef}\r\n        onChange={handleChangeInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPictureForm;\r\n","import React from \"react\";\r\nimport { Form, TextArea } from \"semantic-ui-react\";\r\n\r\nconst AddTextForm = () => {\r\n  return (\r\n    <div className=\"form_textArea\">\r\n      <Form>\r\n        <TextArea placeholder=\"Введите текст\" />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTextForm;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport Modal from \"containers/modal\";\r\nimport AddPictureForm from \"./components/addPictureForm\";\r\nimport AddTextForm from \"./components/addTextForm\";\r\nimport Card from \"containers/card\";\r\n\r\nconst ProjectSavePageComponent = ({\r\n  onBack,\r\n  isTextModalShow,\r\n  isPictureModalShow,\r\n  handleToggleTextModal,\r\n  handleTogglePictureModal,\r\n}) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  return (\r\n    <PageWithHeader title={titles.projects} subtitle={\"read\"}>\r\n      <div className=\"projectsSaveBody\">\r\n        <div className=\"projectsSaveActions\">\r\n          <Button onClick={onBack}>Назад</Button>\r\n          <Button onClick={handleTogglePictureModal}>Добавить картинку</Button>\r\n          <Button onClick={handleToggleTextModal}>Добавить текст</Button>\r\n        </div>\r\n        <Card>\r\n          <div className=\"projectContent\">empty</div>\r\n        </Card>\r\n      </div>\r\n      <Modal\r\n        title=\"Добавить текст\"\r\n        isOpen={isTextModalShow}\r\n        handleClose={handleToggleTextModal}\r\n      >\r\n        <AddTextForm />\r\n      </Modal>\r\n      <Modal\r\n        title=\"Добавить картинку\"\r\n        isOpen={isPictureModalShow}\r\n        handleClose={handleTogglePictureModal}\r\n      >\r\n        <AddPictureForm />\r\n      </Modal>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default ProjectSavePageComponent;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ProjectSavePageComponent from \"./component\";\r\n\r\nconst ProjectSavePageContainer = () => {\r\n  const history = useHistory();\r\n\r\n  const [isTextModalShow, setIsTextModalShow] = useState(false);\r\n  const [isPictureModalShow, setIsPictureModalShow] = useState(false);\r\n\r\n  const onBack = () => history.goBack();\r\n\r\n  const handleToggleTextModal = () => setIsTextModalShow(!isTextModalShow);\r\n  const handleTogglePictureModal = () =>\r\n    setIsPictureModalShow(!isPictureModalShow);\r\n\r\n  return (\r\n    <ProjectSavePageComponent\r\n      isTextModalShow={isTextModalShow}\r\n      isPictureModalShow={isPictureModalShow}\r\n      onBack={onBack}\r\n      handleToggleTextModal={handleToggleTextModal}\r\n      handleTogglePictureModal={handleTogglePictureModal}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProjectSavePageContainer;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthComponent from \"./pages/auth\";\r\nimport MainPageComponent from \"./pages/main\";\r\nimport SettingsPageComponent from \"./pages/settings\";\r\nimport ProjectsPageComponent from \"./pages/projects\";\r\nimport MailPageComponent from \"./pages/mail\";\r\nimport MessageCheckPageComponent from \"./pages/messageCheck\";\r\nimport ProjectsSavePageComponent from \"./pages/projectsSave\";\r\n\r\nconst customRoute = ({ path, getToken }) => ({ children, ...props }) => {\r\n  const renderFunc = ({ location }) => {\r\n    const redirectConfig = {\r\n      pathname: path,\r\n      state: { from: location },\r\n    };\r\n\r\n    return getToken() ? children : <Redirect to={redirectConfig} />;\r\n  };\r\n\r\n  return <Route path={props.path} render={renderFunc}></Route>;\r\n};\r\n\r\nconst ProtectedRoute = customRoute({\r\n  path: \"/auth\",\r\n  getToken: () => localStorage.getItem(\"isAuth\"),\r\n});\r\n\r\nconst AuthRoute = customRoute({\r\n  path: \"/\",\r\n  getToken: () => !localStorage.getItem(\"isAuth\"),\r\n});\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <ProtectedRoute path=\"/mail/:message\">\r\n        <MessageCheckPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/projects/:project\">\r\n        <ProjectsSavePageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/projects\">\r\n        <ProjectsPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/mail\">\r\n        <MailPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/settings\">\r\n        <SettingsPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <AuthRoute path=\"/auth\">\r\n        <AuthComponent />\r\n      </AuthRoute>\r\n\r\n      <ProtectedRoute path=\"/\">\r\n        <MainPageComponent />\r\n      </ProtectedRoute>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport ReactNotification from \"react-notifications-component\";\r\n\r\nimport Routes from \"./routes\";\r\n\r\nimport { messages_ru } from \"locale/messages_ru\";\r\nimport { messages_en } from \"locale/messages_en\";\r\nimport { selectLanguage } from \"redux/selectors\";\r\n\r\nconst messages = {\r\n  en: messages_en,\r\n  ru: messages_ru,\r\n};\r\n\r\nconst App = () => {\r\n  const language = useSelector(selectLanguage);\r\n\r\n  return (\r\n    <>\r\n      <ReactNotification />\r\n      <IntlProvider locale={language} messages={messages[language]}>\r\n        <Router basename={\"portfolio\"}>\r\n          <Routes />\r\n        </Router>\r\n      </IntlProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const messages_en = {\r\n  titles: {\r\n    home: \"Main\",\r\n    projects: \"Projects\",\r\n    mail: \"Mail\",\r\n    settings: \"Settings\",\r\n    logout: \"Exit\",\r\n  },\r\n  mail: {\r\n    empty: \"Empty\",\r\n    searchPlaceholder: \"Search...\",\r\n    buttons: {\r\n      checkAll: \"Select all\",\r\n      uncheckAll: \"Remove selection\",\r\n      checkAsImportant: \"Check as important\",\r\n      removeToTrash: \"Remove to trash\",\r\n      remove: \"Remove\",\r\n    },\r\n    tabs: {\r\n      all: \"All\",\r\n      read: \"Read\",\r\n      unread: \"Unread\",\r\n      important: \"Important\",\r\n      trash: \"Trash\",\r\n    },\r\n  },\r\n  settings: {\r\n    theme: \"Dark theme\",\r\n    language: \"Language\",\r\n    password: \"Change password\",\r\n    userData: \"Change contact information\",\r\n    enterPasswordPlaceholder: \"Enter new password\",\r\n    repeatPasswordPlaceholder: \"Repeat new password\",\r\n    savePassword: \"Save\",\r\n    reset: \"Reset settings\",\r\n    resetButton: \"agree\",\r\n  },\r\n  home: {\r\n    title: \"Welcome, Administrator\",\r\n    visitors: {\r\n      title: \"New visitors for last time\",\r\n      day: \"Today\",\r\n      week: \"This week\",\r\n      month: \"This month\",\r\n    },\r\n    messages: {\r\n      title: \"New messages\",\r\n    },\r\n  },\r\n  projects: {\r\n    title: \"Projects list\",\r\n    add: \"Add project\",\r\n    delete: \"Delete checked\",\r\n    update: \"Edit\",\r\n    search: \"Search...\",\r\n    dense: \"Columns dense\",\r\n  },\r\n  table: {\r\n    rows: \"Rows per page \",\r\n    columnNames: {\r\n      name: \"Name\",\r\n      type: \"Type\",\r\n      client: \"Client\",\r\n      createDate: \"Creation date\",\r\n    },\r\n  },\r\n};\r\n","export const messages_ru = {\r\n  titles: {\r\n    home: \"Главная\",\r\n    projects: \"Проекты\",\r\n    mail: \"Почта\",\r\n    settings: \"Настройки\",\r\n    logout: \"Выход\",\r\n  },\r\n  mail: {\r\n    empty: \"Пусто\",\r\n    searchPlaceholder: \"Найти...\",\r\n    buttons: {\r\n      checkAll: \"Выделить все\",\r\n      uncheckAll: \"Снять выделение\",\r\n      checkAsImportant: \"Отметить как важное\",\r\n      removeToTrash: \"Поместить в корзину\",\r\n      remove: \"Удалить\",\r\n    },\r\n    tabs: {\r\n      all: \"Все\",\r\n      read: \"Прочитанные\",\r\n      unread: \"Непрочитанные\",\r\n      important: \"Важные\",\r\n      trash: \"Корзина\",\r\n    },\r\n  },\r\n  settings: {\r\n    theme: \"Темная тема\",\r\n    language: \"Язык\",\r\n    password: \"Изменить пароль\",\r\n    userData: \"Изменить контактные данные\",\r\n    enterPasswordPlaceholder: \"Введите новый пароль\",\r\n    repeatPasswordPlaceholder: \"Повторите новый пароль\",\r\n    savePassword: \"Сохранить\",\r\n    reset: \"Сброс настроек\",\r\n    resetButton: \"Подтвердить\",\r\n  },\r\n  home: {\r\n    title: \"Добро пожаловать, Администратор\",\r\n    visitors: {\r\n      title: \"Посетители за последнее время\",\r\n      day: \"сегодня\",\r\n      week: \"за неделю\",\r\n      month: \"за месяц\",\r\n    },\r\n    messages: {\r\n      title: \"Новые сообщения\",\r\n    },\r\n  },\r\n  projects: {\r\n    title: \"Список проектов\",\r\n    add: \"Добавить проект\",\r\n    delete: \"Удалить выбранное\",\r\n    update: \"Редактировать\",\r\n    search: \"Найти...\",\r\n    dense: \"Сжатие столбцов\",\r\n  },\r\n  table: {\r\n    rows: \"Количество строк \",\r\n    columnNames: {\r\n      name: \"Название\",\r\n      type: \"Тип проекта\",\r\n      client: \"Клиент\",\r\n      createDate: \"Дата создания\",\r\n    },\r\n  },\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  SET_MESSAGES,\r\n  SET_THEME,\r\n  SET_LANGUAGE,\r\n  SET_APP_STATE,\r\n  SET_TAB,\r\n  SET_TAB_SORTED_MESSAGES,\r\n  SET_ACTIVE_MESSAGE,\r\n  SET_ACTIVE_PROJECT,\r\n  SET_PROJECTS,\r\n  SET_NEW_MESSAGES_COUNTER,\r\n  SET_VISITS,\r\n} from \"./types\";\r\n\r\nconst messagesInitialState = {\r\n  messages: null,\r\n  counter: 0,\r\n  tabSortedMessages: [],\r\n  activeMessage: null,\r\n  activeTab: \"all\",\r\n};\r\n\r\nconst visitsInitialState = {\r\n  visits: { day: 0, week: 0, month: 0 },\r\n};\r\n\r\nconst projectsInitialState = {\r\n  projects: null,\r\n  activeProject: \"all\",\r\n};\r\n\r\nconst themeInitialState = {\r\n  theme: localStorage.getItem(\"theme\") || \"light\",\r\n};\r\n\r\nconst languageInitialState = {\r\n  language: localStorage.getItem(\"lang\") || \"en\",\r\n};\r\n\r\nconst appInitialState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const messagesReducer = (state = messagesInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NEW_MESSAGES_COUNTER:\r\n      return { ...state, counter: action.payload };\r\n    case SET_MESSAGES:\r\n      return { ...state, messages: action.payload };\r\n    case SET_TAB_SORTED_MESSAGES:\r\n      return { ...state, tabSortedMessages: action.payload };\r\n    case SET_TAB:\r\n      return { ...state, activeTab: action.payload };\r\n    case SET_ACTIVE_MESSAGE:\r\n      return { ...state, activeMessage: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const visitsReducer = (state = visitsInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_VISITS:\r\n      return { ...state, visits: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const projectsReducer = (state = projectsInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROJECTS:\r\n      return { ...state, projects: action.payload };\r\n    case SET_ACTIVE_PROJECT:\r\n      return { ...state, activeProjects: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const themeReducer = (state = themeInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_THEME:\r\n      return { ...state, theme: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const languageReducer = (state = languageInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LANGUAGE:\r\n      return { ...state, language: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const appStateReducer = (state = appInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_APP_STATE:\r\n      return { ...state, isLoading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport {\r\n  messagesReducer,\r\n  themeReducer,\r\n  languageReducer,\r\n  appStateReducer,\r\n  projectsReducer,\r\n  visitsReducer,\r\n} from \"./reducers\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  messages: messagesReducer,\r\n  projects: projectsReducer,\r\n  theme: themeReducer,\r\n  language: languageReducer,\r\n  appState: appStateReducer,\r\n  visits: visitsReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"normalize.css\";\r\nimport \"./index.sass\";\r\nimport App from \"./App\";\r\nimport \"animate.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore } from \"redux\";\r\nimport { rootReducer } from \"./redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}