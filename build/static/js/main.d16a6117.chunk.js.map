{"version":3,"sources":["constants/notificationSettings.js","redux/selectors.js","redux/types.js","redux/actions.js","constants/messagesConstants.js","ducks/messages.js","utils/dateParse.js","ducks/index.js","ducks/auth.js","pages/auth/component.jsx","pages/auth/index.js","containers/pageWithHeader/components/drawer.jsx","constants/drawerConstants.js","constants/themingStyles.js","containers/pageWithHeader/component.jsx","containers/pageWithHeader/index.js","containers/withLoader/index.js","pages/main/component.jsx","pages/main/index.js","ducks/main.js","pages/settings/components/theme.jsx","pages/settings/components/password.jsx","constants/settingsConstants.js","pages/settings/components/index.js","pages/settings/components/language.jsx","pages/settings/components/userData.jsx","pages/settings/components/reset.jsx","pages/settings/component.jsx","pages/settings/index.js","containers/modal/index.js","constants/tableConstants.js","containers/pagination/component.jsx","containers/pagination/index.js","containers/table/component.jsx","containers/table/index.js","pages/projects/components/projectAddForm.jsx","pages/projects/component.jsx","pages/projects/index.js","ducks/projects.js","containers/card/component.jsx","containers/card/index.js","pages/mail/components/message.jsx","pages/mail/components/tab.jsx","containers/tabs/component.jsx","containers/tabs/index.js","pages/mail/component.jsx","pages/mail/index.js","pages/messageCheck/component.jsx","pages/messageCheck/index.js","pages/projectsSave/components/addPictureForm.jsx","pages/projectsSave/components/addTextForm.jsx","pages/projectsSave/component.jsx","pages/projectsSave/index.js","routes.js","App.js","locale/messages_en.js","locale/messages_ru.js","serviceWorker.js","redux/reducers.js","redux/index.js","index.js"],"names":["notificationSettings","insert","container","animationIn","animationOut","dismiss","duration","selectLanguage","state","language","selectTheme","theme","selectLoading","appState","isLoading","selectProjects","projects","selectActiveMessage","messages","activeMessage","selectActiveTab","activeTab","selectSortedMessages","tabSortedMessages","selectMessages","selectNewMessagesCounter","counter","selectVisits","visits","SET_TAB","setMessages","type","payload","setTabSortedMessages","setActiveMessage","setAppState","tabsNames","tabFilter","all","item","isDeleted","read","isRead","unread","important","isImportant","trash","getMessages","cancelToken","successCallbackFromUI","queryWrapper","url","serverPath","method","errorMessage","successCallback","dispatch","response","responseWithChecked","data","map","isChecked","tabs","forEach","filter","dateParse","date","moment","format","body","getState","a","axios","params","console","error","isCancel","log","store","addNotification","title","message","secretKey","Math","random","AuthPageComponent","handleChangeLogin","handleChangePassword","handleLogin","loading","useSelector","className","fluid","Content","Input","icon","iconPosition","placeholder","onChange","Button","onClick","primary","AuthPageContainer","history","useHistory","useDispatch","from","useLocation","pathname","useState","login","setLogin","password","setPassword","handlers","e","target","value","loginData","CryptoJS","AES","encrypt","JSON","stringify","toString","_","localStorage","setItem","token","replace","checkAuth","BarsIcon","handleDrawerVisible","drawerVisible","id","DrawerComponent","children","titles","useIntl","location","handleClick","this","path","removeItem","push","itemStyle","backgroundColor","drawerStyle","maxWidth","style","onMouseLeave","home","mail","settings","logout","drawerItems","index","bind","key","Icon","name","size","themeStyle","dark","color","transition","light","memo","subtitle","marginLeft","styleByTheme","React","props","isVisible","setIsVisible","WithLoader","Loader","active","inline","MainPageComponent","visitors","day","week","month","MainPageContainer","useEffect","source","CancelToken","getMainInfo","cancel","ChangeTheme","locale","isDark","Radio","slider","checked","newTheme","setTheme","ChangePassword","isPasswordChangeShow","setIsPasswordChangeShow","contentStyle","maxHeight","chevronStyle","transform","enterPasswordPlaceholder","repeatPasswordPlaceholder","savePassword","languageOptions","text","Theme","Password","Menu","compact","Dropdown","options","setLanguage","simple","userData","reset","clear","err","resetButton","components","SettingsComponent","SettingsPageContainer","ModalWindow","handleClose","isOpen","handleSuccess","Modal","open","onClose","Header","Actions","headerNames","names","accessor","client","createDate","paginationOptions","TablePagination","pageSize","pageCount","page","table","handleChangePageSize","handleChangePage","handleChevronLeft","handleChevronRight","buttons","i","rows","floated","pagination","Item","cursor","disabled","PaginationContainer","$handlers","inlineStyle","overflow","headerCells","showPagination","colSpan","length","tableParams","inverted","header","handleSort","isSorted","Table","HeaderCell","sorted","tableData","cells","headerItem","Cell","Row","sortable","selectable","celled","fixed","Body","Footer","fullWidth","reverseDirection","ascending","descending","TableContainer","columnNames","column","setColumn","direction","setDirection","setPage","setPageSize","displayData","setDisplayData","setPageCount","slice","ceil","sortBy","reverse","AddProjectForm","ProjectsPageComponent","handleChange","handleChangeFilter","handleFilterData","handleToggleModal","modalState","handleClickEdit","projectsData","add","delete","update","dense","toggle","search","ProjectsPageContainer","changeCompact","setModalState","setFilter","getProjects","Object","values","toLowerCase","indexOf","borderColor","handleCheck","setIsOpen","setStyle","iconName","messageContainerPadding","paddingLeft","transitionDelay","delay","calcDelay","opacity","setTimeout","onContextMenu","preventDefault","onMouseDown","button","Checkbox","content","displayedMessages","setDisplayedMessages","Tab","messagesCounter","tabStyle","borderBottom","Label","handleCheckAll","renderTabs","setCheck","checkAll","uncheckAll","checkAsImportant","searchPlaceholder","setChecked","countChecked","array","reduce","accum","isShow","getItem","helpUserNotify","checkedMessages","MessageCheckPageComponent","handleClickBack","MessageCheckPageContainer","useParams","goBack","inputStyle","display","AddPictureForm","uploadedImage","setUploadedImage","inputRef","useRef","current","click","ref","AddTextForm","Form","TextArea","ProjectSavePageComponent","onBack","isTextModalShow","isPictureModalShow","handleToggleTextModal","handleTogglePictureModal","ProjectSavePageContainer","setIsTextModalShow","setIsPictureModalShow","customRoute","getToken","render","redirectConfig","to","ProtectedRoute","AuthRoute","Routes","en","empty","removeToTrash","remove","ru","App","Boolean","window","hostname","match","messagesInitialState","visitsInitialState","projectsInitialState","activeProject","themeInitialState","languageInitialState","appInitialState","rootReducer","combineReducers","action","activeProjects","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d16a6117.chunk.js","sourcesContent":["export const notificationSettings = {\r\n  insert: \"top\",\r\n  container: \"top-right\",\r\n  animationIn: [\"animate__animated\", \"animate__fadeInRightBig\"],\r\n  animationOut: [\"animate__animated\", \"animate__fadeOutRightBig\"],\r\n  dismiss: {\r\n    duration: 5000,\r\n  },\r\n};\r\n","export const selectLanguage = (state) => state.language.language;\r\nexport const selectTheme = (state) => state.theme.theme;\r\nexport const selectLoading = (state) => state.appState.isLoading;\r\nexport const selectProjects = (state) => state.projects.projects;\r\nexport const selectActiveMessage = (state) => state.messages.activeMessage;\r\nexport const selectActiveTab = (state) => state.messages.activeTab;\r\nexport const selectSortedMessages = (state) => state.messages.tabSortedMessages;\r\nexport const selectMessages = (state) => state.messages.messages;\r\nexport const selectNewMessagesCounter = (state) => state.messages.counter;\r\nexport const selectVisits = (state) => state.visits.visits;\r\n","export const SET_MESSAGES = \"MESSAGES/SET_MESSAGES\";\r\nexport const SET_NEW_MESSAGES_COUNTER = \"MESSAGES/SET_NEW_MESSAGES_COUNTER\";\r\nexport const SET_ACTIVE_MESSAGE = \"MESSAGES/SET_ACTIVE_MESSAGE\";\r\nexport const SET_TAB_SORTED_MESSAGES = \"MESSAGES/SET_TAB_SORTED_MESSAGES\";\r\nexport const SET_TAB = \"MESSAGES/SET_TAB\";\r\nexport const SET_PROJECTS = \"PROJECTS/SET_PROJECTS\";\r\nexport const SET_ACTIVE_PROJECT = \"PROJECTS/SET_ACTIVE_PROJECT\";\r\nexport const SET_THEME = \"THEME/SET_THEME\";\r\nexport const SET_LANGUAGE = \"LANGUAGE/SET_LANGUAGE\";\r\nexport const SET_APP_STATE = \"APP_STATE/SET_APP_STATE\";\r\nexport const SET_VISITS = \"VISITS/SET_VISITS\";\r\n","import {\r\n  SET_MESSAGES,\r\n  SET_LANGUAGE,\r\n  SET_THEME,\r\n  SET_APP_STATE,\r\n  SET_TAB,\r\n  SET_TAB_SORTED_MESSAGES,\r\n  SET_ACTIVE_MESSAGE,\r\n  SET_ACTIVE_PROJECT,\r\n  SET_PROJECTS,\r\n  SET_NEW_MESSAGES_COUNTER,\r\n  SET_VISITS,\r\n} from \"./types\";\r\n\r\nexport const setVisits = (visits) => ({\r\n  type: SET_VISITS,\r\n  payload: visits,\r\n});\r\n\r\nexport const setProjects = (projects) => ({\r\n  type: SET_PROJECTS,\r\n  payload: projects,\r\n});\r\n\r\nexport const setActiveProject = (activeProject) => ({\r\n  type: SET_ACTIVE_PROJECT,\r\n  payload: activeProject,\r\n});\r\n\r\nexport const setMessages = (messages) => ({\r\n  type: SET_MESSAGES,\r\n  payload: messages,\r\n});\r\n\r\nexport const setNewMessagesCounter = (counter) => ({\r\n  type: SET_NEW_MESSAGES_COUNTER,\r\n  payload: counter,\r\n});\r\n\r\nexport const setTabSortedMessages = (tabSortedMessages) => ({\r\n  type: SET_TAB_SORTED_MESSAGES,\r\n  payload: tabSortedMessages,\r\n});\r\n\r\nexport const setActiveMessage = (activeMessage) => ({\r\n  type: SET_ACTIVE_MESSAGE,\r\n  payload: activeMessage,\r\n});\r\n\r\nexport const setTab = (tab) => ({\r\n  type: SET_TAB,\r\n  payload: tab,\r\n});\r\n\r\nexport const setTheme = (theme) => ({\r\n  type: SET_THEME,\r\n  payload: theme,\r\n});\r\n\r\nexport const setLanguage = (language) => ({\r\n  type: SET_LANGUAGE,\r\n  payload: language,\r\n});\r\n\r\nexport const setAppState = (state) => ({\r\n  type: SET_APP_STATE,\r\n  payload: state,\r\n});\r\n","export const tabsNames = [\"all\", \"unread\", \"read\", \"important\", \"trash\"];\r\n\r\nexport const tabFilter = {\r\n  all: (item) => !item.isDeleted,\r\n  read: (item) => item.isRead && !item.isDeleted,\r\n  unread: (item) => !item.isRead && !item.isDeleted,\r\n  important: (item) => item.isImportant && !item.isDeleted,\r\n  trash: (item) => item.isDeleted,\r\n};\r\n","import { setMessages, setTabSortedMessages } from \"redux/actions\";\r\nimport { tabsNames, tabFilter } from \"constants/messagesConstants\";\r\nimport { queryWrapper, serverPath } from \"ducks\";\r\n\r\nexport const getMessages = ({ cancelToken, successCallbackFromUI }) => {\r\n  return queryWrapper({\r\n    cancelToken: cancelToken,\r\n    url: `${serverPath}/messages`,\r\n    method: \"get\",\r\n    errorMessage: \"Не удалось загрузить сообщения\",\r\n    successCallback: (dispatch, response) => {\r\n      const responseWithChecked = response.data.map((item) => ({\r\n        ...item,\r\n        isChecked: false,\r\n      }));\r\n\r\n      dispatch(setMessages(responseWithChecked));\r\n\r\n      const tabs = {};\r\n      tabsNames.forEach((item) => {\r\n        tabs[item] = responseWithChecked.filter(tabFilter[item]);\r\n      });\r\n\r\n      dispatch(setTabSortedMessages(tabs));\r\n\r\n      successCallbackFromUI(responseWithChecked);\r\n    },\r\n  });\r\n};\r\n","import moment from \"moment\";\r\n\r\nexport const dateParse = (date) => moment(date).format(\"MMM Do YY hh:mm\");\r\n","import axios from \"axios\";\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { selectLoading } from \"redux/selectors\";\r\nimport { setAppState } from \"redux/actions\";\r\n\r\nexport const serverPath = \"http://localhost:9000\";\r\n\r\nexport * from \"./messages\";\r\nexport * from \"./projects\";\r\nexport * from \"./main\";\r\n\r\nexport const queryWrapper = ({\r\n  successCallback,\r\n  method,\r\n  errorMessage,\r\n  url,\r\n  cancelToken,\r\n  body,\r\n}) => async (dispatch, getState) => {\r\n  const isLoading = selectLoading(getState());\r\n  if (!isLoading) {\r\n    dispatch(setAppState(true));\r\n    try {\r\n      const response = await axios({\r\n        method: method,\r\n        url: url,\r\n        data: body,\r\n        params: { cancelToken },\r\n      });\r\n\r\n      response && successCallback(dispatch, response);\r\n    } catch (error) {\r\n      console.error(error);\r\n      axios.isCancel(error)\r\n        ? console.log(\"Отмена запроса\")\r\n        : store.addNotification({\r\n            ...notificationSettings,\r\n            title: \"Ошибка\",\r\n            message: errorMessage,\r\n            type: \"danger\",\r\n          });\r\n    }\r\n    dispatch(setAppState(false));\r\n  }\r\n};\r\n","import { serverPath, queryWrapper } from \"ducks\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nconst secretKey = Math.random() * 100;\r\n\r\nexport const checkAuth = ({ cancelToken, loginData, from, history }) =>\r\n  queryWrapper({\r\n    url: `${serverPath}/auth`,\r\n    method: \"post\",\r\n    body: {\r\n      [secretKey]: CryptoJS.AES.encrypt(\r\n        JSON.stringify(loginData),\r\n        secretKey.toString()\r\n      ).toString(),\r\n    },\r\n    cancelToken: cancelToken,\r\n    errorMessage: \"Неверный логин или пароль\",\r\n    successCallback: (_, response) => {\r\n      localStorage.setItem(\"token\", response.data.token);\r\n      history.replace(from);\r\n    },\r\n  });\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectLoading } from \"redux/selectors\";\r\n\r\nimport { Card, Input, Button } from \"semantic-ui-react\";\r\n\r\nconst AuthPageComponent = ({\r\n  handleChangeLogin,\r\n  handleChangePassword,\r\n  handleLogin,\r\n}) => {\r\n  const loading = useSelector(selectLoading);\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"cardBody\">\r\n        <Card fluid>\r\n          <Card.Content>\r\n            <div className=\"cardContent\">\r\n              <div className=\"cardContent_title\">\r\n                <p>Авторизация</p>\r\n              </div>\r\n\r\n              <div className=\"cardContent_input\">\r\n                <Input\r\n                  fluid\r\n                  icon=\"user\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"login\"\r\n                  type=\"login\"\r\n                  onChange={handleChangeLogin}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"cardContent_input\">\r\n                <Input\r\n                  fluid\r\n                  icon=\"key\"\r\n                  iconPosition=\"left\"\r\n                  placeholder=\"password\"\r\n                  type=\"password\"\r\n                  onChange={handleChangePassword}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"cardContent_button\">\r\n                <Button loading={loading} onClick={handleLogin} primary>\r\n                  Вход\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Card.Content>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPageComponent;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { checkAuth } from \"ducks/auth\";\r\n\r\nimport AuthComponent from \"./component\";\r\n\r\nconst AuthPageContainer = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { from } = useLocation().state || { from: { pathname: \"/\" } };\r\n\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handlers = {\r\n    handleChangeLogin: (e) => setLogin(e.target.value),\r\n    handleChangePassword: (e) => setPassword(e.target.value),\r\n    handleLogin: () => {\r\n      dispatch(\r\n        checkAuth({\r\n          cancelToken: null,\r\n          from: from,\r\n          history: history,\r\n          loginData: {\r\n            login,\r\n            password,\r\n          },\r\n        })\r\n      );\r\n    },\r\n  };\r\n\r\n  return (\r\n    <AuthComponent\r\n      handleChangeLogin={handlers.handleChangeLogin}\r\n      handleChangePassword={handlers.handleChangePassword}\r\n      handleLogin={handlers.handleLogin}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthPageContainer;\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { drawerItems } from \"constants/drawerConstants\";\r\n\r\nconst BarsIcon = ({ handleDrawerVisible, drawerVisible }) => {\r\n  return (\r\n    <div className=\"sidebar-item\">\r\n      <div\r\n        className=\"sidebar-item__icon icon_header\"\r\n        onClick={handleDrawerVisible}\r\n      >\r\n        <div id=\"nav-icon4\" className={drawerVisible ? \" open\" : \"\"}>\r\n          <span></span>\r\n\r\n          <span></span>\r\n\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawerComponent = ({ handleDrawerVisible, drawerVisible, children }) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  const history = useHistory();\r\n\r\n  const { pathname } = history.location;\r\n\r\n  function handleClick() {\r\n    if (this.path === \"/auth\") {\r\n      localStorage.removeItem(\"token\");\r\n      history.push(\"/auth\");\r\n    } else {\r\n      history.push(this.path);\r\n      handleDrawerVisible();\r\n    }\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    drawerVisible && handleDrawerVisible();\r\n  };\r\n\r\n  const itemStyle = {\r\n    backgroundColor: \"#333\",\r\n  };\r\n\r\n  const drawerStyle = { maxWidth: drawerVisible ? \"220px\" : \"70px\" };\r\n\r\n  return (\r\n    <div className=\"drawer\">\r\n      <div\r\n        className=\"sidebar\"\r\n        style={drawerStyle}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <BarsIcon\r\n          handleDrawerVisible={handleDrawerVisible}\r\n          drawerVisible={drawerVisible}\r\n        />\r\n\r\n        {drawerItems(titles).map((item, index) => (\r\n          <div\r\n            className=\"sidebar-item\"\r\n            onClick={handleClick.bind(item)}\r\n            style={pathname === item.path ? itemStyle : {}}\r\n            key={index}\r\n          >\r\n            <div className=\"sidebar-item__icon\">\r\n              <Icon name={item.icon} size=\"big\" />\r\n            </div>\r\n\r\n            <div className=\"sidebar-item__title\">{item.title}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <>{children}</>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawerComponent;\r\n","export const drawerItems = (titles) => [\r\n  {\r\n    icon: \"home\",\r\n    title: titles.home,\r\n    path: \"/\",\r\n  },\r\n  {\r\n    icon: \"file\",\r\n    title: titles.projects,\r\n    path: \"/projects\",\r\n  },\r\n  {\r\n    icon: \"mail\",\r\n    title: titles.mail,\r\n    path: \"/mail\",\r\n  },\r\n  {\r\n    icon: \"settings\",\r\n    title: titles.settings,\r\n    path: \"/settings\",\r\n  },\r\n  {\r\n    icon: \"log out\",\r\n    title: titles.logout,\r\n    path: \"/auth\",\r\n  },\r\n];\r\n","export const themeStyle = {\r\n  dark: {\r\n    backgroundColor: \"#333\",\r\n    color: \"white\",\r\n    transition: \"all 0.5s ease\",\r\n  },\r\n  light: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    transition: \"all 0.5s ease\",\r\n  },\r\n};\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport Drawer from \"./components/drawer\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\n\r\nconst PageWithHeaderComponent = ({\r\n  drawerVisible,\r\n  drawerItems,\r\n  handleDrawerVisible,\r\n  title,\r\n  subtitle,\r\n  children,\r\n}) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const style = { marginLeft: drawerVisible ? \"220px\" : \"70px\" };\r\n  const styleByTheme = themeStyle[theme];\r\n\r\n  return (\r\n    <Drawer\r\n      drawerVisible={drawerVisible}\r\n      drawerItems={drawerItems}\r\n      handleDrawerVisible={handleDrawerVisible}\r\n    >\r\n      <div className=\"pageWithHeader\" style={style}>\r\n        <div className=\"header\" style={styleByTheme}>\r\n          <div className=\"headerContent\">\r\n            <div className=\"headerTitle\">{title}</div>\r\n\r\n            {subtitle && <div className=\"headerSubtitle\">/{subtitle}</div>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body\" style={styleByTheme}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default memo(PageWithHeaderComponent);\r\n","import React, { useState } from \"react\";\r\n\r\nimport PageWithHeaderComponent from \"./component\";\r\n\r\nconst PageWithHeaderContainer = (props) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const handleChangeIsVisible = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  return (\r\n    <PageWithHeaderComponent\r\n      handleDrawerVisible={handleChangeIsVisible}\r\n      drawerVisible={isVisible}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PageWithHeaderContainer);\r\n","import React from \"react\";\r\nimport { Loader } from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { selectLoading } from \"redux/selectors\";\r\n\r\nconst WithLoader = ({ children }) => {\r\n  const loading = useSelector(selectLoading);\r\n  return <>{loading ? <Loader active inline=\"centered\" /> : children}</>;\r\n};\r\n\r\nexport default WithLoader;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectTheme } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport WithLoader from \"containers/withLoader\";\r\n\r\nconst MainPageComponent = ({ counter, visits }) => {\r\n  const {\r\n    messages: {\r\n      titles,\r\n      home: { title, visitors, messages },\r\n    },\r\n  } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.home}>\r\n      <div className=\"mainBody\">\r\n        <div className=\"helloWorld\">\r\n          <Card style={themeStyle[theme]} fluid>\r\n            <Card.Content>\r\n              <div className=\"welcomeSlogan\">\r\n                <p>{title}</p>\r\n              </div>\r\n            </Card.Content>\r\n          </Card>\r\n        </div>\r\n\r\n        <WithLoader>\r\n          <div className=\"mainInformation\">\r\n            <div className=\"infoBlock\">\r\n              <Card style={themeStyle[theme]} fluid>\r\n                <Card.Content>\r\n                  <div className=\"newMessages\">\r\n                    <p className=\"infoTitle\">{messages.title}</p>\r\n\r\n                    <p>{counter}</p>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n            </div>\r\n            <div className=\"infoBlock\">\r\n              <Card style={themeStyle[theme]} fluid>\r\n                <Card.Content>\r\n                  <div className=\"visitors\">\r\n                    <p className=\"infoTitle\">{visitors.title}</p>\r\n\r\n                    <p>\r\n                      {visitors.day}: {visits.day}\r\n                    </p>\r\n\r\n                    <p>\r\n                      {visitors.week}: {visits.week}\r\n                    </p>\r\n\r\n                    <p>\r\n                      {visitors.month}: {visits.month}\r\n                    </p>\r\n                  </div>\r\n                </Card.Content>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </WithLoader>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default MainPageComponent;\r\n","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getMainInfo } from \"ducks/main\";\r\nimport { selectNewMessagesCounter, selectVisits } from \"redux/selectors\";\r\n\r\nimport MainPageComponent from \"./component\";\r\n\r\nconst MainPageContainer = () => {\r\n  const counter = useSelector(selectNewMessagesCounter);\r\n  const visits = useSelector(selectVisits);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    dispatch(\r\n      getMainInfo({\r\n        cancelToken: source.token,\r\n      })\r\n    );\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return <MainPageComponent counter={counter} visits={visits} />;\r\n};\r\n\r\nexport default MainPageContainer;\r\n","import { setVisits, setNewMessagesCounter } from \"redux/actions\";\r\nimport { queryWrapper, serverPath } from \"ducks\";\r\n\r\nexport const getMainInfo = ({ cancelToken }) => {\r\n  return queryWrapper({\r\n    url: `${serverPath}/mainPageInfo`,\r\n    method: \"get\",\r\n    cancelToken: cancelToken,\r\n    errorMessage: \"Не удалось загрузить данные.\",\r\n    successCallback: (dispatch, response) => {\r\n      dispatch(setNewMessagesCounter(response.data.counter));\r\n      dispatch(setVisits(response.data.visits));\r\n    },\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Radio } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\nimport { setTheme } from \"redux/actions\";\r\n\r\nconst ChangeTheme = ({ locale }) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeTheme = () => {\r\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\r\n    dispatch(setTheme(newTheme));\r\n    localStorage.setItem(\"theme\", newTheme);\r\n  };\r\n\r\n  const isDark = theme === \"dark\";\r\n\r\n  return (\r\n    <div id=\"theme\">\r\n      <p>{locale.settings.theme}</p>\r\n      <Radio slider checked={isDark} onChange={handleChangeTheme} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeTheme;\r\n","import React, { useState } from \"react\";\r\nimport { Icon, Input, Button } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst ChangePassword = ({ locale }) => {\r\n  const [isPasswordChangeShow, setIsPasswordChangeShow] = useState(false);\r\n\r\n  const handleOpenPasswordChange = () =>\r\n    setIsPasswordChangeShow(!isPasswordChangeShow);\r\n\r\n  const contentStyle = {\r\n    maxHeight: `${isPasswordChangeShow ? 300 : 0}px`,\r\n  };\r\n\r\n  const chevronStyle = {\r\n    transform: `rotate(${isPasswordChangeShow ? 180 : 0}deg)`,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"passwordChangeHeader\" onClick={handleOpenPasswordChange}>\r\n        <p>{locale.settings.password}</p>\r\n\r\n        <div className=\"chevronIcon\" style={chevronStyle}>\r\n          <Icon name=\"chevron down\"></Icon>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"passwordChange\" style={contentStyle}>\r\n        <div className=\"passwordChange-input\">\r\n          <Input\r\n            size=\"small\"\r\n            fluid\r\n            placeholder={locale.settings.enterPasswordPlaceholder}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"passwordChange-input\">\r\n          <Input\r\n            size=\"small\"\r\n            fluid\r\n            placeholder={locale.settings.repeatPasswordPlaceholder}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"passwordChange-button\">\r\n          <Button>{locale.settings.savePassword}</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","export const languageOptions = [\r\n  { key: 1, text: \"en\", value: \"en\" },\r\n  { key: 2, text: \"ru\", value: \"ru\" },\r\n];\r\n","import Theme from \"./theme\";\r\nimport Password from \"./password\";\r\nimport Language from \"./language\";\r\nimport UserData from \"./userData\";\r\nimport Reset from \"./reset\";\r\n\r\nexport default [Theme, Password, Language, UserData, Reset];\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Menu, Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { languageOptions } from \"constants/settingsConstants\";\r\nimport { selectLanguage } from \"redux/selectors\";\r\n\r\nimport \"../style.sass\";\r\nimport { setLanguage } from \"redux/actions\";\r\n\r\nconst Language = ({ locale }) => {\r\n  const language = useSelector(selectLanguage);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeLanguage = (e, data) => {\r\n    const { value } = data;\r\n    dispatch(setLanguage(value));\r\n    localStorage.setItem(\"lang\", value);\r\n  };\r\n\r\n  return (\r\n    <div id=\"language\">\r\n      <p>{locale.settings.language}</p>\r\n      <Menu compact>\r\n        <Dropdown\r\n          options={languageOptions}\r\n          value={language}\r\n          onChange={handleChangeLanguage}\r\n          simple\r\n          item\r\n        />\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Language;\r\n","import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst UserData = ({ locale }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"passwordChangeHeader\">\r\n        <p>{locale.settings.userData}</p>\r\n        <div className=\"chevronIcon\">\r\n          <Icon name=\"chevron down\"></Icon>\r\n        </div>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserData;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\n\r\nconst Reset = ({ locale }) => {\r\n  const handleReset = () => {\r\n    try {\r\n      localStorage.clear();\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Сброс\",\r\n        message: \"Произошел сброс настроек\",\r\n        type: \"success\",\r\n      });\r\n    } catch (err) {\r\n      store.addNotification({\r\n        ...notificationSettings,\r\n        title: \"Сброс\",\r\n        message: \"Сброс не удался\",\r\n        type: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"reset\">\r\n      <p>{locale.settings.reset}</p>\r\n      <div>\r\n        <Button onClick={handleReset}>{locale.settings.resetButton}</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectTheme } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport components from \"./components\";\r\n\r\nconst SettingsPageComponent = () => {\r\n  const { messages } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n\r\n  return (\r\n    <PageWithHeader title={messages.titles.settings}>\r\n      <div className=\"settingsBody\">\r\n        {components.map((SettingsComponent, index) => (\r\n          <div key={index} className=\"settingsItem\">\r\n            <Card fluid style={themeStyle[theme]}>\r\n              <Card.Content>\r\n                <SettingsComponent locale={messages} />\r\n              </Card.Content>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default memo(SettingsPageComponent);\r\n","import React from \"react\";\r\n\r\nimport SettingsPageComponent from \"./component\";\r\n\r\nconst SettingsPageContainer = () => {\r\n  return <SettingsPageComponent />;\r\n};\r\n\r\nexport default SettingsPageContainer;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"semantic-ui-react\";\r\n\r\nconst ModalWindow = ({\r\n  handleClose,\r\n  isOpen,\r\n  title,\r\n  children,\r\n  handleSuccess,\r\n  size,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal open={isOpen} onClose={handleClose} size={size}>\r\n        <Modal.Header>{title}</Modal.Header>\r\n        <Modal.Content>{children}</Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={handleClose}>Отмена</Button>\r\n          <Button onClick={handleSuccess}>Подтвердить</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","export const headerNames = (names) => [\r\n  { accessor: \"name\", title: names.name },\r\n  { accessor: \"type\", title: names.type },\r\n  { accessor: \"client\", title: names.client },\r\n  { accessor: \"createDate\", title: names.createDate },\r\n];\r\n\r\nexport const paginationOptions = [\r\n  {\r\n    key: 0,\r\n    text: 10,\r\n    value: 10,\r\n  },\r\n  {\r\n    key: 1,\r\n    text: 15,\r\n    value: 15,\r\n  },\r\n  {\r\n    key: 2,\r\n    text: 20,\r\n    value: 20,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Dropdown, Menu, Icon } from \"semantic-ui-react\";\r\n\r\nimport { paginationOptions } from \"constants/tableConstants\";\r\n\r\nconst TablePagination = ({ pageSize, handlers, pageCount, page }) => {\r\n  const {\r\n    messages: { table },\r\n  } = useIntl();\r\n\r\n  const {\r\n    handleChangePageSize,\r\n    handleChangePage,\r\n    handleChevronLeft,\r\n    handleChevronRight,\r\n  } = handlers;\r\n\r\n  const buttons = [];\r\n\r\n  if (pageCount < 6) {\r\n    for (let i = 1; i <= pageCount; i++) {\r\n      buttons.push(i);\r\n    }\r\n  }\r\n\r\n  if (pageCount >= 6) {\r\n    if (page < 3) {\r\n      for (let i = 1; i <= 3; i++) {\r\n        buttons.push(i);\r\n      }\r\n    } else if (page > pageCount - 2) {\r\n      console.log(\"there\");\r\n      for (let i = pageCount - 4; i <= pageCount; i++) {\r\n        buttons.push(i);\r\n      }\r\n    } else {\r\n      for (let i = page - 1; i <= page + 1; i++) {\r\n        buttons.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (pageCount > 5 && page < pageCount - 2) {\r\n    buttons.push(\"...\");\r\n    buttons.push(pageCount);\r\n  }\r\n\r\n  return (\r\n    <div className=\"tableFooter\">\r\n      <span>\r\n        {table.rows}\r\n        <Dropdown\r\n          inline\r\n          onChange={handleChangePageSize}\r\n          options={paginationOptions}\r\n          value={pageSize}\r\n        />\r\n      </span>\r\n\r\n      <Menu size=\"mini\" floated=\"right\" pagination>\r\n        <Menu.Item icon onClick={handleChevronLeft} cursor=\"pointer\">\r\n          <Icon name=\"chevron left\" />\r\n        </Menu.Item>\r\n\r\n        {buttons.map((item, index) => {\r\n          return item === \"...\" ? (\r\n            <Menu.Item key=\"index\" disabled>\r\n              ...\r\n            </Menu.Item>\r\n          ) : (\r\n            <Menu.Item\r\n              key={index}\r\n              active={page === item}\r\n              onClick={() => handleChangePage(item)}\r\n            >\r\n              {item}\r\n            </Menu.Item>\r\n          );\r\n        })}\r\n\r\n        <Menu.Item icon onClick={handleChevronRight} cursor=\"pointer\">\r\n          <Icon name=\"chevron right\" />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TablePagination;\r\n","import React from \"react\";\r\n\r\nimport Component from \"./component\";\r\n\r\nconst PaginationContainer = ({ handlers, page, pageCount, ...props }) => {\r\n  const $handlers = {\r\n    ...handlers,\r\n    handleChevronLeft: () => page > 1 && handlers.handleChangePage(page - 1),\r\n    handleChevronRight: () =>\r\n      page < pageCount && handlers.handleChangePage(page + 1),\r\n  };\r\n  return (\r\n    <Component\r\n      handlers={$handlers}\r\n      page={page}\r\n      pageCount={pageCount}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaginationContainer;\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nimport TablePagination from \"containers/pagination\";\r\n\r\nconst inlineStyle = { overflow: \"visible\" };\r\n\r\nconst TableComponent = ({\r\n  headerCells,\r\n  data,\r\n  compact,\r\n  handlers,\r\n  showPagination,\r\n  ...props\r\n}) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n\r\n  const colSpan = headerCells.length;\r\n\r\n  const tableParams = {\r\n    compact: compact ? \"very\" : null,\r\n    inverted: theme === \"dark\",\r\n  };\r\n\r\n  const header = headerCells.map((item, index) => {\r\n    const handleSort = handlers.handleSort.bind(item);\r\n    const isSorted = handlers.isSorted.bind(item)();\r\n\r\n    return (\r\n      <Table.HeaderCell onClick={handleSort} sorted={isSorted} key={index}>\r\n        {item.title}\r\n      </Table.HeaderCell>\r\n    );\r\n  });\r\n\r\n  const tableData = data.map((item, index) => {\r\n    const cells = headerCells.map((headerItem, index) => (\r\n      <Table.Cell key={index}>{item[headerItem.accessor]}</Table.Cell>\r\n    ));\r\n\r\n    return <Table.Row key={index}>{cells}</Table.Row>;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        compact={tableParams.compact}\r\n        inverted={tableParams.inverted}\r\n        sortable\r\n        selectable\r\n        celled\r\n        fixed\r\n      >\r\n        <Table.Header>\r\n          <Table.Row>{header}</Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>{tableData}</Table.Body>\r\n\r\n        {showPagination && (\r\n          <Table.Footer fullWidth>\r\n            <Table.Row>\r\n              <Table.HeaderCell style={inlineStyle} colSpan={colSpan}>\r\n                <TablePagination handlers={handlers} {...props} />\r\n              </Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Footer>\r\n        )}\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(TableComponent);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { sortBy } from \"lodash\";\r\n\r\nimport TableComponent from \"./component\";\r\n\r\nconst reverseDirection = {\r\n  ascending: \"descending\",\r\n  descending: \"ascending\",\r\n};\r\n\r\nconst TableContainer = ({ headerNames, tableData, ...props }) => {\r\n  const {\r\n    messages: {\r\n      table: { columnNames },\r\n    },\r\n  } = useIntl();\r\n\r\n  const [column, setColumn] = useState();\r\n  const [direction, setDirection] = useState();\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [displayData, setDisplayData] = useState(tableData);\r\n  const [pageCount, setPageCount] = useState();\r\n\r\n  useEffect(() => {\r\n    setDisplayData(tableData.slice((page - 1) * pageSize, page * pageSize));\r\n    setPageCount(Math.ceil(tableData.length / pageSize));\r\n  }, [tableData, page, pageSize]);\r\n\r\n  const handlers = {\r\n    handleChangePageSize: (e, { value }) => {\r\n      setPageSize(value);\r\n      setPage(1);\r\n    },\r\n    handleChangePage: setPage,\r\n    isSorted: function () {\r\n      return column === this.accessor ? direction : null;\r\n    },\r\n    handleSort: function () {\r\n      if (column !== this.accessor) {\r\n        setDisplayData(sortBy(displayData, [this.accessor]));\r\n        setColumn(this.accessor);\r\n        setDirection(\"ascending\");\r\n      } else {\r\n        setDisplayData(displayData.reverse());\r\n        setDirection(reverseDirection[direction]);\r\n      }\r\n    },\r\n  };\r\n\r\n  const headerCells = headerNames(columnNames);\r\n\r\n  return (\r\n    <TableComponent\r\n      headerCells={headerCells}\r\n      pageSize={pageSize}\r\n      data={displayData}\r\n      handlers={handlers}\r\n      pageCount={pageCount}\r\n      page={page}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TableContainer;\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nconst AddProjectForm = () => {\r\n  return (\r\n    <div className=\"projectAddForm\">\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Название\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Тип проекта\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Клиент\" />\r\n      </div>\r\n      <div className=\"ProjectFormField\">\r\n        <Input fluid placeholder=\"Дата создания\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProjectForm;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Card, Input, Button, Radio } from \"semantic-ui-react\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport Modal from \"containers/modal\";\r\nimport Table from \"containers/table\";\r\nimport WithLoader from \"containers/withLoader\";\r\nimport AddProjectForm from \"./components/projectAddForm\";\r\n\r\nimport { headerNames } from \"constants/tableConstants\";\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport { selectTheme, selectProjects } from \"redux/selectors\";\r\n\r\nconst ProjectsPageComponent = ({\r\n  compact,\r\n  handleChange,\r\n  handleChangeFilter,\r\n  handleFilterData,\r\n  handleToggleModal,\r\n  modalState,\r\n  handleClickEdit,\r\n}) => {\r\n  const {\r\n    messages: { titles, projects },\r\n  } = useIntl();\r\n\r\n  const theme = useSelector(selectTheme);\r\n  const projectsData = useSelector(selectProjects);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.projects}>\r\n      <div className=\"projectsBody\">\r\n        <Card fluid style={themeStyle[theme]}>\r\n          <Card.Content>\r\n            <div className=\"projectsContent\">\r\n              <div className=\"projectsTitle\">{projects.title}</div>\r\n\r\n              <div className=\"projectsActions\">\r\n                <div className=\"projectsButtons\">\r\n                  <div className=\"crudButton\">\r\n                    <Button onClick={handleToggleModal}>{projects.add}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <Button>{projects.delete}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <Button onClick={handleClickEdit}>{projects.update}</Button>\r\n                  </div>\r\n\r\n                  <div className=\"crudButton\">\r\n                    <p>{projects.dense}</p>\r\n\r\n                    <Radio toggle onChange={handleChange} />\r\n                  </div>\r\n                </div>\r\n\r\n                <Input\r\n                  icon=\"search\"\r\n                  placeholder={projects.search}\r\n                  onChange={handleChangeFilter}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"projectsTable\">\r\n                <WithLoader>\r\n                  {projectsData && (\r\n                    <Table\r\n                      showPagination={true}\r\n                      compact={compact}\r\n                      headerNames={headerNames}\r\n                      tableData={handleFilterData(projectsData)}\r\n                    />\r\n                  )}\r\n                </WithLoader>\r\n              </div>\r\n            </div>\r\n          </Card.Content>\r\n        </Card>\r\n        <Modal\r\n          isOpen={modalState}\r\n          handleClose={handleToggleModal}\r\n          title=\"Добавление проекта\"\r\n          size=\"tiny\"\r\n        >\r\n          <AddProjectForm />\r\n        </Modal>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default ProjectsPageComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getProjects } from \"ducks\";\r\nimport { selectProjects } from \"redux/selectors\";\r\n\r\nimport ProjectsPageComponent from \"./component\";\r\n\r\nconst ProjectsPageContainer = () => {\r\n  const [compact, changeCompact] = useState(false);\r\n  const [modalState, setModalState] = useState(false);\r\n  const [filter, setFilter] = useState(\"\");\r\n  //const [selectedProject, setSelectedProject] = useState();\r\n\r\n  const projects = useSelector(selectProjects);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleClickEdit = () => history.push(\"/projects/0\");\r\n  const handleToggleModal = () => setModalState(!modalState);\r\n  const handleChange = () => changeCompact(!compact);\r\n  const handleChangeFilter = ({ target: { value } }) => setFilter(value);\r\n  //const handleDeleteProjects = (projects) => {};\r\n  const handleFilterData = (data) =>\r\n    data.filter((item) => {\r\n      const filtered = Object.values(item).filter((value) => {\r\n        const index = value\r\n          .toString()\r\n          .toLowerCase()\r\n          .indexOf(filter.toLowerCase());\r\n\r\n        return index !== -1;\r\n      });\r\n\r\n      return filtered.length > 0;\r\n    });\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    !projects &&\r\n      dispatch(\r\n        getProjects({\r\n          cancelToken: source.token,\r\n        })\r\n      );\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch, projects]);\r\n\r\n  return (\r\n    <ProjectsPageComponent\r\n      compact={compact}\r\n      modalState={modalState}\r\n      handleChangeFilter={handleChangeFilter}\r\n      handleToggleModal={handleToggleModal}\r\n      handleChange={handleChange}\r\n      handleClickEdit={handleClickEdit}\r\n      handleFilterData={handleFilterData}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProjectsPageContainer;\r\n","import { dateParse } from \"utils\";\r\nimport { setProjects } from \"redux/actions\";\r\nimport { queryWrapper, serverPath } from \"ducks\";\r\n\r\nexport const deleteProjects = () => {};\r\n\r\nexport const getProjects = ({ cancelToken }) => {\r\n  return queryWrapper({\r\n    cancelToken: cancelToken,\r\n    url: `${serverPath}/projects`,\r\n    method: \"get\",\r\n    errorMessage: \"Не удалось загрузить проекты\",\r\n    successCallback: (dispatch, response) => {\r\n      const responseWithChecked = response.data.map((item) => ({\r\n        ...item,\r\n        isChecked: false,\r\n        createDate: dateParse(item.createDate),\r\n      }));\r\n\r\n      dispatch(setProjects(responseWithChecked));\r\n    },\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst Card = ({ children }) => {\r\n  const theme = useSelector((state) => state.theme.theme);\r\n  const style = {\r\n    borderColor: theme === \"light\" ? \"rgba(0,0,0, 0.15)\" : \"gray\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui-card\" style={style}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Card);\r\n","import React from \"react\";\r\n\r\nimport CardComponent from \"./component\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst CardContainer = (props) => {\r\n  return <CardComponent {...props} />;\r\n};\r\n\r\nexport default React.memo(CardContainer);\r\n","import React, { useState, useEffect, memo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Icon, Checkbox } from \"semantic-ui-react\";\r\n\r\nimport Card from \"containers/card\";\r\n\r\nimport { setActiveMessage } from \"redux/actions\";\r\nimport { dateParse } from \"utils\";\r\n\r\nimport \"../style.sass\";\r\n\r\nconst Message = ({\r\n  title,\r\n  text,\r\n  isRead,\r\n  isImportant,\r\n  handleCheck,\r\n  id,\r\n  isChecked,\r\n  client,\r\n  date,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [style, setStyle] = useState({});\r\n\r\n  const iconName = isRead ? \"envelope open outline\" : \"envelope outline\";\r\n\r\n  const handleChange = () => handleCheck(id);\r\n  const handleContextMenu = (e) => e.preventDefault();\r\n  const handleMouseLeave = () => isOpen && setIsOpen(false);\r\n  const handleMouseDown = (e) => {\r\n    e.preventDefault();\r\n    e.button === 2 && setIsOpen(!isOpen);\r\n  };\r\n  const handleClick = () => {\r\n    dispatch(\r\n      setActiveMessage({\r\n        title: title,\r\n        text: text,\r\n        client: client,\r\n        date: date,\r\n      })\r\n    );\r\n    history.push(`mail/${id}`);\r\n  };\r\n\r\n  const messageContainerPadding = { paddingLeft: isOpen ? \"100px\" : \"0px\" };\r\n\r\n  useEffect(() => {\r\n    const calcDelay = () => {\r\n      const delay = id * 2;\r\n      if (delay < 10) {\r\n        return \"0\" + delay;\r\n      }\r\n      return delay;\r\n    };\r\n\r\n    const style = {\r\n      transitionDelay: `0.${calcDelay()}s`,\r\n      opacity: 1,\r\n    };\r\n\r\n    setTimeout(() => setStyle(style), 0);\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"messageComponent-hover\" onMouseLeave={handleMouseLeave}>\r\n      <div\r\n        className=\"messageComponent\"\r\n        style={{ ...style, ...messageContainerPadding }}\r\n      >\r\n        <div className=\"deleteMessage\">\r\n          <div className=\"actionIcon\">\r\n            <Icon size=\"big\" name=\"trash alternate\" />\r\n          </div>\r\n\r\n          <div className=\"actionIcon\">\r\n            <Icon size=\"big\" name=\"warning\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"messageContainer\">\r\n          <Card>\r\n            <div\r\n              className=\"messageContent\"\r\n              onContextMenu={handleContextMenu}\r\n              onMouseDown={handleMouseDown}\r\n            >\r\n              <div className=\"indicator\">\r\n                {!isRead && <div className=\"readPoint\"></div>}\r\n\r\n                {isImportant && <div className=\"importantPoint\"></div>}\r\n              </div>\r\n\r\n              <div className=\"checkboxContainer\">\r\n                <div className=\"checkbox\">\r\n                  <Checkbox checked={isChecked} onChange={handleChange} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"redirect\" onClick={handleClick}>\r\n                <div className=\"image\">\r\n                  <Icon size=\"huge\" name={iconName}></Icon>\r\n                </div>\r\n\r\n                <div className=\"messageInfo\">\r\n                  <div className=\"messageMeta\">\r\n                    <div className=\"title\">\r\n                      <strong>{client}</strong>\r\n                    </div>\r\n\r\n                    <div className=\"date\">{dateParse(date)}</div>\r\n                  </div>\r\n\r\n                  <div className=\"messageText\">\r\n                    <div className=\"title\">\r\n                      <strong>{title}</strong>\r\n                    </div>\r\n\r\n                    <div className=\"text\">{text}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Message);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Label } from \"semantic-ui-react\";\r\n\r\nimport { themeStyle } from \"constants/themingStyles\";\r\nimport { setTab } from \"redux/actions\";\r\nimport {\r\n  selectTheme,\r\n  selectActiveTab,\r\n  selectSortedMessages,\r\n} from \"redux/selectors\";\r\n\r\nimport Card from \"containers/card\";\r\nimport Message from \"./message\";\r\nimport Pagination from \"containers/pagination\";\r\n\r\nexport const Content = ({ handleCheck }) => {\r\n  const tabs = useSelector(selectSortedMessages);\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const content = tabs[activeTab];\r\n\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState();\r\n  const [displayedMessages, setDisplayedMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (content) {\r\n      setDisplayedMessages(\r\n        content.slice((page - 1) * pageSize, page * pageSize)\r\n      );\r\n      setPageCount(Math.ceil(content.length / pageSize));\r\n    }\r\n  }, [content, page, pageSize]);\r\n\r\n  const handlers = {\r\n    handleChangePageSize: (e, { value }) => {\r\n      setPageSize(value);\r\n      setPage(1);\r\n    },\r\n    handleChangePage: setPage,\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <>\r\n        <div className=\"messagesInnerArea\">\r\n          {displayedMessages.length > 0 ? (\r\n            displayedMessages.map((item, index) => (\r\n              <Message\r\n                {...item}\r\n                handleCheck={handleCheck}\r\n                index={index}\r\n                key={index}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"emptyMessage\">Empty</div>\r\n          )}\r\n        </div>\r\n        <div className=\"messagesPagination\">\r\n          <Pagination\r\n            handlers={handlers}\r\n            pageSize={pageSize}\r\n            page={page}\r\n            pageCount={pageCount}\r\n          />\r\n        </div>\r\n      </>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const Tab = ({ title, messagesCounter, locale }) => {\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const theme = useSelector(selectTheme);\r\n  const dispatch = useDispatch();\r\n\r\n  const isActive = activeTab === title;\r\n  const activeColor = theme === \"dark\" ? \"white\" : \"grey\";\r\n  const borderColor = isActive ? activeColor : \"transparent\";\r\n  const tabStyle = { borderBottom: `2px solid ${borderColor}` };\r\n\r\n  const handleClick = () => dispatch(setTab(title));\r\n\r\n  return (\r\n    <div style={tabStyle} className=\"tab\" key={title} onClick={handleClick}>\r\n      <span style={themeStyle[theme]}>{locale.tabs[title]}</span>\r\n      {messagesCounter && <Label>{messagesCounter}</Label>}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst Tabs = ({ tabs = [], children }) => {\r\n  return (\r\n    <div className=\"ui-tabs\">\r\n      <div className=\"ui-tabs_tabsContainer\">{tabs}</div>\r\n      <div className=\"ui-tabs_content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Tabs);\r\n","import React from \"react\";\r\n\r\nimport TabsComponent from \"./component\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst TabsContainer = (props) => {\r\n  return <TabsComponent {...props} />;\r\n};\r\n\r\nexport default React.memo(TabsContainer);\r\n","import React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Input } from \"semantic-ui-react\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport \"./style.sass\";\r\nimport { selectActiveTab, selectSortedMessages } from \"redux/selectors\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport { Tab, Content } from \"./components/tab\";\r\nimport Tabs from \"containers/tabs\";\r\nimport WithLoader from \"containers/withLoader\";\r\n\r\nconst MailPageComponent = ({\r\n  handleCheck,\r\n  handleCheckAll,\r\n  checked,\r\n  tabsNames,\r\n}) => {\r\n  const {\r\n    messages: { titles, mail },\r\n  } = useIntl();\r\n\r\n  const tabs = useSelector(selectSortedMessages);\r\n  const activeTab = useSelector(selectActiveTab);\r\n\r\n  const checkAll = () => handleCheckAll({ setCheck: true });\r\n  const unCheckAll = () => handleCheckAll({ setCheck: false });\r\n\r\n  const renderTabs = tabsNames.map((item, index) => (\r\n    <Tab\r\n      key={index}\r\n      locale={mail}\r\n      messagesCounter={tabs[item] ? tabs[item].length.toString() : \"0\"}\r\n      title={item}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <PageWithHeader title={titles.mail}>\r\n      <div className=\"mailBody\">\r\n        <div className=\"mailActions\">\r\n          <div className=\"buttons\">\r\n            <Button onClick={checkAll}>{mail.buttons.checkAll}</Button>\r\n\r\n            <Button onClick={unCheckAll}>{mail.buttons.uncheckAll}</Button>\r\n\r\n            <Button disabled={checked === 0}>\r\n              {mail.buttons.checkAsImportant}\r\n            </Button>\r\n\r\n            <Button disabled={checked === 0}>\r\n              {mail.buttons[activeTab === \"trash\" ? \"remove\" : \"removeToTrash\"]}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <Input placeholder={mail.searchPlaceholder} icon=\"search\" />\r\n          </div>\r\n        </div>\r\n\r\n        <Tabs tabs={renderTabs}>\r\n          <WithLoader>\r\n            <Content handleCheck={handleCheck} />\r\n          </WithLoader>\r\n        </Tabs>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default memo(MailPageComponent);\r\n","import React, { useEffect, useState, memo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nimport MainPageComponent from \"./component\";\r\n\r\nimport { getMessages } from \"ducks\";\r\nimport { tabsNames, tabFilter } from \"constants/messagesConstants\";\r\nimport { notificationSettings } from \"constants/notificationSettings\";\r\nimport { setMessages, setTabSortedMessages } from \"redux/actions\";\r\nimport { selectActiveTab, selectMessages } from \"redux/selectors\";\r\n\r\nconst helpUserNotify = () => {\r\n  const isShow = localStorage.getItem(\"mailNotify\");\r\n  console.log(isShow);\r\n\r\n  if (!isShow) {\r\n    localStorage.setItem(\"mailNotify\", \"showed\");\r\n    store.addNotification({\r\n      ...notificationSettings,\r\n      title: \"Подсказка\",\r\n      message:\r\n        \"Воспользуйтесь меню быстрого доступа, кликнув по сообщению правой кнопкой мыши\",\r\n      type: \"info\",\r\n      dismiss: {\r\n        duration: 25000,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nconst MailPageContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const activeTab = useSelector(selectActiveTab);\r\n  const messages = useSelector(selectMessages);\r\n\r\n  const [checked, setChecked] = useState(0);\r\n\r\n  const countChecked = (array) => {\r\n    setChecked(\r\n      array.reduce((accum, item) =>\r\n        typeof accum === \"object\"\r\n          ? accum.isChecked + item.isChecked\r\n          : accum + item.isChecked\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCheck = (id) => {\r\n    const checkedMessages = messages.map((item) => ({\r\n      ...item,\r\n      isChecked: item.id === id ? !item.isChecked : item.isChecked,\r\n    }));\r\n\r\n    const tabs = {};\r\n    tabsNames.forEach((item) => {\r\n      tabs[item] = checkedMessages.filter(tabFilter[item]);\r\n    });\r\n\r\n    dispatch(setMessages(checkedMessages));\r\n    dispatch(setTabSortedMessages(tabs));\r\n    countChecked(checkedMessages);\r\n  };\r\n  const handleCheckAll = ({ setCheck }) => {\r\n    const checkedMessages = messages.map((item) => ({\r\n      ...item,\r\n      isChecked: tabFilter[activeTab](item) ? setCheck : item.isChecked,\r\n    }));\r\n\r\n    const tabs = {};\r\n    tabsNames.forEach((item) => {\r\n      tabs[item] = checkedMessages.filter(tabFilter[item]);\r\n    });\r\n\r\n    dispatch(setMessages(checkedMessages));\r\n    dispatch(setTabSortedMessages(tabs));\r\n    countChecked(checkedMessages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    !messages &&\r\n      dispatch(\r\n        getMessages({\r\n          cancelToken: source.token,\r\n          successCallbackFromUI: (_) => {\r\n            helpUserNotify();\r\n          },\r\n        })\r\n      );\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [dispatch, messages]);\r\n\r\n  return (\r\n    <MainPageComponent\r\n      tabsNames={tabsNames}\r\n      messages={messages}\r\n      handleCheckAll={handleCheckAll}\r\n      handleCheck={handleCheck}\r\n      checked={checked}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(MailPageContainer);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport WithLoader from \"containers/withLoader\";\r\nimport { dateParse } from \"utils\";\r\nimport Card from \"containers/card\";\r\n\r\nimport { selectActiveMessage } from \"redux/selectors\";\r\n\r\nimport \"./style.sass\";\r\n\r\nconst MessageCheckPageComponent = ({ handleClickBack }) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  const activeMessage = useSelector(selectActiveMessage);\r\n\r\n  return (\r\n    <PageWithHeader title={titles.mail} subtitle={\"read\"}>\r\n      <div className=\"messagePage\">\r\n        <div className=\"messagePage-buttons\">\r\n          <Button onClick={handleClickBack}>Назад</Button>\r\n          <Button>В корзину</Button>\r\n          <Button>Отметить как важное</Button>\r\n        </div>\r\n\r\n        <Card>\r\n          <div className=\"messagePage-body\">\r\n            <WithLoader>\r\n              <div>\r\n                <div className=\"messagePage-Body__date\">\r\n                  <span>Дата: </span>\r\n                  {activeMessage && dateParse(activeMessage.date)}\r\n                </div>\r\n                <div className=\"messagePage-Body__from\">\r\n                  <span>От кого: </span>\r\n                  {activeMessage && activeMessage.client}\r\n                </div>\r\n                <div className=\"messagePage-Body__theme\">\r\n                  <span>Тема: </span>\r\n                  {activeMessage && activeMessage.title}\r\n                </div>\r\n                <div className=\"messagePage-Body__text\">\r\n                  <span>Сообщение: </span>\r\n                  {activeMessage && activeMessage.text}\r\n                </div>\r\n              </div>\r\n            </WithLoader>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default MessageCheckPageComponent;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { getMessages } from \"ducks\";\r\nimport { setActiveMessage } from \"redux/actions\";\r\n\r\nimport MessageCheckComponent from \"./component\";\r\n\r\nconst MessageCheckPageContainer = () => {\r\n  const history = useHistory();\r\n  const { message } = useParams();\r\n\r\n  const messages = useSelector((state) => state.messages.messages);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickBack = () => history.goBack();\r\n\r\n  useEffect(() => {\r\n    let source = axios.CancelToken.source();\r\n\r\n    !messages &&\r\n      dispatch(\r\n        getMessages({\r\n          cancelToken: source.token,\r\n          successCallback: (responseWithChecked) => {\r\n            const activeMessage = responseWithChecked.filter(\r\n              (item) => item.id.toString() === message.toString()\r\n            )[0];\r\n            dispatch(setActiveMessage(activeMessage));\r\n          },\r\n        })\r\n      );\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [messages, dispatch, message]);\r\n\r\n  return <MessageCheckComponent handleClickBack={handleClickBack} />;\r\n};\r\n\r\nexport default MessageCheckPageContainer;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst inputStyle = { display: \"none\" };\r\n\r\nconst AddPictureForm = () => {\r\n  const [uploadedImage, setUploadedImage] = useState();\r\n  const inputRef = useRef();\r\n\r\n  const handleClick = () => inputRef.current.click();\r\n  const handleChangeInput = (e) => setUploadedImage(e.target.value);\r\n\r\n  return (\r\n    <div className=\"form-text\">\r\n      <div className=\"form-text_title\">{uploadedImage || \"Выберите файл\"}</div>\r\n      <Button onClick={handleClick}>Выбрать файл</Button>\r\n\r\n      <input\r\n        type=\"file\"\r\n        style={inputStyle}\r\n        ref={inputRef}\r\n        onChange={handleChangeInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPictureForm;\r\n","import React from \"react\";\r\nimport { Form, TextArea } from \"semantic-ui-react\";\r\n\r\nconst AddTextForm = () => {\r\n  return (\r\n    <div className=\"form_textArea\">\r\n      <Form>\r\n        <TextArea placeholder=\"Введите текст\" />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTextForm;\r\n","import React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport \"./style.sass\";\r\n\r\nimport PageWithHeader from \"containers/pageWithHeader\";\r\nimport Modal from \"containers/modal\";\r\nimport AddPictureForm from \"./components/addPictureForm\";\r\nimport AddTextForm from \"./components/addTextForm\";\r\nimport Card from \"containers/card\";\r\n\r\nconst ProjectSavePageComponent = ({\r\n  onBack,\r\n  isTextModalShow,\r\n  isPictureModalShow,\r\n  handleToggleTextModal,\r\n  handleTogglePictureModal,\r\n}) => {\r\n  const {\r\n    messages: { titles },\r\n  } = useIntl();\r\n\r\n  return (\r\n    <PageWithHeader title={titles.projects} subtitle={\"read\"}>\r\n      <div className=\"projectsSaveBody\">\r\n        <div className=\"projectsSaveActions\">\r\n          <Button onClick={onBack}>Назад</Button>\r\n          <Button onClick={handleTogglePictureModal}>Добавить картинку</Button>\r\n          <Button onClick={handleToggleTextModal}>Добавить текст</Button>\r\n        </div>\r\n        <Card>\r\n          <div className=\"projectContent\">empty</div>\r\n        </Card>\r\n      </div>\r\n      <Modal\r\n        title=\"Добавить текст\"\r\n        isOpen={isTextModalShow}\r\n        handleClose={handleToggleTextModal}\r\n      >\r\n        <AddTextForm />\r\n      </Modal>\r\n      <Modal\r\n        title=\"Добавить картинку\"\r\n        isOpen={isPictureModalShow}\r\n        handleClose={handleTogglePictureModal}\r\n      >\r\n        <AddPictureForm />\r\n      </Modal>\r\n    </PageWithHeader>\r\n  );\r\n};\r\n\r\nexport default ProjectSavePageComponent;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ProjectSavePageComponent from \"./component\";\r\n\r\nconst ProjectSavePageContainer = () => {\r\n  const history = useHistory();\r\n\r\n  const [isTextModalShow, setIsTextModalShow] = useState(false);\r\n  const [isPictureModalShow, setIsPictureModalShow] = useState(false);\r\n\r\n  const onBack = () => history.goBack();\r\n\r\n  const handleToggleTextModal = () => setIsTextModalShow(!isTextModalShow);\r\n  const handleTogglePictureModal = () =>\r\n    setIsPictureModalShow(!isPictureModalShow);\r\n\r\n  return (\r\n    <ProjectSavePageComponent\r\n      isTextModalShow={isTextModalShow}\r\n      isPictureModalShow={isPictureModalShow}\r\n      onBack={onBack}\r\n      handleToggleTextModal={handleToggleTextModal}\r\n      handleTogglePictureModal={handleTogglePictureModal}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProjectSavePageContainer;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport AuthComponent from \"./pages/auth\";\r\nimport MainPageComponent from \"./pages/main\";\r\nimport SettingsPageComponent from \"./pages/settings\";\r\nimport ProjectsPageComponent from \"./pages/projects\";\r\nimport MailPageComponent from \"./pages/mail\";\r\nimport MessageCheckPageComponent from \"./pages/messageCheck\";\r\nimport ProjectsSavePageComponent from \"./pages/projectsSave\";\r\n\r\nconst customRoute = ({ path, getToken }) => ({ children, ...props }) => {\r\n  const renderFunc = ({ location }) => {\r\n    const redirectConfig = {\r\n      pathname: path,\r\n      state: { from: location },\r\n    };\r\n\r\n    return getToken() ? children : <Redirect to={redirectConfig} />;\r\n  };\r\n\r\n  return <Route path={props.path} render={renderFunc}></Route>;\r\n};\r\n\r\nconst ProtectedRoute = customRoute({\r\n  path: \"/auth\",\r\n  getToken: () => localStorage.getItem(\"token\"),\r\n});\r\n\r\nconst AuthRoute = customRoute({\r\n  path: \"/\",\r\n  getToken: () => !localStorage.getItem(\"token\"),\r\n});\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <ProtectedRoute path=\"/mail/:message\">\r\n        <MessageCheckPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/projects/:project\">\r\n        <ProjectsSavePageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/projects\">\r\n        <ProjectsPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/mail\">\r\n        <MailPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <ProtectedRoute path=\"/settings\">\r\n        <SettingsPageComponent />\r\n      </ProtectedRoute>\r\n\r\n      <AuthRoute path=\"/auth\">\r\n        <AuthComponent />\r\n      </AuthRoute>\r\n\r\n      <ProtectedRoute path=\"/\">\r\n        <MainPageComponent />\r\n      </ProtectedRoute>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport ReactNotification from \"react-notifications-component\";\r\n\r\nimport Routes from \"./routes\";\r\n\r\nimport { messages_ru } from \"locale/messages_ru\";\r\nimport { messages_en } from \"locale/messages_en\";\r\nimport { selectLanguage } from \"redux/selectors\";\r\n\r\nconst messages = {\r\n  en: messages_en,\r\n  ru: messages_ru,\r\n};\r\n\r\nconst App = () => {\r\n  const language = useSelector(selectLanguage);\r\n\r\n  return (\r\n    <>\r\n      <ReactNotification />\r\n      <IntlProvider locale={language} messages={messages[language]}>\r\n        <Router>\r\n          <Routes />\r\n        </Router>\r\n      </IntlProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const messages_en = {\r\n  titles: {\r\n    home: \"Main\",\r\n    projects: \"Projects\",\r\n    mail: \"Mail\",\r\n    settings: \"Settings\",\r\n    logout: \"Exit\",\r\n  },\r\n  mail: {\r\n    empty: \"Empty\",\r\n    searchPlaceholder: \"Search...\",\r\n    buttons: {\r\n      checkAll: \"Select all\",\r\n      uncheckAll: \"Remove selection\",\r\n      checkAsImportant: \"Check as important\",\r\n      removeToTrash: \"Remove to trash\",\r\n      remove: \"Remove\",\r\n    },\r\n    tabs: {\r\n      all: \"All\",\r\n      read: \"Read\",\r\n      unread: \"Unread\",\r\n      important: \"Important\",\r\n      trash: \"Trash\",\r\n    },\r\n  },\r\n  settings: {\r\n    theme: \"Dark theme\",\r\n    language: \"Language\",\r\n    password: \"Change password\",\r\n    userData: \"Change contact information\",\r\n    enterPasswordPlaceholder: \"Enter new password\",\r\n    repeatPasswordPlaceholder: \"Repeat new password\",\r\n    savePassword: \"Save\",\r\n    reset: \"Reset settings\",\r\n    resetButton: \"agree\",\r\n  },\r\n  home: {\r\n    title: \"Welcome, Administrator\",\r\n    visitors: {\r\n      title: \"New visitors for last time\",\r\n      day: \"Today\",\r\n      week: \"This week\",\r\n      month: \"This month\",\r\n    },\r\n    messages: {\r\n      title: \"New messages\",\r\n    },\r\n  },\r\n  projects: {\r\n    title: \"Projects list\",\r\n    add: \"Add project\",\r\n    delete: \"Delete checked\",\r\n    update: \"Edit\",\r\n    search: \"Search...\",\r\n    dense: \"Columns dense\",\r\n  },\r\n  table: {\r\n    rows: \"Rows per page \",\r\n    columnNames: {\r\n      name: \"Name\",\r\n      type: \"Type\",\r\n      client: \"Client\",\r\n      createDate: \"Creation date\",\r\n    },\r\n  },\r\n};\r\n","export const messages_ru = {\r\n  titles: {\r\n    home: \"Главная\",\r\n    projects: \"Проекты\",\r\n    mail: \"Почта\",\r\n    settings: \"Настройки\",\r\n    logout: \"Выход\",\r\n  },\r\n  mail: {\r\n    empty: \"Пусто\",\r\n    searchPlaceholder: \"Найти...\",\r\n    buttons: {\r\n      checkAll: \"Выделить все\",\r\n      uncheckAll: \"Снять выделение\",\r\n      checkAsImportant: \"Отметить как важное\",\r\n      removeToTrash: \"Поместить в корзину\",\r\n      remove: \"Удалить\",\r\n    },\r\n    tabs: {\r\n      all: \"Все\",\r\n      read: \"Прочитанные\",\r\n      unread: \"Непрочитанные\",\r\n      important: \"Важные\",\r\n      trash: \"Корзина\",\r\n    },\r\n  },\r\n  settings: {\r\n    theme: \"Темная тема\",\r\n    language: \"Язык\",\r\n    password: \"Изменить пароль\",\r\n    userData: \"Изменить контактные данные\",\r\n    enterPasswordPlaceholder: \"Введите новый пароль\",\r\n    repeatPasswordPlaceholder: \"Повторите новый пароль\",\r\n    savePassword: \"Сохранить\",\r\n    reset: \"Сброс настроек\",\r\n    resetButton: \"Подтвердить\",\r\n  },\r\n  home: {\r\n    title: \"Добро пожаловать, Администратор\",\r\n    visitors: {\r\n      title: \"Посетители за последнее время\",\r\n      day: \"сегодня\",\r\n      week: \"за неделю\",\r\n      month: \"за месяц\",\r\n    },\r\n    messages: {\r\n      title: \"Новые сообщения\",\r\n    },\r\n  },\r\n  projects: {\r\n    title: \"Список проектов\",\r\n    add: \"Добавить проект\",\r\n    delete: \"Удалить выбранное\",\r\n    update: \"Редактировать\",\r\n    search: \"Найти...\",\r\n    dense: \"Сжатие столбцов\",\r\n  },\r\n  table: {\r\n    rows: \"Количество строк \",\r\n    columnNames: {\r\n      name: \"Название\",\r\n      type: \"Тип проекта\",\r\n      client: \"Клиент\",\r\n      createDate: \"Дата создания\",\r\n    },\r\n  },\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  SET_MESSAGES,\r\n  SET_THEME,\r\n  SET_LANGUAGE,\r\n  SET_APP_STATE,\r\n  SET_TAB,\r\n  SET_TAB_SORTED_MESSAGES,\r\n  SET_ACTIVE_MESSAGE,\r\n  SET_ACTIVE_PROJECT,\r\n  SET_PROJECTS,\r\n  SET_NEW_MESSAGES_COUNTER,\r\n  SET_VISITS,\r\n} from \"./types\";\r\n\r\nconst messagesInitialState = {\r\n  messages: null,\r\n  counter: 0,\r\n  tabSortedMessages: [],\r\n  activeMessage: null,\r\n  activeTab: \"all\",\r\n};\r\n\r\nconst visitsInitialState = {\r\n  visits: { day: 0, week: 0, month: 0 },\r\n};\r\n\r\nconst projectsInitialState = {\r\n  projects: null,\r\n  activeProject: \"all\",\r\n};\r\n\r\nconst themeInitialState = {\r\n  theme: localStorage.getItem(\"theme\") || \"light\",\r\n};\r\n\r\nconst languageInitialState = {\r\n  language: localStorage.getItem(\"lang\") || \"en\",\r\n};\r\n\r\nconst appInitialState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const messagesReducer = (state = messagesInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NEW_MESSAGES_COUNTER:\r\n      return { ...state, counter: action.payload };\r\n    case SET_MESSAGES:\r\n      return { ...state, messages: action.payload };\r\n    case SET_TAB_SORTED_MESSAGES:\r\n      return { ...state, tabSortedMessages: action.payload };\r\n    case SET_TAB:\r\n      return { ...state, activeTab: action.payload };\r\n    case SET_ACTIVE_MESSAGE:\r\n      return { ...state, activeMessage: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const visitsReducer = (state = visitsInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_VISITS:\r\n      return { ...state, visits: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const projectsReducer = (state = projectsInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROJECTS:\r\n      return { ...state, projects: action.payload };\r\n    case SET_ACTIVE_PROJECT:\r\n      return { ...state, activeProjects: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const themeReducer = (state = themeInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_THEME:\r\n      return { ...state, theme: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const languageReducer = (state = languageInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LANGUAGE:\r\n      return { ...state, language: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const appStateReducer = (state = appInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_APP_STATE:\r\n      return { ...state, isLoading: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport {\r\n  messagesReducer,\r\n  themeReducer,\r\n  languageReducer,\r\n  appStateReducer,\r\n  projectsReducer,\r\n  visitsReducer,\r\n} from \"./reducers\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  messages: messagesReducer,\r\n  projects: projectsReducer,\r\n  theme: themeReducer,\r\n  language: languageReducer,\r\n  appState: appStateReducer,\r\n  visits: visitsReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"normalize.css\";\r\nimport \"./index.sass\";\r\nimport App from \"./App\";\r\nimport \"animate.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}